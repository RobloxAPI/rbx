// This file was generated by tools/generate. DO NOT EDIT!

package class

import (
	"github.com/robloxapi/rbx/desc"
	"github.com/robloxapi/rbx/enum"
	"github.com/robloxapi/rbx/types"
)

var list = []*desc.Class{
	Instance,
	ABTestService,
	Accoutrement,
	Accessory,
	Hat,
	AdService,
	AdvancedDragger,
	AnalyticsService,
	Animation,
	AnimationController,
	AnimationTrack,
	Animator,
	AssetService,
	Attachment,
	Backpack,
	BackpackItem,
	HopperBin,
	Tool,
	Flag,
	BadgeService,
	BasePlayerGui,
	CoreGui,
	PlayerGui,
	StarterGui,
	Beam,
	BindableEvent,
	BindableFunction,
	BodyMover,
	BodyAngularVelocity,
	BodyForce,
	BodyGyro,
	BodyPosition,
	BodyThrust,
	BodyVelocity,
	RocketPropulsion,
	BrowserService,
	CacheableContentProvider,
	MeshContentProvider,
	SolidModelContentProvider,
	Camera,
	ChangeHistoryService,
	CharacterAppearance,
	BodyColors,
	CharacterMesh,
	Clothing,
	Pants,
	Shirt,
	ShirtGraphic,
	Skin,
	Chat,
	ClickDetector,
	ClusterPacketCache,
	CollectionService,
	Configuration,
	Constraint,
	AlignOrientation,
	AlignPosition,
	AngularVelocity,
	BallSocketConstraint,
	HingeConstraint,
	LineForce,
	RodConstraint,
	RopeConstraint,
	SlidingBallConstraint,
	CylindricalConstraint,
	PrismaticConstraint,
	SpringConstraint,
	Torque,
	VectorForce,
	ContentProvider,
	ContextActionService,
	Controller,
	HumanoidController,
	SkateboardController,
	VehicleController,
	ControllerService,
	CookiesService,
	CorePackages,
	CoreScriptSyncService,
	CustomEvent,
	CustomEventReceiver,
	DataModelMesh,
	BevelMesh,
	BlockMesh,
	CylinderMesh,
	FileMesh,
	SpecialMesh,
	DataModelSession,
	DataStoreService,
	Debris,
	DebugSettings,
	DebuggerBreakpoint,
	DebuggerManager,
	DebuggerWatch,
	Dialog,
	DialogChoice,
	DraftsService,
	Dragger,
	Explosion,
	FaceInstance,
	Decal,
	Texture,
	Feature,
	Hole,
	MotorFeature,
	File,
	Fire,
	FlagStandService,
	FlyweightService,
	CSGDictionaryService,
	NonReplicatedCSGDictionaryService,
	Folder,
	ForceField,
	FriendService,
	FunctionalTest,
	GamePassService,
	GameSettings,
	GamepadService,
	Geometry,
	GlobalDataStore,
	OrderedDataStore,
	GoogleAnalyticsConfiguration,
	GroupService,
	GuiBase,
	GuiBase2d,
	GuiObject,
	Frame,
	GuiButton,
	ImageButton,
	TextButton,
	GuiLabel,
	ImageLabel,
	TextLabel,
	ScrollingFrame,
	TextBox,
	ViewportFrame,
	LayerCollector,
	BillboardGui,
	PluginGui,
	DockWidgetPluginGui,
	QWidgetPluginGui,
	ScreenGui,
	GuiMain,
	SurfaceGui,
	GuiBase3d,
	FloorWire,
	PVAdornment,
	HandleAdornment,
	BoxHandleAdornment,
	ConeHandleAdornment,
	CylinderHandleAdornment,
	ImageHandleAdornment,
	LineHandleAdornment,
	SphereHandleAdornment,
	ParabolaAdornment,
	SelectionBox,
	SelectionSphere,
	PartAdornment,
	HandlesBase,
	ArcHandles,
	Handles,
	SurfaceSelection,
	SelectionLasso,
	SelectionPartLasso,
	SelectionPointLasso,
	GuiService,
	GuidRegistryService,
	HapticService,
	Hopper,
	HttpRbxApiService,
	HttpRequest,
	HttpService,
	Humanoid,
	HumanoidDescription,
	InputObject,
	InsertService,
	JointInstance,
	DynamicRotate,
	RotateP,
	RotateV,
	Glue,
	ManualSurfaceJointInstance,
	ManualGlue,
	ManualWeld,
	Motor,
	Motor6D,
	Rotate,
	Snap,
	VelocityMotor,
	Weld,
	JointsService,
	KeyboardService,
	Keyframe,
	KeyframeMarker,
	KeyframeSequence,
	KeyframeSequenceProvider,
	Light,
	PointLight,
	SpotLight,
	SurfaceLight,
	Lighting,
	LocalStorageService,
	AppStorageService,
	UserStorageService,
	LocalizationService,
	LocalizationTable,
	LogService,
	LoginService,
	LuaSettings,
	LuaSourceContainer,
	BaseScript,
	CoreScript,
	Script,
	LocalScript,
	ModuleScript,
	LuaWebService,
	MarketplaceService,
	MemStorageConnection,
	MemStorageService,
	Message,
	Hint,
	MessagingService,
	Mouse,
	PlayerMouse,
	PluginMouse,
	MouseService,
	MultipleDocumentInterfaceInstance,
	NetworkMarker,
	NetworkPeer,
	NetworkClient,
	NetworkServer,
	NetworkReplicator,
	ClientReplicator,
	ServerReplicator,
	NetworkSettings,
	NoCollisionConstraint,
	NotificationService,
	PVInstance,
	BasePart,
	CornerWedgePart,
	FormFactorPart,
	Part,
	FlagStand,
	Platform,
	Seat,
	SkateboardPlatform,
	SpawnLocation,
	WedgePart,
	Terrain,
	TriangleMeshPart,
	MeshPart,
	PartOperation,
	NegateOperation,
	UnionOperation,
	TrussPart,
	VehicleSeat,
	Model,
	Status,
	WorldRoot,
	Workspace,
	WorldModel,
	PackageLink,
	PackageService,
	Pages,
	DataStorePages,
	FriendPages,
	InventoryPages,
	EmotesPages,
	StandardPages,
	PartOperationAsset,
	ParticleEmitter,
	Path,
	PathfindingService,
	PhysicsPacketCache,
	PhysicsService,
	PhysicsSettings,
	Player,
	PlayerScripts,
	Players,
	Plugin,
	PluginAction,
	PluginDragEvent,
	PluginGuiService,
	PluginManager,
	PluginMenu,
	PluginToolbar,
	PluginToolbarButton,
	PointsService,
	PolicyService,
	Pose,
	PostEffect,
	BloomEffect,
	BlurEffect,
	ColorCorrectionEffect,
	SunRaysEffect,
	RbxAnalyticsService,
	ReflectionMetadata,
	ReflectionMetadataCallbacks,
	ReflectionMetadataClasses,
	ReflectionMetadataEnums,
	ReflectionMetadataEvents,
	ReflectionMetadataFunctions,
	ReflectionMetadataItem,
	ReflectionMetadataClass,
	ReflectionMetadataEnum,
	ReflectionMetadataEnumItem,
	ReflectionMetadataMember,
	ReflectionMetadataProperties,
	ReflectionMetadataYieldFunctions,
	RemoteEvent,
	RemoteFunction,
	RenderSettings,
	RenderingTest,
	ReplicatedFirst,
	ReplicatedStorage,
	RobloxPluginGuiService,
	RobloxReplicatedStorage,
	RunService,
	RuntimeScriptService,
	ScriptContext,
	ScriptDebugger,
	ScriptService,
	Selection,
	ServerScriptService,
	ServerStorage,
	ServiceProvider,
	DataModel,
	GenericSettings,
	AnalysticsSettings,
	GlobalSettings,
	UserSettings,
	Sky,
	Smoke,
	SocialService,
	Sound,
	SoundEffect,
	ChorusSoundEffect,
	CompressorSoundEffect,
	DistortionSoundEffect,
	EchoSoundEffect,
	EqualizerSoundEffect,
	FlangeSoundEffect,
	PitchShiftSoundEffect,
	ReverbSoundEffect,
	TremoloSoundEffect,
	SoundGroup,
	SoundService,
	Sparkles,
	SpawnerService,
	StandalonePluginScripts,
	StarterGear,
	StarterPack,
	StarterPlayer,
	StarterPlayerScripts,
	StarterCharacterScripts,
	Stats,
	StatsItem,
	RunningAverageItemDouble,
	RunningAverageItemInt,
	RunningAverageTimeIntervalItem,
	TotalCountTimeIntervalItem,
	StopWatchReporter,
	Studio,
	StudioData,
	StudioService,
	StudioTheme,
	TaskScheduler,
	Team,
	Teams,
	TeleportService,
	TerrainRegion,
	TestService,
	TextFilterResult,
	TextService,
	ThirdPartyUserService,
	TimerService,
	TouchInputService,
	TouchTransmitter,
	Trail,
	Translator,
	TweenBase,
	Tween,
	TweenService,
	UGCValidationService,
	UIBase,
	UIComponent,
	UIConstraint,
	UIAspectRatioConstraint,
	UISizeConstraint,
	UITextSizeConstraint,
	UILayout,
	UIGridStyleLayout,
	UIGridLayout,
	UIInlineLayout,
	UIListLayout,
	UIPageLayout,
	UITableLayout,
	UIPadding,
	UIScale,
	UserGameSettings,
	UserInputService,
	VRService,
	ValueBase,
	BinaryStringValue,
	BoolValue,
	BrickColorValue,
	CFrameValue,
	Color3Value,
	DoubleConstrainedValue,
	IntConstrainedValue,
	IntValue,
	NumberValue,
	ObjectValue,
	RayValue,
	StringValue,
	Vector3Value,
	VersionControlService,
	VirtualInputManager,
	VirtualUser,
	Visit,
	WeldConstraint,
}

var classes = map[string]*desc.Class{
	"ABTestService":                     ABTestService,
	"Accessory":                         Accessory,
	"Accoutrement":                      Accoutrement,
	"AdService":                         AdService,
	"AdvancedDragger":                   AdvancedDragger,
	"AlignOrientation":                  AlignOrientation,
	"AlignPosition":                     AlignPosition,
	"AnalysticsSettings":                AnalysticsSettings,
	"AnalyticsService":                  AnalyticsService,
	"AngularVelocity":                   AngularVelocity,
	"Animation":                         Animation,
	"AnimationController":               AnimationController,
	"AnimationTrack":                    AnimationTrack,
	"Animator":                          Animator,
	"AppStorageService":                 AppStorageService,
	"ArcHandles":                        ArcHandles,
	"AssetService":                      AssetService,
	"Attachment":                        Attachment,
	"Backpack":                          Backpack,
	"BackpackItem":                      BackpackItem,
	"BadgeService":                      BadgeService,
	"BallSocketConstraint":              BallSocketConstraint,
	"BasePart":                          BasePart,
	"BasePlayerGui":                     BasePlayerGui,
	"BaseScript":                        BaseScript,
	"Beam":                              Beam,
	"BevelMesh":                         BevelMesh,
	"BillboardGui":                      BillboardGui,
	"BinaryStringValue":                 BinaryStringValue,
	"BindableEvent":                     BindableEvent,
	"BindableFunction":                  BindableFunction,
	"BlockMesh":                         BlockMesh,
	"BloomEffect":                       BloomEffect,
	"BlurEffect":                        BlurEffect,
	"BodyAngularVelocity":               BodyAngularVelocity,
	"BodyColors":                        BodyColors,
	"BodyForce":                         BodyForce,
	"BodyGyro":                          BodyGyro,
	"BodyMover":                         BodyMover,
	"BodyPosition":                      BodyPosition,
	"BodyThrust":                        BodyThrust,
	"BodyVelocity":                      BodyVelocity,
	"BoolValue":                         BoolValue,
	"BoxHandleAdornment":                BoxHandleAdornment,
	"BrickColorValue":                   BrickColorValue,
	"BrowserService":                    BrowserService,
	"CFrameValue":                       CFrameValue,
	"CSGDictionaryService":              CSGDictionaryService,
	"CacheableContentProvider":          CacheableContentProvider,
	"Camera":                            Camera,
	"ChangeHistoryService":              ChangeHistoryService,
	"CharacterAppearance":               CharacterAppearance,
	"CharacterMesh":                     CharacterMesh,
	"Chat":                              Chat,
	"ChorusSoundEffect":                 ChorusSoundEffect,
	"ClickDetector":                     ClickDetector,
	"ClientReplicator":                  ClientReplicator,
	"Clothing":                          Clothing,
	"ClusterPacketCache":                ClusterPacketCache,
	"CollectionService":                 CollectionService,
	"Color3Value":                       Color3Value,
	"ColorCorrectionEffect":             ColorCorrectionEffect,
	"CompressorSoundEffect":             CompressorSoundEffect,
	"ConeHandleAdornment":               ConeHandleAdornment,
	"Configuration":                     Configuration,
	"Constraint":                        Constraint,
	"ContentProvider":                   ContentProvider,
	"ContextActionService":              ContextActionService,
	"Controller":                        Controller,
	"ControllerService":                 ControllerService,
	"CookiesService":                    CookiesService,
	"CoreGui":                           CoreGui,
	"CorePackages":                      CorePackages,
	"CoreScript":                        CoreScript,
	"CoreScriptSyncService":             CoreScriptSyncService,
	"CornerWedgePart":                   CornerWedgePart,
	"CustomEvent":                       CustomEvent,
	"CustomEventReceiver":               CustomEventReceiver,
	"CylinderHandleAdornment":           CylinderHandleAdornment,
	"CylinderMesh":                      CylinderMesh,
	"CylindricalConstraint":             CylindricalConstraint,
	"DataModel":                         DataModel,
	"DataModelMesh":                     DataModelMesh,
	"DataModelSession":                  DataModelSession,
	"DataStorePages":                    DataStorePages,
	"DataStoreService":                  DataStoreService,
	"Debris":                            Debris,
	"DebugSettings":                     DebugSettings,
	"DebuggerBreakpoint":                DebuggerBreakpoint,
	"DebuggerManager":                   DebuggerManager,
	"DebuggerWatch":                     DebuggerWatch,
	"Decal":                             Decal,
	"Dialog":                            Dialog,
	"DialogChoice":                      DialogChoice,
	"DistortionSoundEffect":             DistortionSoundEffect,
	"DockWidgetPluginGui":               DockWidgetPluginGui,
	"DoubleConstrainedValue":            DoubleConstrainedValue,
	"DraftsService":                     DraftsService,
	"Dragger":                           Dragger,
	"DynamicRotate":                     DynamicRotate,
	"EchoSoundEffect":                   EchoSoundEffect,
	"EmotesPages":                       EmotesPages,
	"EqualizerSoundEffect":              EqualizerSoundEffect,
	"Explosion":                         Explosion,
	"FaceInstance":                      FaceInstance,
	"Feature":                           Feature,
	"File":                              File,
	"FileMesh":                          FileMesh,
	"Fire":                              Fire,
	"Flag":                              Flag,
	"FlagStand":                         FlagStand,
	"FlagStandService":                  FlagStandService,
	"FlangeSoundEffect":                 FlangeSoundEffect,
	"FloorWire":                         FloorWire,
	"FlyweightService":                  FlyweightService,
	"Folder":                            Folder,
	"ForceField":                        ForceField,
	"FormFactorPart":                    FormFactorPart,
	"Frame":                             Frame,
	"FriendPages":                       FriendPages,
	"FriendService":                     FriendService,
	"FunctionalTest":                    FunctionalTest,
	"GamePassService":                   GamePassService,
	"GameSettings":                      GameSettings,
	"GamepadService":                    GamepadService,
	"GenericSettings":                   GenericSettings,
	"Geometry":                          Geometry,
	"GlobalDataStore":                   GlobalDataStore,
	"GlobalSettings":                    GlobalSettings,
	"Glue":                              Glue,
	"GoogleAnalyticsConfiguration":      GoogleAnalyticsConfiguration,
	"GroupService":                      GroupService,
	"GuiBase":                           GuiBase,
	"GuiBase2d":                         GuiBase2d,
	"GuiBase3d":                         GuiBase3d,
	"GuiButton":                         GuiButton,
	"GuiLabel":                          GuiLabel,
	"GuiMain":                           GuiMain,
	"GuiObject":                         GuiObject,
	"GuiService":                        GuiService,
	"GuidRegistryService":               GuidRegistryService,
	"HandleAdornment":                   HandleAdornment,
	"Handles":                           Handles,
	"HandlesBase":                       HandlesBase,
	"HapticService":                     HapticService,
	"Hat":                               Hat,
	"HingeConstraint":                   HingeConstraint,
	"Hint":                              Hint,
	"Hole":                              Hole,
	"Hopper":                            Hopper,
	"HopperBin":                         HopperBin,
	"HttpRbxApiService":                 HttpRbxApiService,
	"HttpRequest":                       HttpRequest,
	"HttpService":                       HttpService,
	"Humanoid":                          Humanoid,
	"HumanoidController":                HumanoidController,
	"HumanoidDescription":               HumanoidDescription,
	"ImageButton":                       ImageButton,
	"ImageHandleAdornment":              ImageHandleAdornment,
	"ImageLabel":                        ImageLabel,
	"InputObject":                       InputObject,
	"InsertService":                     InsertService,
	"Instance":                          Instance,
	"IntConstrainedValue":               IntConstrainedValue,
	"IntValue":                          IntValue,
	"InventoryPages":                    InventoryPages,
	"JointInstance":                     JointInstance,
	"JointsService":                     JointsService,
	"KeyboardService":                   KeyboardService,
	"Keyframe":                          Keyframe,
	"KeyframeMarker":                    KeyframeMarker,
	"KeyframeSequence":                  KeyframeSequence,
	"KeyframeSequenceProvider":          KeyframeSequenceProvider,
	"LayerCollector":                    LayerCollector,
	"Light":                             Light,
	"Lighting":                          Lighting,
	"LineForce":                         LineForce,
	"LineHandleAdornment":               LineHandleAdornment,
	"LocalScript":                       LocalScript,
	"LocalStorageService":               LocalStorageService,
	"LocalizationService":               LocalizationService,
	"LocalizationTable":                 LocalizationTable,
	"LogService":                        LogService,
	"LoginService":                      LoginService,
	"LuaSettings":                       LuaSettings,
	"LuaSourceContainer":                LuaSourceContainer,
	"LuaWebService":                     LuaWebService,
	"ManualGlue":                        ManualGlue,
	"ManualSurfaceJointInstance":        ManualSurfaceJointInstance,
	"ManualWeld":                        ManualWeld,
	"MarketplaceService":                MarketplaceService,
	"MemStorageConnection":              MemStorageConnection,
	"MemStorageService":                 MemStorageService,
	"MeshContentProvider":               MeshContentProvider,
	"MeshPart":                          MeshPart,
	"Message":                           Message,
	"MessagingService":                  MessagingService,
	"Model":                             Model,
	"ModuleScript":                      ModuleScript,
	"Motor":                             Motor,
	"Motor6D":                           Motor6D,
	"MotorFeature":                      MotorFeature,
	"Mouse":                             Mouse,
	"MouseService":                      MouseService,
	"MultipleDocumentInterfaceInstance": MultipleDocumentInterfaceInstance,
	"NegateOperation":                   NegateOperation,
	"NetworkClient":                     NetworkClient,
	"NetworkMarker":                     NetworkMarker,
	"NetworkPeer":                       NetworkPeer,
	"NetworkReplicator":                 NetworkReplicator,
	"NetworkServer":                     NetworkServer,
	"NetworkSettings":                   NetworkSettings,
	"NoCollisionConstraint":             NoCollisionConstraint,
	"NonReplicatedCSGDictionaryService": NonReplicatedCSGDictionaryService,
	"NotificationService":               NotificationService,
	"NumberValue":                       NumberValue,
	"ObjectValue":                       ObjectValue,
	"OrderedDataStore":                  OrderedDataStore,
	"PVAdornment":                       PVAdornment,
	"PVInstance":                        PVInstance,
	"PackageLink":                       PackageLink,
	"PackageService":                    PackageService,
	"Pages":                             Pages,
	"Pants":                             Pants,
	"ParabolaAdornment":                 ParabolaAdornment,
	"Part":                              Part,
	"PartAdornment":                     PartAdornment,
	"PartOperation":                     PartOperation,
	"PartOperationAsset":                PartOperationAsset,
	"ParticleEmitter":                   ParticleEmitter,
	"Path":                              Path,
	"PathfindingService":                PathfindingService,
	"PhysicsPacketCache":                PhysicsPacketCache,
	"PhysicsService":                    PhysicsService,
	"PhysicsSettings":                   PhysicsSettings,
	"PitchShiftSoundEffect":             PitchShiftSoundEffect,
	"Platform":                          Platform,
	"Player":                            Player,
	"PlayerGui":                         PlayerGui,
	"PlayerMouse":                       PlayerMouse,
	"PlayerScripts":                     PlayerScripts,
	"Players":                           Players,
	"Plugin":                            Plugin,
	"PluginAction":                      PluginAction,
	"PluginDragEvent":                   PluginDragEvent,
	"PluginGui":                         PluginGui,
	"PluginGuiService":                  PluginGuiService,
	"PluginManager":                     PluginManager,
	"PluginMenu":                        PluginMenu,
	"PluginMouse":                       PluginMouse,
	"PluginToolbar":                     PluginToolbar,
	"PluginToolbarButton":               PluginToolbarButton,
	"PointLight":                        PointLight,
	"PointsService":                     PointsService,
	"PolicyService":                     PolicyService,
	"Pose":                              Pose,
	"PostEffect":                        PostEffect,
	"PrismaticConstraint":               PrismaticConstraint,
	"QWidgetPluginGui":                  QWidgetPluginGui,
	"RayValue":                          RayValue,
	"RbxAnalyticsService":               RbxAnalyticsService,
	"ReflectionMetadata":                ReflectionMetadata,
	"ReflectionMetadataCallbacks":       ReflectionMetadataCallbacks,
	"ReflectionMetadataClass":           ReflectionMetadataClass,
	"ReflectionMetadataClasses":         ReflectionMetadataClasses,
	"ReflectionMetadataEnum":            ReflectionMetadataEnum,
	"ReflectionMetadataEnumItem":        ReflectionMetadataEnumItem,
	"ReflectionMetadataEnums":           ReflectionMetadataEnums,
	"ReflectionMetadataEvents":          ReflectionMetadataEvents,
	"ReflectionMetadataFunctions":       ReflectionMetadataFunctions,
	"ReflectionMetadataItem":            ReflectionMetadataItem,
	"ReflectionMetadataMember":          ReflectionMetadataMember,
	"ReflectionMetadataProperties":      ReflectionMetadataProperties,
	"ReflectionMetadataYieldFunctions":  ReflectionMetadataYieldFunctions,
	"RemoteEvent":                       RemoteEvent,
	"RemoteFunction":                    RemoteFunction,
	"RenderSettings":                    RenderSettings,
	"RenderingTest":                     RenderingTest,
	"ReplicatedFirst":                   ReplicatedFirst,
	"ReplicatedStorage":                 ReplicatedStorage,
	"ReverbSoundEffect":                 ReverbSoundEffect,
	"RobloxPluginGuiService":            RobloxPluginGuiService,
	"RobloxReplicatedStorage":           RobloxReplicatedStorage,
	"RocketPropulsion":                  RocketPropulsion,
	"RodConstraint":                     RodConstraint,
	"RopeConstraint":                    RopeConstraint,
	"Rotate":                            Rotate,
	"RotateP":                           RotateP,
	"RotateV":                           RotateV,
	"RunService":                        RunService,
	"RunningAverageItemDouble":          RunningAverageItemDouble,
	"RunningAverageItemInt":             RunningAverageItemInt,
	"RunningAverageTimeIntervalItem":    RunningAverageTimeIntervalItem,
	"RuntimeScriptService":              RuntimeScriptService,
	"ScreenGui":                         ScreenGui,
	"Script":                            Script,
	"ScriptContext":                     ScriptContext,
	"ScriptDebugger":                    ScriptDebugger,
	"ScriptService":                     ScriptService,
	"ScrollingFrame":                    ScrollingFrame,
	"Seat":                              Seat,
	"Selection":                         Selection,
	"SelectionBox":                      SelectionBox,
	"SelectionLasso":                    SelectionLasso,
	"SelectionPartLasso":                SelectionPartLasso,
	"SelectionPointLasso":               SelectionPointLasso,
	"SelectionSphere":                   SelectionSphere,
	"ServerReplicator":                  ServerReplicator,
	"ServerScriptService":               ServerScriptService,
	"ServerStorage":                     ServerStorage,
	"ServiceProvider":                   ServiceProvider,
	"Shirt":                             Shirt,
	"ShirtGraphic":                      ShirtGraphic,
	"SkateboardController":              SkateboardController,
	"SkateboardPlatform":                SkateboardPlatform,
	"Skin":                              Skin,
	"Sky":                               Sky,
	"SlidingBallConstraint":             SlidingBallConstraint,
	"Smoke":                             Smoke,
	"Snap":                              Snap,
	"SocialService":                     SocialService,
	"SolidModelContentProvider":         SolidModelContentProvider,
	"Sound":                             Sound,
	"SoundEffect":                       SoundEffect,
	"SoundGroup":                        SoundGroup,
	"SoundService":                      SoundService,
	"Sparkles":                          Sparkles,
	"SpawnLocation":                     SpawnLocation,
	"SpawnerService":                    SpawnerService,
	"SpecialMesh":                       SpecialMesh,
	"SphereHandleAdornment":             SphereHandleAdornment,
	"SpotLight":                         SpotLight,
	"SpringConstraint":                  SpringConstraint,
	"StandalonePluginScripts":           StandalonePluginScripts,
	"StandardPages":                     StandardPages,
	"StarterCharacterScripts":           StarterCharacterScripts,
	"StarterGear":                       StarterGear,
	"StarterGui":                        StarterGui,
	"StarterPack":                       StarterPack,
	"StarterPlayer":                     StarterPlayer,
	"StarterPlayerScripts":              StarterPlayerScripts,
	"Stats":                             Stats,
	"StatsItem":                         StatsItem,
	"Status":                            Status,
	"StopWatchReporter":                 StopWatchReporter,
	"StringValue":                       StringValue,
	"Studio":                            Studio,
	"StudioData":                        StudioData,
	"StudioService":                     StudioService,
	"StudioTheme":                       StudioTheme,
	"SunRaysEffect":                     SunRaysEffect,
	"SurfaceGui":                        SurfaceGui,
	"SurfaceLight":                      SurfaceLight,
	"SurfaceSelection":                  SurfaceSelection,
	"TaskScheduler":                     TaskScheduler,
	"Team":                              Team,
	"Teams":                             Teams,
	"TeleportService":                   TeleportService,
	"Terrain":                           Terrain,
	"TerrainRegion":                     TerrainRegion,
	"TestService":                       TestService,
	"TextBox":                           TextBox,
	"TextButton":                        TextButton,
	"TextFilterResult":                  TextFilterResult,
	"TextLabel":                         TextLabel,
	"TextService":                       TextService,
	"Texture":                           Texture,
	"ThirdPartyUserService":             ThirdPartyUserService,
	"TimerService":                      TimerService,
	"Tool":                              Tool,
	"Torque":                            Torque,
	"TotalCountTimeIntervalItem":        TotalCountTimeIntervalItem,
	"TouchInputService":                 TouchInputService,
	"TouchTransmitter":                  TouchTransmitter,
	"Trail":                             Trail,
	"Translator":                        Translator,
	"TremoloSoundEffect":                TremoloSoundEffect,
	"TriangleMeshPart":                  TriangleMeshPart,
	"TrussPart":                         TrussPart,
	"Tween":                             Tween,
	"TweenBase":                         TweenBase,
	"TweenService":                      TweenService,
	"UGCValidationService":              UGCValidationService,
	"UIAspectRatioConstraint":           UIAspectRatioConstraint,
	"UIBase":                            UIBase,
	"UIComponent":                       UIComponent,
	"UIConstraint":                      UIConstraint,
	"UIGridLayout":                      UIGridLayout,
	"UIGridStyleLayout":                 UIGridStyleLayout,
	"UIInlineLayout":                    UIInlineLayout,
	"UILayout":                          UILayout,
	"UIListLayout":                      UIListLayout,
	"UIPadding":                         UIPadding,
	"UIPageLayout":                      UIPageLayout,
	"UIScale":                           UIScale,
	"UISizeConstraint":                  UISizeConstraint,
	"UITableLayout":                     UITableLayout,
	"UITextSizeConstraint":              UITextSizeConstraint,
	"UnionOperation":                    UnionOperation,
	"UserGameSettings":                  UserGameSettings,
	"UserInputService":                  UserInputService,
	"UserSettings":                      UserSettings,
	"UserStorageService":                UserStorageService,
	"VRService":                         VRService,
	"ValueBase":                         ValueBase,
	"Vector3Value":                      Vector3Value,
	"VectorForce":                       VectorForce,
	"VehicleController":                 VehicleController,
	"VehicleSeat":                       VehicleSeat,
	"VelocityMotor":                     VelocityMotor,
	"VersionControlService":             VersionControlService,
	"ViewportFrame":                     ViewportFrame,
	"VirtualInputManager":               VirtualInputManager,
	"VirtualUser":                       VirtualUser,
	"Visit":                             Visit,
	"WedgePart":                         WedgePart,
	"Weld":                              Weld,
	"WeldConstraint":                    WeldConstraint,
	"Workspace":                         Workspace,
	"WorldModel":                        WorldModel,
	"WorldRoot":                         WorldRoot,
}

var Instance = desc.NewClass("Instance", _Root,
	desc.NotCreatable,
	desc.Property{
		Name:  "Archivable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ClassName",
		Value: *new(types.String),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "DataCost",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Name",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Parent",
		Value: types.NilInstance,
	},
	desc.Property{
		Name:          "RobloxLocked",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "archivable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "className",
		Value: *new(types.String),
	},
	desc.Function{Name: "ClearAllChildren"},
	desc.Function{
		Name:    "Clone",
		Returns: types.NilInstance,
	},
	desc.Function{Name: "Destroy"},
	desc.Function{
		Name: "FindFirstAncestor",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "FindFirstAncestorOfClass",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "FindFirstAncestorWhichIsA",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "FindFirstChild",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name:     "recursive",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "FindFirstChildOfClass",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "FindFirstChildWhichIsA",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
			{
				Name:     "recursive",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetAttribute",
		Parameters: []desc.Parameter{
			{
				Name: "attribute",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Name: "GetAttributeChangedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "attribute",
				Type: *new(types.String),
			},
		},
		Returns: types.NilSignal,
	},
	desc.Function{
		Name:    "GetAttributes",
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Name:    "GetChildren",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "GetDebugId",
		Parameters: []desc.Parameter{
			{
				Name:     "scopeLength",
				Optional: true,
				Type:     types.Int(int32(4)),
			},
		},
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags:   desc.CustomLuaState,
		Name:    "GetDescendants",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetFullName",
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "GetPropertyChangedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "property",
				Type: *new(types.String),
			},
		},
		Returns: types.NilSignal,
	},
	desc.Function{
		Flags: desc.CustomLuaState,
		Name:  "IsA",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsAncestorOf",
		Parameters: []desc.Parameter{
			{
				Name: "descendant",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsDescendantOf",
		Parameters: []desc.Parameter{
			{
				Name: "ancestor",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "Remove"},
	desc.Function{
		Name: "SetAttribute",
		Parameters: []desc.Parameter{
			{
				Name: "attribute",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Flags: desc.CustomLuaState | desc.CanYield,
		Name:  "WaitForChild",
		Parameters: []desc.Parameter{
			{
				Name: "childName",
				Type: *new(types.String),
			},
			{
				Name: "timeOut",
				Type: *new(types.Double),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "children",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "clone",
		Returns: types.NilInstance,
	},
	desc.Function{Name: "destroy"},
	desc.Function{
		Name: "findFirstChild",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name:     "recursive",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "getChildren",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Flags: desc.CustomLuaState,
		Name:  "isA",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "isDescendantOf",
		Parameters: []desc.Parameter{
			{
				Name: "ancestor",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "remove"},
	desc.Event{
		Name: "AncestryChanged",
		Parameters: []desc.Parameter{
			{
				Name: "child",
				Type: types.NilInstance,
			},
			{
				Name: "parent",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "AttributeChanged",
		Parameters: []desc.Parameter{
			{
				Name: "attribute",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "property",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "ChildAdded",
		Parameters: []desc.Parameter{
			{
				Name: "child",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "ChildRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "child",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "DescendantAdded",
		Parameters: []desc.Parameter{
			{
				Name: "descendant",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "DescendantRemoving",
		Parameters: []desc.Parameter{
			{
				Name: "descendant",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "childAdded",
		Parameters: []desc.Parameter{
			{
				Name: "child",
				Type: types.NilInstance,
			},
		},
	},
)

var ABTestService = desc.NewClass("ABTestService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name:     "ClearUserVariations",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "GetVariant",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.String),
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "InitializeForUserId",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "WaitUntilBrowserTrackerABTestsInitialized",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "WaitUntilUserABTestsInitialized",
		Security: desc.LocalUserSecurity,
	},
)

var Accoutrement = desc.NewClass("Accoutrement", Instance,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "AttachmentForward",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AttachmentPoint",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "AttachmentPos",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "AttachmentRight",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "AttachmentUp",
		Value: *new(types.Vector3),
	},
)

var Accessory = desc.NewClass("Accessory", Accoutrement)

var Hat = desc.NewClass("Hat", Accoutrement)

var AdService = desc.NewClass("AdService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{Name: "ShowVideoAd"},
	desc.Event{
		Name: "VideoAdClosed",
		Parameters: []desc.Parameter{
			{
				Name: "adShown",
				Type: *new(types.Bool),
			},
		},
	},
)

var AdvancedDragger = desc.NewClass("AdvancedDragger", Instance)

var AnalyticsService = desc.NewClass("AnalyticsService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "ApiKey",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "FireEvent",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
)

var Animation = desc.NewClass("Animation", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AnimationId",
		Value: *new(types.Content),
	},
)

var AnimationController = desc.NewClass("AnimationController", Instance,
	desc.Function{
		Name:    "GetPlayingAnimationTracks",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "LoadAnimation",
		Parameters: []desc.Parameter{
			{
				Name: "animation",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Event{
		Name: "AnimationPlayed",
		Parameters: []desc.Parameter{
			{
				Name: "animationTrack",
				Type: types.NilInstance,
			},
		},
	},
)

var AnimationTrack = desc.NewClass("AnimationTrack", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Animation",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsPlaying",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Length",
		Value: *new(types.Float),
	},
	desc.Property{
		Name:  "Looped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Priority",
		Value: *new(enum.AnimationPriority),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Speed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "TimePosition",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "WeightCurrent",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "WeightTarget",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AdjustSpeed",
		Parameters: []desc.Parameter{
			{
				Name:     "speed",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
		},
	},
	desc.Function{
		Name: "AdjustWeight",
		Parameters: []desc.Parameter{
			{
				Name:     "weight",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
			{
				Name:     "fadeTime",
				Optional: true,
				Type:     types.Float(float32(0.1)),
			},
		},
	},
	desc.Function{
		Name: "GetMarkerReachedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: types.NilSignal,
	},
	desc.Function{
		Name: "GetTimeOfKeyframe",
		Parameters: []desc.Parameter{
			{
				Name: "keyframeName",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Double),
	},
	desc.Function{
		Name: "Play",
		Parameters: []desc.Parameter{
			{
				Name:     "fadeTime",
				Optional: true,
				Type:     types.Float(float32(0.1)),
			},
			{
				Name:     "weight",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
			{
				Name:     "speed",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
		},
	},
	desc.Function{
		Name: "Stop",
		Parameters: []desc.Parameter{
			{
				Name:     "fadeTime",
				Optional: true,
				Type:     types.Float(float32(0.1)),
			},
		},
	},
	desc.Event{Name: "DidLoop"},
	desc.Event{
		Name: "KeyframeReached",
		Parameters: []desc.Parameter{
			{
				Name: "keyframeName",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{Name: "Stopped"},
)

var Animator = desc.NewClass("Animator", Instance,
	desc.Function{
		Name:    "GetPlayingAnimationTracks",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "LoadAnimation",
		Parameters: []desc.Parameter{
			{
				Name: "animation",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "StepAnimations",
		Parameters: []desc.Parameter{
			{
				Name: "deltaTime",
				Type: *new(types.Float),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "AnimationPlayed",
		Parameters: []desc.Parameter{
			{
				Name: "animationTrack",
				Type: types.NilInstance,
			},
		},
	},
)

var AssetService = desc.NewClass("AssetService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "GetBundleDetailsSync",
		Parameters: []desc.Parameter{
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreatePlaceAsync",
		Parameters: []desc.Parameter{
			{
				Name: "placeName",
				Type: *new(types.String),
			},
			{
				Name: "templatePlaceID",
				Type: *new(types.Int64),
			},
			{
				Name:     "description",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns: *new(types.Int64),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreatePlaceInPlayerInventoryAsync",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "placeName",
				Type: *new(types.String),
			},
			{
				Name: "templatePlaceID",
				Type: *new(types.Int64),
			},
			{
				Name:     "description",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns: *new(types.Int64),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAssetIdsForPackage",
		Parameters: []desc.Parameter{
			{
				Name: "packageAssetId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAssetThumbnailAsync",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "thumbnailSize",
				Type: *new(types.Vector2),
			},
			{
				Name:     "assetType",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
		Returns:  *new(types.Tuple),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetBundleDetailsAsync",
		Parameters: []desc.Parameter{
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCreatorAssetID",
		Parameters: []desc.Parameter{
			{
				Name: "creationID",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Int64),
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "GetGamePlacesAsync",
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "SavePlaceAsync",
	},
)

var Attachment = desc.NewClass("Attachment", Instance,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Axis",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Orientation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "Rotation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "SecondaryAxis",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "WorldAxis",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "WorldCFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "WorldOrientation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "WorldPosition",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "WorldRotation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "WorldSecondaryAxis",
		Value: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetAxis",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetSecondaryAxis",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name: "SetAxis",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Function{
		Name: "SetSecondaryAxis",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(types.Vector3),
			},
		},
	},
)

var Backpack = desc.NewClass("Backpack", Instance)

var BackpackItem = desc.NewClass("BackpackItem", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureId",
		Value: *new(types.Content),
	},
)

var HopperBin = desc.NewClass("HopperBin", BackpackItem,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BinType",
		Value: *new(enum.BinType),
	},
	desc.Function{
		Name:     "Disable",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ToggleSelect",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{Name: "Deselected"},
	desc.Event{
		Name: "Selected",
		Parameters: []desc.Parameter{
			{
				Name: "mouse",
				Type: types.NilInstance,
			},
		},
	},
)

var Tool = desc.NewClass("Tool", BackpackItem,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CanBeDropped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Grip",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "GripForward",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "GripPos",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "GripRight",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "GripUp",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ManualActivationOnly",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RequiresHandle",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ToolTip",
		Value: *new(types.String),
	},
	desc.Function{Name: "Activate"},
	desc.Function{Name: "Deactivate"},
	desc.Event{Name: "Activated"},
	desc.Event{Name: "Deactivated"},
	desc.Event{
		Name: "Equipped",
		Parameters: []desc.Parameter{
			{
				Name: "mouse",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{Name: "Unequipped"},
)

var Flag = desc.NewClass("Flag", Tool,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TeamColor",
		Value: *new(types.BrickColor),
	},
)

var BadgeService = desc.NewClass("BadgeService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Flags: desc.Yields,
		Name:  "AwardBadge",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetBadgeInfoAsync",
		Parameters: []desc.Parameter{
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsDisabled",
		Parameters: []desc.Parameter{
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsLegal",
		Parameters: []desc.Parameter{
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UserHasBadge",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UserHasBadgeAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "BadgeAwarded",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnBadgeAwarded",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "creatorId",
				Type: *new(types.Int64),
			},
			{
				Name: "badgeId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var BasePlayerGui = desc.NewClass("BasePlayerGui", Instance,
	desc.NotCreatable,
	desc.Function{
		Name: "GetGuiObjectsAtPosition",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Objects),
	},
)

var CoreGui = desc.NewClass("CoreGui", BasePlayerGui,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "SelectionImageObject",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Version",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "SetUserGuiRendering",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
			{
				Name: "guiAdornee",
				Type: types.NilInstance,
			},
			{
				Name: "faceId",
				Type: *new(enum.NormalId),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "TakeScreenshot",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ToggleRecording",
		Security: desc.RobloxScriptSecurity,
	},
)

var PlayerGui = desc.NewClass("PlayerGui", BasePlayerGui,
	desc.NotCreatable|desc.PlayerReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CurrentScreenOrientation",
		Value: *new(enum.ScreenOrientation),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScreenOrientation",
		Value: *new(enum.ScreenOrientation),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SelectionImageObject",
		Value: types.NilInstance,
	},
	desc.Function{
		Name:    "GetTopbarTransparency",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name: "SetTopbarTransparency",
		Parameters: []desc.Parameter{
			{
				Name: "transparency",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "TopbarTransparencyChangedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "transparency",
				Type: *new(types.Float),
			},
		},
	},
)

var StarterGui = desc.NewClass("StarterGui", BasePlayerGui,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated,
		Name:          "ProcessUserInput",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ResetPlayerGuiOnSpawn",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScreenOrientation",
		Value: *new(enum.ScreenOrientation),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShowDevelopmentGui",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "GetCoreGuiEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "coreGuiType",
				Type: *new(enum.CoreGuiType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "RegisterGetCore",
		Parameters: []desc.Parameter{
			{
				Name: "parameterName",
				Type: *new(types.String),
			},
			{
				Name: "getFunction",
				Type: *new(types.Function),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RegisterSetCore",
		Parameters: []desc.Parameter{
			{
				Name: "parameterName",
				Type: *new(types.String),
			},
			{
				Name: "setFunction",
				Type: *new(types.Function),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetCore",
		Parameters: []desc.Parameter{
			{
				Name: "parameterName",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Name: "SetCoreGuiEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "coreGuiType",
				Type: *new(enum.CoreGuiType),
			},
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCore",
		Parameters: []desc.Parameter{
			{
				Name: "parameterName",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Event{
		Name: "CoreGuiChangedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "coreGuiType",
				Type: *new(enum.CoreGuiType),
			},
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var Beam = desc.NewClass("Beam", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment1",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.ColorSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CurveSize0",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CurveSize1",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FaceCamera",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightEmission",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightInfluence",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Segments",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Texture",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureMode",
		Value: *new(enum.TextureMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.NumberSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Width0",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Width1",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZOffset",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "SetTextureOffset",
		Parameters: []desc.Parameter{
			{
				Name:     "offset",
				Optional: true,
				Type:     types.Float(float32(0)),
			},
		},
	},
)

var BindableEvent = desc.NewClass("BindableEvent", Instance,
	desc.Function{
		Name: "Fire",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Event{
		Name: "Event",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
)

var BindableFunction = desc.NewClass("BindableFunction", Instance,
	desc.Function{
		Flags: desc.Yields,
		Name:  "Invoke",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Callback{
		Name: "OnInvoke",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
)

var BodyMover = desc.NewClass("BodyMover", Instance,
	desc.NotCreatable,
)

var BodyAngularVelocity = desc.NewClass("BodyAngularVelocity", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularVelocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTorque",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "P",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "angularvelocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "maxTorque",
		Value: *new(types.Vector3),
	},
)

var BodyForce = desc.NewClass("BodyForce", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Force",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "force",
		Value: *new(types.Vector3),
	},
)

var BodyGyro = desc.NewClass("BodyGyro", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "D",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTorque",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "P",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "cframe",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "maxTorque",
		Value: *new(types.Vector3),
	},
)

var BodyPosition = desc.NewClass("BodyPosition", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "D",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxForce",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "P",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "maxForce",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "position",
		Value: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetLastForce",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "lastForce",
		Returns: *new(types.Vector3),
	},
	desc.Event{Name: "ReachedTarget"},
)

var BodyThrust = desc.NewClass("BodyThrust", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Force",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Location",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "force",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "location",
		Value: *new(types.Vector3),
	},
)

var BodyVelocity = desc.NewClass("BodyVelocity", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxForce",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "P",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Velocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "maxForce",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "velocity",
		Value: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetLastForce",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "lastForce",
		Returns: *new(types.Vector3),
	},
)

var RocketPropulsion = desc.NewClass("RocketPropulsion", BodyMover,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CartoonFactor",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxThrust",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTorque",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Target",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetOffset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetRadius",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ThrustD",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ThrustP",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TurnD",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TurnP",
		Value: *new(types.Float),
	},
	desc.Function{Name: "Abort"},
	desc.Function{Name: "Fire"},
	desc.Function{Name: "fire"},
	desc.Event{Name: "ReachedTarget"},
)

var BrowserService = desc.NewClass("BrowserService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name:     "CloseBrowserWindow",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "CopyAuthCookieFromBrowserToEngine",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "EmitHybridEvent",
		Parameters: []desc.Parameter{
			{
				Name: "moduleName",
				Type: *new(types.String),
			},
			{
				Name: "eventName",
				Type: *new(types.String),
			},
			{
				Name: "params",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ExecuteJavaScript",
		Parameters: []desc.Parameter{
			{
				Name: "javascript",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenBrowserWindow",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenNativeOverlay",
		Parameters: []desc.Parameter{
			{
				Name: "title",
				Type: *new(types.String),
			},
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "OpenWeChatAuthWindow",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReturnToJavaScript",
		Parameters: []desc.Parameter{
			{
				Name: "callbackId",
				Type: *new(types.String),
			},
			{
				Name: "success",
				Type: *new(types.Bool),
			},
			{
				Name: "params",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendCommand",
		Parameters: []desc.Parameter{
			{
				Name: "command",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "AuthCookieCopiedToEngine",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "BrowserWindowClosed",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "BrowserWindowWillNavigate",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "JavaScriptCallback",
		Parameters: []desc.Parameter{
			{
				Name: "content",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var CacheableContentProvider = desc.NewClass("CacheableContentProvider", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var MeshContentProvider = desc.NewClass("MeshContentProvider", CacheableContentProvider,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name:     "GetContentMemoryData",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
)

var SolidModelContentProvider = desc.NewClass("SolidModelContentProvider", CacheableContentProvider,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var Camera = desc.NewClass("Camera", Instance,
	desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraSubject",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraType",
		Value: *new(enum.CameraType),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "CoordinateFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FieldOfView",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Focus",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadLocked",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "NearPlaneZ",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "ViewportSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "focus",
		Value: *new(types.CFrame),
	},
	desc.Function{
		Name: "GetLargestCutoffDistance",
		Parameters: []desc.Parameter{
			{
				Name: "ignoreList",
				Type: *new(types.Objects),
			},
		},
		Returns: *new(types.Float),
	},
	desc.Function{
		Name:    "GetPanSpeed",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name: "GetPartsObscuringTarget",
		Parameters: []desc.Parameter{
			{
				Name: "castPoints",
				Type: *new(types.Array),
			},
			{
				Name: "ignoreList",
				Type: *new(types.Objects),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "GetRenderCFrame",
		Returns: *new(types.CFrame),
	},
	desc.Function{
		Name:    "GetRoll",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name:    "GetTiltSpeed",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name: "Interpolate",
		Parameters: []desc.Parameter{
			{
				Name: "endPos",
				Type: *new(types.CFrame),
			},
			{
				Name: "endFocus",
				Type: *new(types.CFrame),
			},
			{
				Name: "duration",
				Type: *new(types.Float),
			},
		},
	},
	desc.Function{
		Name: "PanUnits",
		Parameters: []desc.Parameter{
			{
				Name: "units",
				Type: *new(types.Int),
			},
		},
	},
	desc.Function{
		Name: "ScreenPointToRay",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name:     "depth",
				Optional: true,
				Type:     types.Float(float32(0)),
			},
		},
		Returns: *new(types.Ray),
	},
	desc.Function{
		Name: "SetCameraPanMode",
		Parameters: []desc.Parameter{
			{
				Name:     "mode",
				Optional: true,
				Type:     enum.CameraPanMode(0),
			},
		},
	},
	desc.Function{
		Name: "SetImageServerView",
		Parameters: []desc.Parameter{
			{
				Name: "modelCoord",
				Type: *new(types.CFrame),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetRoll",
		Parameters: []desc.Parameter{
			{
				Name: "rollAngle",
				Type: *new(types.Float),
			},
		},
	},
	desc.Function{
		Name: "TiltUnits",
		Parameters: []desc.Parameter{
			{
				Name: "units",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "ViewportPointToRay",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name:     "depth",
				Optional: true,
				Type:     types.Float(float32(0)),
			},
		},
		Returns: *new(types.Ray),
	},
	desc.Function{
		Name: "WorldToScreenPoint",
		Parameters: []desc.Parameter{
			{
				Name: "worldPoint",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "WorldToViewportPoint",
		Parameters: []desc.Parameter{
			{
				Name: "worldPoint",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "Zoom",
		Parameters: []desc.Parameter{
			{
				Name: "distance",
				Type: *new(types.Float),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "FirstPersonTransition",
		Parameters: []desc.Parameter{
			{
				Name: "entering",
				Type: *new(types.Bool),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Event{Name: "InterpolationFinished"},
)

var ChangeHistoryService = desc.NewClass("ChangeHistoryService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:     "GetCanRedo",
		Returns:  *new(types.Tuple),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetCanUndo",
		Returns:  *new(types.Tuple),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Redo",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "ResetWaypoints",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "state",
				Type: *new(types.Bool),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetWaypoint",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Undo",
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "OnRedo",
		Parameters: []desc.Parameter{
			{
				Name: "waypoint",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "OnUndo",
		Parameters: []desc.Parameter{
			{
				Name: "waypoint",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
)

var CharacterAppearance = desc.NewClass("CharacterAppearance", Instance,
	desc.NotCreatable,
)

var BodyColors = desc.NewClass("BodyColors", CharacterAppearance,
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "HeadColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "LeftArmColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftArmColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "LeftLegColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftLegColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "RightArmColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightArmColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "RightLegColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightLegColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "TorsoColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TorsoColor3",
		Value: *new(types.Color3),
	},
)

var CharacterMesh = desc.NewClass("CharacterMesh", CharacterAppearance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BaseTextureId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BodyPart",
		Value: *new(enum.BodyPart),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MeshId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OverlayTextureId",
		Value: *new(types.Int64),
	},
)

var Clothing = desc.NewClass("Clothing", CharacterAppearance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color3",
		Value: *new(types.Color3),
	},
)

var Pants = desc.NewClass("Pants", Clothing,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PantsTemplate",
		Value: *new(types.Content),
	},
)

var Shirt = desc.NewClass("Shirt", Clothing,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShirtTemplate",
		Value: *new(types.Content),
	},
)

var ShirtGraphic = desc.NewClass("ShirtGraphic", CharacterAppearance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Graphic",
		Value: *new(types.Content),
	},
)

var Skin = desc.NewClass("Skin", CharacterAppearance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkinColor",
		Value: *new(types.BrickColor),
	},
)

var Chat = desc.NewClass("Chat", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BubbleChatEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "LoadDefaultChat",
		Value:         *new(types.Bool),
		WriteSecurity: desc.NotAccessibleSecurity,
	},
	desc.Function{
		Name: "Chat",
		Parameters: []desc.Parameter{
			{
				Name: "partOrCharacter",
				Type: types.NilInstance,
			},
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name:     "color",
				Optional: true,
				Type:     enum.ChatColor(0),
			},
		},
	},
	desc.Function{
		Name: "ChatLocal",
		Parameters: []desc.Parameter{
			{
				Name: "partOrCharacter",
				Type: types.NilInstance,
			},
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name:     "color",
				Optional: true,
				Type:     enum.ChatColor(0),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetShouldUseLuaChat",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "InvokeChatCallback",
		Parameters: []desc.Parameter{
			{
				Name: "callbackType",
				Type: *new(enum.ChatCallbackType),
			},
			{
				Name: "callbackArguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "RegisterChatCallback",
		Parameters: []desc.Parameter{
			{
				Name: "callbackType",
				Type: *new(enum.ChatCallbackType),
			},
			{
				Name: "callbackFunction",
				Type: *new(types.Function),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CanUserChatAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CanUsersChatAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userIdFrom",
				Type: *new(types.Int64),
			},
			{
				Name: "userIdTo",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "FilterStringAsync",
		Parameters: []desc.Parameter{
			{
				Name: "stringToFilter",
				Type: *new(types.String),
			},
			{
				Name: "playerFrom",
				Type: types.NilInstance,
			},
			{
				Name: "playerTo",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "FilterStringForBroadcast",
		Parameters: []desc.Parameter{
			{
				Name: "stringToFilter",
				Type: *new(types.String),
			},
			{
				Name: "playerFrom",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "FilterStringForPlayerAsync",
		Parameters: []desc.Parameter{
			{
				Name: "stringToFilter",
				Type: *new(types.String),
			},
			{
				Name: "playerToFilterFor",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.String),
	},
	desc.Event{
		Name: "Chatted",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "color",
				Type: *new(enum.ChatColor),
			},
		},
	},
)

var ClickDetector = desc.NewClass("ClickDetector", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CursorIcon",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxActivationDistance",
		Value: *new(types.Float),
	},
	desc.Event{
		Name: "MouseClick",
		Parameters: []desc.Parameter{
			{
				Name: "playerWhoClicked",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "MouseHoverEnter",
		Parameters: []desc.Parameter{
			{
				Name: "playerWhoHovered",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "MouseHoverLeave",
		Parameters: []desc.Parameter{
			{
				Name: "playerWhoHovered",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "RightMouseClick",
		Parameters: []desc.Parameter{
			{
				Name: "playerWhoClicked",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "mouseClick",
		Parameters: []desc.Parameter{
			{
				Name: "playerWhoClicked",
				Type: types.NilInstance,
			},
		},
	},
)

var ClusterPacketCache = desc.NewClass("ClusterPacketCache", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var CollectionService = desc.NewClass("CollectionService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "AddTag",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "GetCollection",
		Parameters: []desc.Parameter{
			{
				Name: "class",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "GetInstanceAddedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
		Returns: types.NilSignal,
	},
	desc.Function{
		Name: "GetInstanceRemovedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
		Returns: types.NilSignal,
	},
	desc.Function{
		Name: "GetTagged",
		Parameters: []desc.Parameter{
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "GetTags",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "HasTag",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "RemoveTag",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
			{
				Name: "tag",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "ItemAdded",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "ItemRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
		},
	},
)

var Configuration = desc.NewClass("Configuration", Instance)

var Constraint = desc.NewClass("Constraint", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment1",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
)

var AlignOrientation = desc.NewClass("AlignOrientation", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AlignType",
		Value: *new(enum.AlignType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxAngularVelocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrimaryAxisOnly",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReactionTorqueEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Responsiveness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RigidityEnabled",
		Value: *new(types.Bool),
	},
)

var AlignPosition = desc.NewClass("AlignPosition", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ApplyAtCenterOfMass",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxForce",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxVelocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReactionForceEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Responsiveness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RigidityEnabled",
		Value: *new(types.Bool),
	},
)

var AngularVelocity = desc.NewClass("AngularVelocity", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularVelocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RelativeTo",
		Value: *new(enum.ActuatorRelativeTo),
	},
)

var BallSocketConstraint = desc.NewClass("BallSocketConstraint", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Restitution",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TwistLimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TwistLowerAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TwistUpperAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UpperAngle",
		Value: *new(types.Float),
	},
)

var HingeConstraint = desc.NewClass("HingeConstraint", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ActuatorType",
		Value: *new(enum.ActuatorType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularVelocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LowerAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxAcceleration",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Restitution",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ServoMaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UpperAngle",
		Value: *new(types.Float),
	},
)

var LineForce = desc.NewClass("LineForce", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ApplyAtCenterOfMass",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InverseSquareLaw",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Magnitude",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxForce",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReactionForceEnabled",
		Value: *new(types.Bool),
	},
)

var RodConstraint = desc.NewClass("RodConstraint", Constraint,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Length",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Thickness",
		Value: *new(types.Float),
	},
)

var RopeConstraint = desc.NewClass("RopeConstraint", Constraint,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Length",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Restitution",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Thickness",
		Value: *new(types.Float),
	},
)

var SlidingBallConstraint = desc.NewClass("SlidingBallConstraint", Constraint,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ActuatorType",
		Value: *new(enum.ActuatorType),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentPosition",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LowerLimit",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxAcceleration",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxForce",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Restitution",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ServoMaxForce",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Speed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetPosition",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UpperLimit",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Velocity",
		Value: *new(types.Float),
	},
)

var CylindricalConstraint = desc.NewClass("CylindricalConstraint", SlidingBallConstraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularActuatorType",
		Value: *new(enum.ActuatorType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularLimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularRestitution",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AngularVelocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InclinationAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LowerAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxAngularAcceleration",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MotorMaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RotationAxisVisible",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ServoMaxTorque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UpperAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "WorldRotationAxis",
		Value: *new(types.Vector3),
	},
)

var PrismaticConstraint = desc.NewClass("PrismaticConstraint", SlidingBallConstraint)

var SpringConstraint = desc.NewClass("SpringConstraint", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Coils",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Damping",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FreeLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LimitsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxForce",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Stiffness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Thickness",
		Value: *new(types.Float),
	},
)

var Torque = desc.NewClass("Torque", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RelativeTo",
		Value: *new(enum.ActuatorRelativeTo),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Torque",
		Value: *new(types.Vector3),
	},
)

var VectorForce = desc.NewClass("VectorForce", Constraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ApplyAtCenterOfMass",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Force",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RelativeTo",
		Value: *new(enum.ActuatorRelativeTo),
	},
)

var ContentProvider = desc.NewClass("ContentProvider", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "BaseUrl",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "RequestQueueSize",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "CalculateNumTrianglesInMeshSync",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetFailedRequests",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Preload",
		Parameters: []desc.Parameter{
			{
				Name: "contentId",
				Type: *new(types.Content),
			},
		},
	},
	desc.Function{
		Name: "SetBaseUrl",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CalculateNumTrianglesInMesh",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PreloadAsync",
		Parameters: []desc.Parameter{
			{
				Name: "contentIdList",
				Type: *new(types.Array),
			},
			{
				Name:     "callbackFunction",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
	},
)

var ContextActionService = desc.NewClass("ContextActionService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "BindAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "functionToBind",
				Type: *new(types.Function),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "inputTypes",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "BindActionAtPriority",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "functionToBind",
				Type: *new(types.Function),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "priorityLevel",
				Type: *new(types.Int),
			},
			{
				Name: "inputTypes",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "BindActionToInputTypes",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "functionToBind",
				Type: *new(types.Function),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "inputTypes",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "BindActivate",
		Parameters: []desc.Parameter{
			{
				Name: "userInputTypeForActivation",
				Type: *new(enum.UserInputType),
			},
			{
				Name:     "keyCodeForActivation",
				Optional: true,
				Type:     enum.KeyCode(0),
			},
		},
	},
	desc.Function{
		Name: "BindCoreAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "functionToBind",
				Type: *new(types.Function),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "inputTypes",
				Type: *new(types.Tuple),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "BindCoreActionAtPriority",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "functionToBind",
				Type: *new(types.Function),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "priorityLevel",
				Type: *new(types.Int),
			},
			{
				Name: "inputTypes",
				Type: *new(types.Tuple),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "CallFunction",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
			{
				Name: "inputObject",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(types.Tuple),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "FireActionButtonFoundSignal",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "actionButton",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetAllBoundActionInfo",
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Name:     "GetAllBoundCoreActionInfo",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetBoundActionInfo",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Name: "GetBoundCoreActionInfo",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetCurrentLocalToolIcon",
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "SetDescription",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "description",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetImage",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "image",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetPosition",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "position",
				Type: *new(types.UDim2),
			},
		},
	},
	desc.Function{
		Name: "SetTitle",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
			{
				Name: "title",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "UnbindAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "UnbindActivate",
		Parameters: []desc.Parameter{
			{
				Name: "userInputTypeForActivation",
				Type: *new(enum.UserInputType),
			},
			{
				Name:     "keyCodeForActivation",
				Optional: true,
				Type:     enum.KeyCode(0),
			},
		},
	},
	desc.Function{Name: "UnbindAllActions"},
	desc.Function{
		Name: "UnbindCoreAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetButton",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Event{
		Name: "BoundActionAdded",
		Parameters: []desc.Parameter{
			{
				Name: "actionAdded",
				Type: *new(types.String),
			},
			{
				Name: "createTouchButton",
				Type: *new(types.Bool),
			},
			{
				Name: "functionInfoTable",
				Type: *new(types.Dictionary),
			},
			{
				Name: "isCore",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "BoundActionChanged",
		Parameters: []desc.Parameter{
			{
				Name: "actionChanged",
				Type: *new(types.String),
			},
			{
				Name: "changeName",
				Type: *new(types.String),
			},
			{
				Name: "changeTable",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "BoundActionRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "actionRemoved",
				Type: *new(types.String),
			},
			{
				Name: "functionInfoTable",
				Type: *new(types.Dictionary),
			},
			{
				Name: "isCore",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "GetActionButtonEvent",
		Parameters: []desc.Parameter{
			{
				Name: "actionName",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "LocalToolEquipped",
		Parameters: []desc.Parameter{
			{
				Name: "toolEquipped",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "LocalToolUnequipped",
		Parameters: []desc.Parameter{
			{
				Name: "toolUnequipped",
				Type: types.NilInstance,
			},
		},
	},
)

var Controller = desc.NewClass("Controller", Instance,
	desc.NotCreatable,
	desc.Function{
		Name: "BindButton",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
			{
				Name: "caption",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "GetButton",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "UnbindButton",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
		},
	},
	desc.Function{
		Name: "bindButton",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
			{
				Name: "caption",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "getButton",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "ButtonChanged",
		Parameters: []desc.Parameter{
			{
				Name: "button",
				Type: *new(enum.Button),
			},
		},
	},
)

var HumanoidController = desc.NewClass("HumanoidController", Controller)

var SkateboardController = desc.NewClass("SkateboardController", Controller,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Steer",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Throttle",
		Value: *new(types.Float),
	},
	desc.Event{
		Name: "AxisChanged",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(types.String),
			},
		},
	},
)

var VehicleController = desc.NewClass("VehicleController", Controller)

var ControllerService = desc.NewClass("ControllerService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var CookiesService = desc.NewClass("CookiesService", Instance,
	desc.NotCreatable|desc.Service,
)

var CorePackages = desc.NewClass("CorePackages", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var CoreScriptSyncService = desc.NewClass("CoreScriptSyncService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "GetScriptFilePath",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
)

var CustomEvent = desc.NewClass("CustomEvent", Instance,
	desc.Function{
		Name:    "GetAttachedReceivers",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "SetValue",
		Parameters: []desc.Parameter{
			{
				Name: "newValue",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "ReceiverConnected",
		Parameters: []desc.Parameter{
			{
				Name: "receiver",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "ReceiverDisconnected",
		Parameters: []desc.Parameter{
			{
				Name: "receiver",
				Type: types.NilInstance,
			},
		},
	},
)

var CustomEventReceiver = desc.NewClass("CustomEventReceiver", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Source",
		Value: types.NilInstance,
	},
	desc.Function{
		Name:    "GetCurrentValue",
		Returns: *new(types.Float),
	},
	desc.Event{
		Name: "EventConnected",
		Parameters: []desc.Parameter{
			{
				Name: "event",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "EventDisconnected",
		Parameters: []desc.Parameter{
			{
				Name: "event",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "SourceValueChanged",
		Parameters: []desc.Parameter{
			{
				Name: "newValue",
				Type: *new(types.Float),
			},
		},
	},
)

var DataModelMesh = desc.NewClass("DataModelMesh", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Offset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Scale",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VertexColor",
		Value: *new(types.Vector3),
	},
)

var BevelMesh = desc.NewClass("BevelMesh", DataModelMesh,
	desc.NotCreatable,
)

var BlockMesh = desc.NewClass("BlockMesh", BevelMesh)

var CylinderMesh = desc.NewClass("CylinderMesh", BevelMesh)

var FileMesh = desc.NewClass("FileMesh", DataModelMesh,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MeshId",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureId",
		Value: *new(types.Content),
	},
)

var SpecialMesh = desc.NewClass("SpecialMesh", FileMesh,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MeshType",
		Value: *new(enum.MeshType),
	},
)

var DataModelSession = desc.NewClass("DataModelSession", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "CurrentDataModelType",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.StudioDataModelType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "SessionId",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "CurrentDataModelTypeAboutToChange",
		Parameters: []desc.Parameter{
			{
				Name: "dataModelType",
				Type: *new(enum.StudioDataModelType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "CurrentDataModelTypeChanged",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DataModelCreated",
		Parameters: []desc.Parameter{
			{
				Name: "gameStateType",
				Type: *new(enum.StudioDataModelType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DataModelWillBeDestroyed",
		Parameters: []desc.Parameter{
			{
				Name: "gameStateType",
				Type: *new(enum.StudioDataModelType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var DataStoreService = desc.NewClass("DataStoreService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "AutomaticRetry",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "LegacyNamingScheme",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "GetDataStore",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name:     "scope",
				Optional: true,
				Type:     types.String("global"),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetGlobalDataStore",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetOrderedDataStore",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name:     "scope",
				Optional: true,
				Type:     types.String("global"),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetRequestBudgetForRequestType",
		Parameters: []desc.Parameter{
			{
				Name: "requestType",
				Type: *new(enum.DataStoreRequestType),
			},
		},
		Returns: *new(types.Int),
	},
)

var Debris = desc.NewClass("Debris", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxItems",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "AddItem",
		Parameters: []desc.Parameter{
			{
				Name: "item",
				Type: types.NilInstance,
			},
			{
				Name:     "lifetime",
				Optional: true,
				Type:     types.Double(10.0),
			},
		},
	},
	desc.Function{
		Name: "SetLegacyMaxItems",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "addItem",
		Parameters: []desc.Parameter{
			{
				Name: "item",
				Type: types.NilInstance,
			},
			{
				Name:     "lifetime",
				Optional: true,
				Type:     types.Double(10.0),
			},
		},
	},
)

var DebugSettings = desc.NewClass("DebugSettings", Instance,
	desc.Settings,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "DataModel",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "InstanceCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsFmodProfilingEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsScriptStackTracingEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "JobCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "PlayerCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReportSoundWarnings",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "RobloxVersion",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TickCountPreciseOverride",
		Value: *new(enum.TickCountSampleMethod),
	},
)

var DebuggerBreakpoint = desc.NewClass("DebuggerBreakpoint", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Condition",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Line",
		Value: *new(types.Int),
	},
)

var DebuggerManager = desc.NewClass("DebuggerManager", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "DebuggingEnabled",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "AddDebugger",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:     "EnableDebugging",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:    "GetDebuggers",
		Returns: *new(types.Objects),
	},
	desc.Function{Name: "Resume"},
	desc.Function{Name: "StepIn"},
	desc.Function{Name: "StepOut"},
	desc.Function{Name: "StepOver"},
	desc.Event{
		Name: "DebuggerAdded",
		Parameters: []desc.Parameter{
			{
				Name: "debugger",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "DebuggerRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "debugger",
				Type: types.NilInstance,
			},
		},
	},
)

var DebuggerWatch = desc.NewClass("DebuggerWatch", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Expression",
		Value: *new(types.String),
	},
)

var Dialog = desc.NewClass("Dialog", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BehaviorType",
		Value: *new(enum.DialogBehaviorType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ConversationDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GoodbyeChoiceActive",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GoodbyeDialog",
		Value: *new(types.String),
	},
	desc.Property{
		Name:  "InUse",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InitialPrompt",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Purpose",
		Value: *new(enum.DialogPurpose),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Tone",
		Value: *new(enum.DialogTone),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TriggerDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TriggerOffset",
		Value: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetCurrentPlayers",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "SetPlayerIsUsing",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "isUsing",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalDialogChoiceSelected",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "dialogChoice",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DialogChoiceSelected",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "dialogChoice",
				Type: types.NilInstance,
			},
		},
	},
)

var DialogChoice = desc.NewClass("DialogChoice", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GoodbyeChoiceActive",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GoodbyeDialog",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ResponseDialog",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UserDialog",
		Value: *new(types.String),
	},
)

var DraftsService = desc.NewClass("DraftsService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "DiscardEdits",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetDraftStatus",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(enum.DraftStatusCode),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetEditors",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RestoreScripts",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ShowDiffsAgainstBase",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ShowDiffsAgainstServer",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CommitEdits",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "GetDrafts",
		Returns:  *new(types.Objects),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UpdateToLatestVersion",
		Parameters: []desc.Parameter{
			{
				Name: "scripts",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "CommitStatusChanged",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
			{
				Name: "status",
				Type: *new(enum.DraftStatusCode),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DraftAdded",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DraftRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DraftStatusChanged",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "EditorsListChanged",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "UpdateStatusChanged",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
			{
				Name: "status",
				Type: *new(enum.DraftStatusCode),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var Dragger = desc.NewClass("Dragger", Instance,
	desc.Function{
		Name: "AxisRotate",
		Parameters: []desc.Parameter{
			{
				Name:     "axis",
				Optional: true,
				Type:     enum.Axis(0),
			},
		},
	},
	desc.Function{
		Name: "MouseDown",
		Parameters: []desc.Parameter{
			{
				Name: "mousePart",
				Type: types.NilInstance,
			},
			{
				Name: "pointOnMousePart",
				Type: *new(types.Vector3),
			},
			{
				Name: "parts",
				Type: *new(types.Objects),
			},
		},
	},
	desc.Function{
		Name: "MouseMove",
		Parameters: []desc.Parameter{
			{
				Name: "mouseRay",
				Type: *new(types.Ray),
			},
		},
	},
	desc.Function{Name: "MouseUp"},
)

var Explosion = desc.NewClass("Explosion", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BlastPressure",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BlastRadius",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DestroyJointRadiusPercent",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExplosionType",
		Value: *new(enum.ExplosionType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
	desc.Event{
		Name: "Hit",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
			{
				Name: "distance",
				Type: *new(types.Float),
			},
		},
	},
)

var FaceInstance = desc.NewClass("FaceInstance", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Face",
		Value: *new(enum.NormalId),
	},
)

var Decal = desc.NewClass("Decal", FaceInstance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "LocalTransparencyModifier",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Shiny",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Specular",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Texture",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.Float),
	},
)

var Texture = desc.NewClass("Texture", Decal,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OffsetStudsU",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OffsetStudsV",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StudsPerTileU",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StudsPerTileV",
		Value: *new(types.Float),
	},
)

var Feature = desc.NewClass("Feature", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FaceId",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InOut",
		Value: *new(enum.InOut),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftRight",
		Value: *new(enum.LeftRight),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopBottom",
		Value: *new(enum.TopBottom),
	},
)

var Hole = desc.NewClass("Hole", Feature)

var MotorFeature = desc.NewClass("MotorFeature", Feature)

var File = desc.NewClass("File", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:          "FileName",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:          "FileSize",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:          "Size",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetBinaryContents",
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetFileContentsBinary",
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetTemporaryId",
		Returns:  *new(types.Content),
		Security: desc.PluginSecurity,
	},
)

var Fire = desc.NewClass("Fire", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Heat",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SecondaryColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Size",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "size",
		Value: *new(types.Float),
	},
)

var FlagStandService = desc.NewClass("FlagStandService", Instance,
	desc.NotCreatable|desc.Service,
)

var FlyweightService = desc.NewClass("FlyweightService", Instance,
	desc.Service,
)

var CSGDictionaryService = desc.NewClass("CSGDictionaryService", FlyweightService,
	desc.Service,
)

var NonReplicatedCSGDictionaryService = desc.NewClass("NonReplicatedCSGDictionaryService", FlyweightService,
	desc.Service,
)

var Folder = desc.NewClass("Folder", Instance)

var ForceField = desc.NewClass("ForceField", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
)

var FriendService = desc.NewClass("FriendService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Flags:    desc.Yields,
		Name:     "GetPlatformFriends",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "FriendsUpdated",
		Parameters: []desc.Parameter{
			{
				Name: "friendData",
				Type: *new(types.Array),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var FunctionalTest = desc.NewClass("FunctionalTest", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Description",
		Value: *new(types.String),
	},
	desc.Function{
		Name: "Error",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
	desc.Function{
		Name: "Failed",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
	desc.Function{
		Name: "Pass",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
	desc.Function{
		Name: "Passed",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
	desc.Function{
		Name: "Warn",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
)

var GamePassService = desc.NewClass("GamePassService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Flags: desc.Yields,
		Name:  "PlayerHasPass",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
)

var GameSettings = desc.NewClass("GameSettings", Instance,
	desc.Settings,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AdditionalCoreIncludeDirs",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BubbleChatLifetime",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BubbleChatMaxBubbles",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ChatHistory",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ChatScrollLength",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "CollisionSoundEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "CollisionSoundVolume",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HardwareMouse",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "MaxCollisionSounds",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OverrideStarterScript",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReportAbuseChatHistory",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SoftwareSound",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VideoCaptureEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VideoQuality",
		Value: *new(enum.VideoQualitySettings),
	},
	desc.Event{
		Name: "VideoRecordingChangeRequest",
		Parameters: []desc.Parameter{
			{
				Name: "recording",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var GamepadService = desc.NewClass("GamepadService", Instance,
	desc.NotCreatable|desc.Service,
)

var Geometry = desc.NewClass("Geometry", Instance,
	desc.NotCreatable|desc.Service,
)

var GlobalDataStore = desc.NewClass("GlobalDataStore", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Name: "OnUpdate",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns: types.NilConnection,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAsync",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IncrementAsync",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name:     "delta",
				Optional: true,
				Type:     types.Int(int32(1)),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "RemoveAsync",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "SetAsync",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UpdateAsync",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "transformFunction",
				Type: *new(types.Function),
			},
		},
		Returns: *new(types.Tuple),
	},
)

var OrderedDataStore = desc.NewClass("OrderedDataStore", GlobalDataStore,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetSortedAsync",
		Parameters: []desc.Parameter{
			{
				Name: "ascending",
				Type: *new(types.Bool),
			},
			{
				Name: "pagesize",
				Type: *new(types.Int),
			},
			{
				Name: "minValue",
				Type: *new(types.Variant),
			},
			{
				Name: "maxValue",
				Type: *new(types.Variant),
			},
		},
		Returns: types.NilInstance,
	},
)

var GoogleAnalyticsConfiguration = desc.NewClass("GoogleAnalyticsConfiguration", Instance,
	desc.Service,
)

var GroupService = desc.NewClass("GroupService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAlliesAsync",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetEnemiesAsync",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetGroupInfoAsync",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetGroupsAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Array),
	},
)

var GuiBase = desc.NewClass("GuiBase", Instance,
	desc.NotCreatable,
)

var GuiBase2d = desc.NewClass("GuiBase2d", GuiBase,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsolutePosition",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsoluteRotation",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsoluteSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoLocalize",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Localize",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RootLocalizationTable",
		Value: types.NilInstance,
	},
)

var GuiObject = desc.NewClass("GuiObject", GuiBase2d,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AnchorPoint",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "BackgroundColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackgroundColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackgroundTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "BorderColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BorderColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BorderMode",
		Value: *new(enum.BorderMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BorderSizePixel",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClipsDescendants",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Draggable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LayoutOrder",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NextSelectionDown",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NextSelectionLeft",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NextSelectionRight",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NextSelectionUp",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Position",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Rotation",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Selectable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SelectionImageObject",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SizeConstraint",
		Value: *new(enum.SizeConstraint),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Transparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZIndex",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "TweenPosition",
		Parameters: []desc.Parameter{
			{
				Name: "endPosition",
				Type: *new(types.UDim2),
			},
			{
				Name:     "easingDirection",
				Optional: true,
				Type:     enum.EasingDirection(1),
			},
			{
				Name:     "easingStyle",
				Optional: true,
				Type:     enum.EasingStyle(3),
			},
			{
				Name:     "time",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
			{
				Name:     "override",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "callback",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "TweenSize",
		Parameters: []desc.Parameter{
			{
				Name: "endSize",
				Type: *new(types.UDim2),
			},
			{
				Name:     "easingDirection",
				Optional: true,
				Type:     enum.EasingDirection(1),
			},
			{
				Name:     "easingStyle",
				Optional: true,
				Type:     enum.EasingStyle(3),
			},
			{
				Name:     "time",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
			{
				Name:     "override",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "callback",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "TweenSizeAndPosition",
		Parameters: []desc.Parameter{
			{
				Name: "endSize",
				Type: *new(types.UDim2),
			},
			{
				Name: "endPosition",
				Type: *new(types.UDim2),
			},
			{
				Name:     "easingDirection",
				Optional: true,
				Type:     enum.EasingDirection(1),
			},
			{
				Name:     "easingStyle",
				Optional: true,
				Type:     enum.EasingStyle(3),
			},
			{
				Name:     "time",
				Optional: true,
				Type:     types.Float(float32(1)),
			},
			{
				Name:     "override",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "callback",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "DragBegin",
		Parameters: []desc.Parameter{
			{
				Name: "initialPosition",
				Type: *new(types.UDim2),
			},
		},
	},
	desc.Event{
		Name: "DragStopped",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "InputBegan",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "InputChanged",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "InputEnded",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "MouseEnter",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseLeave",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseMoved",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseWheelBackward",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseWheelForward",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{Name: "SelectionGained"},
	desc.Event{Name: "SelectionLost"},
	desc.Event{
		Name: "TouchLongPress",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
		},
	},
	desc.Event{
		Name: "TouchPan",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "totalTranslation",
				Type: *new(types.Vector2),
			},
			{
				Name: "velocity",
				Type: *new(types.Vector2),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
		},
	},
	desc.Event{
		Name: "TouchPinch",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "scale",
				Type: *new(types.Float),
			},
			{
				Name: "velocity",
				Type: *new(types.Float),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
		},
	},
	desc.Event{
		Name: "TouchRotate",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "rotation",
				Type: *new(types.Float),
			},
			{
				Name: "velocity",
				Type: *new(types.Float),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
		},
	},
	desc.Event{
		Name: "TouchSwipe",
		Parameters: []desc.Parameter{
			{
				Name: "swipeDirection",
				Type: *new(enum.SwipeDirection),
			},
			{
				Name: "numberOfTouches",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "TouchTap",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
		},
	},
)

var Frame = desc.NewClass("Frame", GuiObject,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Style",
		Value: *new(enum.FrameStyle),
	},
)

var GuiButton = desc.NewClass("GuiButton", GuiObject,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoButtonColor",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Modal",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Selected",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Style",
		Value: *new(enum.ButtonStyle),
	},
	desc.Event{
		Name: "Activated",
		Parameters: []desc.Parameter{
			{
				Name: "inputObject",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{Name: "MouseButton1Click"},
	desc.Event{
		Name: "MouseButton1Down",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseButton1Up",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{Name: "MouseButton2Click"},
	desc.Event{
		Name: "MouseButton2Down",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "MouseButton2Up",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
		},
	},
)

var ImageButton = desc.NewClass("ImageButton", GuiButton,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HoverImage",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Image",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageRectOffset",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageRectSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsLoaded",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PressedImage",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScaleType",
		Value: *new(enum.ScaleType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SliceCenter",
		Value: *new(types.Rect),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SliceScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TileSize",
		Value: *new(types.UDim2),
	},
)

var TextButton = desc.NewClass("TextButton", GuiButton,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Font",
		Value: *new(enum.Font),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "FontSize",
		Value: *new(enum.FontSize),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LineHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "LocalizedText",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextBounds",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "TextColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextFits",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextScaled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTruncate",
		Value: *new(enum.TextTruncate),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "TextWrap",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextWrapped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextXAlignment",
		Value: *new(enum.TextXAlignment),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextYAlignment",
		Value: *new(enum.TextYAlignment),
	},
	desc.Function{
		Name: "SetTextFromInput",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var GuiLabel = desc.NewClass("GuiLabel", GuiObject,
	desc.NotCreatable,
)

var ImageLabel = desc.NewClass("ImageLabel", GuiLabel,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Image",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageRectOffset",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageRectSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsLoaded",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScaleType",
		Value: *new(enum.ScaleType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SliceCenter",
		Value: *new(types.Rect),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SliceScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TileSize",
		Value: *new(types.UDim2),
	},
)

var TextLabel = desc.NewClass("TextLabel", GuiLabel,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Font",
		Value: *new(enum.Font),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "FontSize",
		Value: *new(enum.FontSize),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LineHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "LocalizedText",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextBounds",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "TextColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextFits",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextScaled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTruncate",
		Value: *new(enum.TextTruncate),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "TextWrap",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextWrapped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextXAlignment",
		Value: *new(enum.TextXAlignment),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextYAlignment",
		Value: *new(enum.TextYAlignment),
	},
	desc.Function{
		Name: "SetTextFromInput",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var ScrollingFrame = desc.NewClass("ScrollingFrame", GuiObject,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "AbsoluteWindowSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BottomImage",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CanvasPosition",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CanvasSize",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ElasticBehavior",
		Value: *new(enum.ElasticBehavior),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HorizontalScrollBarInset",
		Value: *new(enum.ScrollBarInset),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MidImage",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollBarImageColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollBarImageTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollBarThickness",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollingDirection",
		Value: *new(enum.ScrollingDirection),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollingEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopImage",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VerticalScrollBarInset",
		Value: *new(enum.ScrollBarInset),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VerticalScrollBarPosition",
		Value: *new(enum.VerticalScrollBarPosition),
	},
	desc.Function{
		Name:     "ClearInertialScrolling",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetSampledInertialVelocity",
		Returns:  *new(types.Vector2),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ScrollToTop",
		Security: desc.RobloxScriptSecurity,
	},
)

var TextBox = desc.NewClass("TextBox", GuiObject,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClearTextOnFocus",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:  "CursorPosition",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "EnableRealtimeFilteringHints",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Font",
		Value: *new(enum.Font),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "FontSize",
		Value: *new(enum.FontSize),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LineHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "ManualFocusRelease",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MultiLine",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "OverlayNativeInput",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PlaceholderColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PlaceholderText",
		Value: *new(types.String),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "ReturnKeyType",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.ReturnKeyType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:  "SelectionStart",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShowNativeInput",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextBounds",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "TextColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextEditable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TextFits",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "TextInputType",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.TextInputType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextScaled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextStrokeTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextTruncate",
		Value: *new(enum.TextTruncate),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "TextWrap",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextWrapped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextXAlignment",
		Value: *new(enum.TextXAlignment),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextYAlignment",
		Value: *new(enum.TextYAlignment),
	},
	desc.Function{Name: "CaptureFocus"},
	desc.Function{
		Name:    "IsFocused",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "ReleaseFocus",
		Parameters: []desc.Parameter{
			{
				Name:     "submitted",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
	},
	desc.Function{
		Name:     "ResetKeyboardMode",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetTextFromInput",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "FocusLost",
		Parameters: []desc.Parameter{
			{
				Name: "enterPressed",
				Type: *new(types.Bool),
			},
			{
				Name: "inputThatCausedFocusLoss",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{Name: "Focused"},
	desc.Event{Name: "ReturnPressedFromOnScreenKeyboard"},
)

var ViewportFrame = desc.NewClass("ViewportFrame", GuiObject,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Ambient",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "CurrentCamera",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ImageTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightDirection",
		Value: *new(types.Vector3),
	},
)

var LayerCollector = desc.NewClass("LayerCollector", GuiBase2d,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ResetOnSpawn",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZIndexBehavior",
		Value: *new(enum.ZIndexBehavior),
	},
)

var BillboardGui = desc.NewClass("BillboardGui", LayerCollector,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Adornee",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AlwaysOnTop",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClipsDescendants",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CurrentDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DistanceLowerLimit",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DistanceStep",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DistanceUpperLimit",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExtentsOffset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExtentsOffsetWorldSpace",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightInfluence",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PlayerToHideFrom",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SizeOffset",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StudsOffset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StudsOffsetWorldSpace",
		Value: *new(types.Vector3),
	},
)

var PluginGui = desc.NewClass("PluginGui", LayerCollector,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Title",
		Value: *new(types.String),
	},
	desc.Function{
		Name: "BindToClose",
		Parameters: []desc.Parameter{
			{
				Name:     "function",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
	},
	desc.Function{
		Name:     "GetRelativeMousePosition",
		Returns:  *new(types.Vector2),
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "PluginDragDropped",
		Parameters: []desc.Parameter{
			{
				Name: "dragData",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "PluginDragEntered",
		Parameters: []desc.Parameter{
			{
				Name: "dragData",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "PluginDragLeft",
		Parameters: []desc.Parameter{
			{
				Name: "dragData",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "PluginDragMoved",
		Parameters: []desc.Parameter{
			{
				Name: "dragData",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "WindowFocusReleased",
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "WindowFocused",
		Security: desc.PluginSecurity,
	},
)

var DockWidgetPluginGui = desc.NewClass("DockWidgetPluginGui", PluginGui,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "HostWidgetWasRestored",
		Value: *new(types.Bool),
	},
)

var QWidgetPluginGui = desc.NewClass("QWidgetPluginGui", PluginGui,
	desc.NotCreatable|desc.NotReplicated,
)

var ScreenGui = desc.NewClass("ScreenGui", LayerCollector,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DisplayOrder",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IgnoreGuiInset",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.Hidden,
		Name:          "OnTopOfCoreBlur",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
)

var GuiMain = desc.NewClass("GuiMain", ScreenGui)

var SurfaceGui = desc.NewClass("SurfaceGui", LayerCollector,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Adornee",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AlwaysOnTop",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CanvasSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClipsDescendants",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Face",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightInfluence",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PixelsPerStud",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SizingMode",
		Value: *new(enum.SurfaceGuiSizingMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ToolPunchThroughDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZOffset",
		Value: *new(types.Float),
	},
)

var GuiBase3d = desc.NewClass("GuiBase3d", GuiBase,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Color",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Visible",
		Value: *new(types.Bool),
	},
)

var FloorWire = desc.NewClass("FloorWire", GuiBase3d,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CycleOffset",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "From",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StudsBetweenTextures",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Texture",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "To",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Velocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WireRadius",
		Value: *new(types.Float),
	},
)

var PVAdornment = desc.NewClass("PVAdornment", GuiBase3d,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Adornee",
		Value: types.NilInstance,
	},
)

var HandleAdornment = desc.NewClass("HandleAdornment", PVAdornment,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AlwaysOnTop",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SizeRelativeOffset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZIndex",
		Value: *new(types.Int),
	},
	desc.Event{Name: "MouseButton1Down"},
	desc.Event{Name: "MouseButton1Up"},
	desc.Event{Name: "MouseEnter"},
	desc.Event{Name: "MouseLeave"},
)

var BoxHandleAdornment = desc.NewClass("BoxHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.Vector3),
	},
)

var ConeHandleAdornment = desc.NewClass("ConeHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Height",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
)

var CylinderHandleAdornment = desc.NewClass("CylinderHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Height",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
)

var ImageHandleAdornment = desc.NewClass("ImageHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Image",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.Vector2),
	},
)

var LineHandleAdornment = desc.NewClass("LineHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Length",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Thickness",
		Value: *new(types.Float),
	},
)

var SphereHandleAdornment = desc.NewClass("SphereHandleAdornment", HandleAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Radius",
		Value: *new(types.Float),
	},
)

var ParabolaAdornment = desc.NewClass("ParabolaAdornment", PVAdornment,
	desc.Property{
		Name:          "A",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:          "B",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:          "C",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:          "Range",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:          "Thickness",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "FindPartOnParabola",
		Parameters: []desc.Parameter{
			{
				Name: "ignoreDescendentsTable",
				Type: *new(types.Objects),
			},
		},
		Returns:  *new(types.Tuple),
		Security: desc.RobloxScriptSecurity,
	},
)

var SelectionBox = desc.NewClass("SelectionBox", PVAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LineThickness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "SurfaceColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SurfaceColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SurfaceTransparency",
		Value: *new(types.Float),
	},
)

var SelectionSphere = desc.NewClass("SelectionSphere", PVAdornment,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "SurfaceColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SurfaceColor3",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SurfaceTransparency",
		Value: *new(types.Float),
	},
)

var PartAdornment = desc.NewClass("PartAdornment", GuiBase3d,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Adornee",
		Value: types.NilInstance,
	},
)

var HandlesBase = desc.NewClass("HandlesBase", PartAdornment,
	desc.NotCreatable,
)

var ArcHandles = desc.NewClass("ArcHandles", HandlesBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Axes",
		Value: *new(types.Axes),
	},
	desc.Event{
		Name: "MouseButton1Down",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(enum.Axis),
			},
		},
	},
	desc.Event{
		Name: "MouseButton1Up",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(enum.Axis),
			},
		},
	},
	desc.Event{
		Name: "MouseDrag",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(enum.Axis),
			},
			{
				Name: "relativeAngle",
				Type: *new(types.Float),
			},
			{
				Name: "deltaRadius",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "MouseEnter",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(enum.Axis),
			},
		},
	},
	desc.Event{
		Name: "MouseLeave",
		Parameters: []desc.Parameter{
			{
				Name: "axis",
				Type: *new(enum.Axis),
			},
		},
	},
)

var Handles = desc.NewClass("Handles", HandlesBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Faces",
		Value: *new(types.Faces),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Style",
		Value: *new(enum.HandlesStyle),
	},
	desc.Event{
		Name: "MouseButton1Down",
		Parameters: []desc.Parameter{
			{
				Name: "face",
				Type: *new(enum.NormalId),
			},
		},
	},
	desc.Event{
		Name: "MouseButton1Up",
		Parameters: []desc.Parameter{
			{
				Name: "face",
				Type: *new(enum.NormalId),
			},
		},
	},
	desc.Event{
		Name: "MouseDrag",
		Parameters: []desc.Parameter{
			{
				Name: "face",
				Type: *new(enum.NormalId),
			},
			{
				Name: "distance",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "MouseEnter",
		Parameters: []desc.Parameter{
			{
				Name: "face",
				Type: *new(enum.NormalId),
			},
		},
	},
	desc.Event{
		Name: "MouseLeave",
		Parameters: []desc.Parameter{
			{
				Name: "face",
				Type: *new(enum.NormalId),
			},
		},
	},
)

var SurfaceSelection = desc.NewClass("SurfaceSelection", PartAdornment,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetSurface",
		Value: *new(enum.NormalId),
	},
)

var SelectionLasso = desc.NewClass("SelectionLasso", GuiBase3d,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Humanoid",
		Value: types.NilInstance,
	},
)

var SelectionPartLasso = desc.NewClass("SelectionPartLasso", SelectionLasso,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Part",
		Value: types.NilInstance,
	},
)

var SelectionPointLasso = desc.NewClass("SelectionPointLasso", SelectionLasso,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Point",
		Value: *new(types.Vector3),
	},
)

var GuiService = desc.NewClass("GuiService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoSelectGuiEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated,
		Name:          "CoreEffectFolder",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated,
		Name:          "CoreGuiFolder",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CoreGuiNavigationEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GuiNavigationEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsModalDialog",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsWindows",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "MenuIsOpen",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "SelectedCoreObject",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SelectedObject",
		Value: types.NilInstance,
	},
	desc.Function{
		Name: "AddCenterDialog",
		Parameters: []desc.Parameter{
			{
				Name: "dialog",
				Type: types.NilInstance,
			},
			{
				Name: "centerDialogType",
				Type: *new(enum.CenterDialogType),
			},
			{
				Name: "showFunction",
				Type: *new(types.Function),
			},
			{
				Name: "hideFunction",
				Type: *new(types.Function),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "AddKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "AddSelectionParent",
		Parameters: []desc.Parameter{
			{
				Name: "selectionName",
				Type: *new(types.String),
			},
			{
				Name: "selectionParent",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "AddSelectionTuple",
		Parameters: []desc.Parameter{
			{
				Name: "selectionName",
				Type: *new(types.String),
			},
			{
				Name: "selections",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "AddSpecialKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(enum.SpecialKey),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "BroadcastNotification",
		Parameters: []desc.Parameter{
			{
				Name: "data",
				Type: *new(types.String),
			},
			{
				Name: "notificationType",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ClearError",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{Name: "CloseInspectMenu"},
	desc.Function{
		Name: "CloseStatsBasedOnInputString",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetBrickCount",
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetClosestDialogToPosition",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector3),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetEmotesMenuOpen",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:     "GetErrorCode",
		Returns:  *new(enum.ConnectionError),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetErrorMessage",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetErrorType",
		Returns:  *new(enum.ConnectionError),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetGameplayPausedNotificationEnabled",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetGuiInset",
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name:    "GetInspectMenuEnabled",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:     "GetNotificationTypeList",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetResolutionScale",
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetSafeZoneOffsets",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetUiMessage",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "InspectPlayerFromHumanoidDescription",
		Parameters: []desc.Parameter{
			{
				Name: "humanoidDescription",
				Type: types.NilInstance,
			},
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "InspectPlayerFromUserId",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "InspectPlayerFromUserIdWithCtx",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "ctx",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "IsMemoryTrackerEnabled",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "IsTenFootInterface",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "OpenBrowserWindow",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenNativeOverlay",
		Parameters: []desc.Parameter{
			{
				Name: "title",
				Type: *new(types.String),
			},
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RemoveCenterDialog",
		Parameters: []desc.Parameter{
			{
				Name: "dialog",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RemoveKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RemoveSelectionGroup",
		Parameters: []desc.Parameter{
			{
				Name: "selectionName",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "RemoveSpecialKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(enum.SpecialKey),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetEmotesMenuOpen",
		Parameters: []desc.Parameter{
			{
				Name: "isOpen",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "SetGameplayPausedNotificationEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "SetGlobalGuiInset",
		Parameters: []desc.Parameter{
			{
				Name: "x1",
				Type: *new(types.Int),
			},
			{
				Name: "y1",
				Type: *new(types.Int),
			},
			{
				Name: "x2",
				Type: *new(types.Int),
			},
			{
				Name: "y2",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetInspectMenuEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "SetMenuIsOpen",
		Parameters: []desc.Parameter{
			{
				Name: "open",
				Type: *new(types.Bool),
			},
			{
				Name:     "menuName",
				Optional: true,
				Type:     types.String("default"),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetSafeZoneOffsets",
		Parameters: []desc.Parameter{
			{
				Name: "top",
				Type: *new(types.Float),
			},
			{
				Name: "bottom",
				Type: *new(types.Float),
			},
			{
				Name: "left",
				Type: *new(types.Float),
			},
			{
				Name: "right",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetUiMessage",
		Parameters: []desc.Parameter{
			{
				Name: "msgType",
				Type: *new(enum.UiMessageType),
			},
			{
				Name:     "uiMessage",
				Optional: true,
				Type:     types.String("errorCode"),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "ShowStatsBasedOnInputString",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ToggleFullscreen",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "GetScreenResolution",
		Returns:  *new(types.Vector2),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "BrowserWindowClosed",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "CloseInspectMenuRequest",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "EmotesMenuOpenChanged",
		Parameters: []desc.Parameter{
			{
				Name: "isOpen",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ErrorMessageChanged",
		Parameters: []desc.Parameter{
			{
				Name: "newErrorMessage",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "InspectMenuEnabledChangedSignal",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "InspectPlayerFromHumanoidDescriptionRequest",
		Parameters: []desc.Parameter{
			{
				Name: "humanoidDescription",
				Type: types.NilInstance,
			},
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "InspectPlayerFromUserIdRequest",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "InspectPlayerFromUserIdWithCtxRequest",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "ctx",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "KeyPressed",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "modifiers",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{Name: "MenuClosed"},
	desc.Event{Name: "MenuOpened"},
	desc.Event{
		Name: "NetworkPausedEnabledChanged",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "SafeZoneOffsetsChanged",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "ShowLeaveConfirmation",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "SpecialKeyPressed",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(enum.SpecialKey),
			},
			{
				Name: "modifiers",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "UiMessageChanged",
		Parameters: []desc.Parameter{
			{
				Name: "msgType",
				Type: *new(enum.UiMessageType),
			},
			{
				Name: "newUiMessage",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Callback{
		Name: "SendCoreUiNotification",
		Parameters: []desc.Parameter{
			{
				Name: "title",
				Type: *new(types.String),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var GuidRegistryService = desc.NewClass("GuidRegistryService", Instance,
	desc.NotCreatable|desc.Service,
)

var HapticService = desc.NewClass("HapticService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "GetMotor",
		Parameters: []desc.Parameter{
			{
				Name: "inputType",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "vibrationMotor",
				Type: *new(enum.VibrationMotor),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "IsMotorSupported",
		Parameters: []desc.Parameter{
			{
				Name: "inputType",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "vibrationMotor",
				Type: *new(enum.VibrationMotor),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsVibrationSupported",
		Parameters: []desc.Parameter{
			{
				Name: "inputType",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "SetMotor",
		Parameters: []desc.Parameter{
			{
				Name: "inputType",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "vibrationMotor",
				Type: *new(enum.VibrationMotor),
			},
			{
				Name: "vibrationValues",
				Type: *new(types.Tuple),
			},
		},
	},
)

var Hopper = desc.NewClass("Hopper", Instance,
	desc.NotCreatable|desc.Service,
)

var HttpRbxApiService = desc.NewClass("HttpRbxApiService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAsync",
		Parameters: []desc.Parameter{
			{
				Name: "apiUrlPath",
				Type: *new(types.String),
			},
			{
				Name:     "priority",
				Optional: true,
				Type:     enum.ThrottlingPriority(0),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAsyncFullUrl",
		Parameters: []desc.Parameter{
			{
				Name: "apiUrl",
				Type: *new(types.String),
			},
			{
				Name:     "priority",
				Optional: true,
				Type:     enum.ThrottlingPriority(0),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PostAsync",
		Parameters: []desc.Parameter{
			{
				Name: "apiUrlPath",
				Type: *new(types.String),
			},
			{
				Name: "data",
				Type: *new(types.String),
			},
			{
				Name:     "priority",
				Optional: true,
				Type:     enum.ThrottlingPriority(0),
			},
			{
				Name:     "content_type",
				Optional: true,
				Type:     enum.HttpContentType(0),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PostAsyncFullUrl",
		Parameters: []desc.Parameter{
			{
				Name: "apiUrl",
				Type: *new(types.String),
			},
			{
				Name: "data",
				Type: *new(types.String),
			},
			{
				Name:     "priority",
				Optional: true,
				Type:     enum.ThrottlingPriority(0),
			},
			{
				Name:     "content_type",
				Optional: true,
				Type:     enum.HttpContentType(0),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "RequestAsync",
		Parameters: []desc.Parameter{
			{
				Name: "requestOptions",
				Type: *new(types.Dictionary),
			},
			{
				Name:     "priority",
				Optional: true,
				Type:     enum.ThrottlingPriority(0),
			},
			{
				Name:     "content_type",
				Optional: true,
				Type:     enum.HttpContentType(0),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
)

var HttpRequest = desc.NewClass("HttpRequest", Instance,
	desc.NotCreatable,
	desc.Function{
		Name:     "Cancel",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Start",
		Parameters: []desc.Parameter{
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var HttpService = desc.NewClass("HttpService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "HttpEnabled",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "GenerateGUID",
		Parameters: []desc.Parameter{
			{
				Name:     "wrapInCurlyBraces",
				Optional: true,
				Type:     types.Bool(true),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name:     "GetHttpEnabled",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "JSONDecode",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Name: "JSONEncode",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: *new(types.Variant),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "RequestInternal",
		Parameters: []desc.Parameter{
			{
				Name: "options",
				Type: *new(types.Dictionary),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetHttpEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "UrlEncode",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
			{
				Name:     "nocache",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name: "headers",
				Type: *new(types.Variant),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PostAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
			{
				Name: "data",
				Type: *new(types.String),
			},
			{
				Name:     "content_type",
				Optional: true,
				Type:     enum.HttpContentType(0),
			},
			{
				Name:     "compress",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name: "headers",
				Type: *new(types.Variant),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "RequestAsync",
		Parameters: []desc.Parameter{
			{
				Name: "requestOptions",
				Type: *new(types.Dictionary),
			},
		},
		Returns: *new(types.Dictionary),
	},
)

var Humanoid = desc.NewClass("Humanoid", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoJumpEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoRotate",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutomaticScalingEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BreakJointsOnDeath",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:  "CameraOffset",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "CollisionType",
		Value:         *new(enum.HumanoidCollisionType),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DisplayDistanceType",
		Value: *new(enum.HumanoidDisplayDistanceType),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "FloorMaterial",
		Value: *new(enum.Material),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Health",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HealthDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HealthDisplayType",
		Value: *new(enum.HumanoidHealthDisplayType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HipHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Jump",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "JumpHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "JumpPower",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "LeftLeg",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxHealth",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxSlopeAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MoveDirection",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NameDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NameOcclusion",
		Value: *new(enum.NameOcclusion),
	},
	desc.Property{
		Name:  "PlatformStand",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RigType",
		Value: *new(enum.HumanoidRigType),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "RightLeg",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "RootPart",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "SeatPart",
		Value: types.NilInstance,
	},
	desc.Property{
		Name:  "Sit",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:  "TargetPoint",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Torso",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UseJumpPower",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WalkSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Name:  "WalkToPart",
		Value: types.NilInstance,
	},
	desc.Property{
		Name:  "WalkToPoint",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "maxHealth",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AddAccessory",
		Parameters: []desc.Parameter{
			{
				Name: "accessory",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "AddCustomStatus",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "AddStatus",
		Parameters: []desc.Parameter{
			{
				Name:     "status",
				Optional: true,
				Type:     enum.Status(0),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "BuildRigFromAttachments"},
	desc.Function{
		Name:     "CacheDefaults",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ChangeState",
		Parameters: []desc.Parameter{
			{
				Name:     "state",
				Optional: true,
				Type:     enum.HumanoidStateType(18),
			},
		},
	},
	desc.Function{
		Name: "EquipTool",
		Parameters: []desc.Parameter{
			{
				Name: "tool",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:    "GetAccessories",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetAppliedDescription",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetBodyPartR15",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
		Returns: *new(enum.BodyPartR15),
	},
	desc.Function{
		Name: "GetLimb",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
		Returns: *new(enum.Limb),
	},
	desc.Function{
		Name:    "GetPlayingAnimationTracks",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetState",
		Returns: *new(enum.HumanoidStateType),
	},
	desc.Function{
		Name: "GetStateEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "state",
				Type: *new(enum.HumanoidStateType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetStatuses",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "HasCustomStatus",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "HasStatus",
		Parameters: []desc.Parameter{
			{
				Name:     "status",
				Optional: true,
				Type:     enum.Status(0),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "LoadAnimation",
		Parameters: []desc.Parameter{
			{
				Name: "animation",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "Move",
		Parameters: []desc.Parameter{
			{
				Name: "moveDirection",
				Type: *new(types.Vector3),
			},
			{
				Name:     "relativeToCamera",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
	},
	desc.Function{
		Name: "MoveTo",
		Parameters: []desc.Parameter{
			{
				Name: "location",
				Type: *new(types.Vector3),
			},
			{
				Name:     "part",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{Name: "RemoveAccessories"},
	desc.Function{
		Name: "RemoveCustomStatus",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "RemoveStatus",
		Parameters: []desc.Parameter{
			{
				Name:     "status",
				Optional: true,
				Type:     enum.Status(0),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "ReplaceBodyPartR15",
		Parameters: []desc.Parameter{
			{
				Name: "bodyPart",
				Type: *new(enum.BodyPartR15),
			},
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "SetClickToWalkEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetStateEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "state",
				Type: *new(enum.HumanoidStateType),
			},
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "TakeDamage",
		Parameters: []desc.Parameter{
			{
				Name: "amount",
				Type: *new(types.Float),
			},
		},
	},
	desc.Function{Name: "UnequipTools"},
	desc.Function{
		Name: "loadAnimation",
		Parameters: []desc.Parameter{
			{
				Name: "animation",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "takeDamage",
		Parameters: []desc.Parameter{
			{
				Name: "amount",
				Type: *new(types.Float),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ApplyDescription",
		Parameters: []desc.Parameter{
			{
				Name: "humanoidDescription",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ApplyDescriptionClientServer",
		Parameters: []desc.Parameter{
			{
				Name: "humanoidDescription",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PlayEmote",
		Parameters: []desc.Parameter{
			{
				Name: "emoteName",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PlayEmoteById",
		Parameters: []desc.Parameter{
			{
				Name: "emoteName",
				Type: *new(types.String),
			},
			{
				Name: "emoteId",
				Type: *new(types.Int64),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "AnimationPlayed",
		Parameters: []desc.Parameter{
			{
				Name: "animationTrack",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "Climbing",
		Parameters: []desc.Parameter{
			{
				Name: "speed",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "CustomStatusAdded",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "CustomStatusRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{Name: "Died"},
	desc.Event{
		Name: "FallingDown",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "FreeFalling",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "GettingUp",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "HealthChanged",
		Parameters: []desc.Parameter{
			{
				Name: "health",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "Jumping",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "MoveToFinished",
		Parameters: []desc.Parameter{
			{
				Name: "reached",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PlatformStanding",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "Ragdoll",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "Running",
		Parameters: []desc.Parameter{
			{
				Name: "speed",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "Seated",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
			{
				Name: "currentSeatPart",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "StateChanged",
		Parameters: []desc.Parameter{
			{
				Name: "old",
				Type: *new(enum.HumanoidStateType),
			},
			{
				Name: "new",
				Type: *new(enum.HumanoidStateType),
			},
		},
	},
	desc.Event{
		Name: "StateEnabledChanged",
		Parameters: []desc.Parameter{
			{
				Name: "state",
				Type: *new(enum.HumanoidStateType),
			},
			{
				Name: "isEnabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "StatusAdded",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(enum.Status),
			},
		},
	},
	desc.Event{
		Name: "StatusRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "status",
				Type: *new(enum.Status),
			},
		},
	},
	desc.Event{
		Name: "Strafing",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "Swimming",
		Parameters: []desc.Parameter{
			{
				Name: "speed",
				Type: *new(types.Float),
			},
		},
	},
	desc.Event{
		Name: "Touched",
		Parameters: []desc.Parameter{
			{
				Name: "touchingPart",
				Type: types.NilInstance,
			},
			{
				Name: "humanoidPart",
				Type: types.NilInstance,
			},
		},
	},
)

var HumanoidDescription = desc.NewClass("HumanoidDescription", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BodyTypeScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClimbAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DepthScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Face",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FaceAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FallAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrontAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GraphicTShirt",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HairAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HatAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Head",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeightScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IdleAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "JumpAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftArm",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftArmColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftLeg",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftLegColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NeckAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags:         desc.Hidden,
		Name:          "NumberEmotesLoaded",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Pants",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ProportionScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightArm",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightArmColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightLeg",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightLegColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RunAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Shirt",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShouldersAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SwimAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Torso",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TorsoColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaistAccessory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WalkAnimation",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WidthScale",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AddEmote",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name:    "GetEmotes",
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Name:    "GetEquippedEmotes",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "RemoveEmote",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEmotes",
		Parameters: []desc.Parameter{
			{
				Name: "emotes",
				Type: *new(types.Dictionary),
			},
		},
	},
	desc.Function{
		Name: "SetEquippedEmotes",
		Parameters: []desc.Parameter{
			{
				Name: "equippedEmotes",
				Type: *new(types.Array),
			},
		},
	},
	desc.Event{
		Name: "EmotesChanged",
		Parameters: []desc.Parameter{
			{
				Name: "newEmotes",
				Type: *new(types.Dictionary),
			},
		},
	},
	desc.Event{
		Name: "EquippedEmotesChanged",
		Parameters: []desc.Parameter{
			{
				Name: "newEquippedEmotes",
				Type: *new(types.Array),
			},
		},
	},
)

var InputObject = desc.NewClass("InputObject", Instance,
	desc.NotCreatable,
	desc.Property{
		Name:  "Delta",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Name:  "KeyCode",
		Value: *new(enum.KeyCode),
	},
	desc.Property{
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Name:  "UserInputState",
		Value: *new(enum.UserInputState),
	},
	desc.Property{
		Name:  "UserInputType",
		Value: *new(enum.UserInputType),
	},
	desc.Function{
		Name: "IsModifierKeyDown",
		Parameters: []desc.Parameter{
			{
				Name: "modifierKey",
				Type: *new(enum.ModifierKey),
			},
		},
		Returns: *new(types.Bool),
	},
)

var InsertService = desc.NewClass("InsertService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AllowClientInsertModels",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "AllowInsertFreeModels",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "ApproveAssetId",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "ApproveAssetVersionId",
		Parameters: []desc.Parameter{
			{
				Name: "assetVersionId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "Insert",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "LoadLocalAsset",
		Parameters: []desc.Parameter{
			{
				Name: "assetPath",
				Type: *new(types.String),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "LoadPackageAsset",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.Content),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "GetBaseCategories",
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "GetBaseSets",
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCollection",
		Parameters: []desc.Parameter{
			{
				Name: "categoryId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetFreeDecals",
		Parameters: []desc.Parameter{
			{
				Name: "searchText",
				Type: *new(types.String),
			},
			{
				Name: "pageNum",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetFreeModels",
		Parameters: []desc.Parameter{
			{
				Name: "searchText",
				Type: *new(types.String),
			},
			{
				Name: "pageNum",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetLatestAssetVersionAsync",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Int64),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetUserCategories",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetUserSets",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "LoadAsset",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "LoadAssetVersion",
		Parameters: []desc.Parameter{
			{
				Name: "assetVersionId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "loadAsset",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
)

var JointInstance = desc.NewClass("JointInstance", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "C0",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "C1",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Part0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Part1",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "part1",
		Value: types.NilInstance,
	},
)

var DynamicRotate = desc.NewClass("DynamicRotate", JointInstance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BaseAngle",
		Value: *new(types.Float),
	},
)

var RotateP = desc.NewClass("RotateP", DynamicRotate)

var RotateV = desc.NewClass("RotateV", DynamicRotate)

var Glue = desc.NewClass("Glue", JointInstance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "F0",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "F1",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "F2",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "F3",
		Value: *new(types.Vector3),
	},
)

var ManualSurfaceJointInstance = desc.NewClass("ManualSurfaceJointInstance", JointInstance,
	desc.NotCreatable,
)

var ManualGlue = desc.NewClass("ManualGlue", ManualSurfaceJointInstance)

var ManualWeld = desc.NewClass("ManualWeld", ManualSurfaceJointInstance)

var Motor = desc.NewClass("Motor", JointInstance,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "CurrentAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DesiredAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxVelocity",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "SetDesiredAngle",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Float),
			},
		},
	},
)

var Motor6D = desc.NewClass("Motor6D", Motor,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "Transform",
		Value: *new(types.CFrame),
	},
)

var Rotate = desc.NewClass("Rotate", JointInstance)

var Snap = desc.NewClass("Snap", JointInstance)

var VelocityMotor = desc.NewClass("VelocityMotor", JointInstance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CurrentAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DesiredAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Hole",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxVelocity",
		Value: *new(types.Float),
	},
)

var Weld = desc.NewClass("Weld", JointInstance)

var JointsService = desc.NewClass("JointsService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{Name: "ClearJoinAfterMoveJoints"},
	desc.Function{Name: "CreateJoinAfterMoveJoints"},
	desc.Function{
		Name: "SetJoinAfterMoveInstance",
		Parameters: []desc.Parameter{
			{
				Name: "joinInstance",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "SetJoinAfterMoveTarget",
		Parameters: []desc.Parameter{
			{
				Name: "joinTarget",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{Name: "ShowPermissibleJoints"},
)

var KeyboardService = desc.NewClass("KeyboardService", Instance,
	desc.NotCreatable|desc.Service,
)

var Keyframe = desc.NewClass("Keyframe", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Time",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AddMarker",
		Parameters: []desc.Parameter{
			{
				Name: "marker",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "AddPose",
		Parameters: []desc.Parameter{
			{
				Name: "pose",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:    "GetMarkers",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "GetPoses",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "RemoveMarker",
		Parameters: []desc.Parameter{
			{
				Name: "marker",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "RemovePose",
		Parameters: []desc.Parameter{
			{
				Name: "pose",
				Type: types.NilInstance,
			},
		},
	},
)

var KeyframeMarker = desc.NewClass("KeyframeMarker", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.String),
	},
)

var KeyframeSequence = desc.NewClass("KeyframeSequence", Instance,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "AuthoredHipHeight",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Loop",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Priority",
		Value: *new(enum.AnimationPriority),
	},
	desc.Function{
		Name: "AddKeyframe",
		Parameters: []desc.Parameter{
			{
				Name: "keyframe",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:    "GetKeyframes",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "RemoveKeyframe",
		Parameters: []desc.Parameter{
			{
				Name: "keyframe",
				Type: types.NilInstance,
			},
		},
	},
)

var KeyframeSequenceProvider = desc.NewClass("KeyframeSequenceProvider", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "GetKeyframeSequence",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Content),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetKeyframeSequenceById",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "useCache",
				Type: *new(types.Bool),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetMemStats",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RegisterActiveKeyframeSequence",
		Parameters: []desc.Parameter{
			{
				Name: "keyframeSequence",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Content),
	},
	desc.Function{
		Name: "RegisterKeyframeSequence",
		Parameters: []desc.Parameter{
			{
				Name: "keyframeSequence",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Content),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetAnimations",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetKeyframeSequenceAsync",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Content),
			},
		},
		Returns: types.NilInstance,
	},
)

var Light = desc.NewClass("Light", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Brightness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Shadows",
		Value: *new(types.Bool),
	},
)

var PointLight = desc.NewClass("PointLight", Light,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Range",
		Value: *new(types.Float),
	},
)

var SpotLight = desc.NewClass("SpotLight", Light,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Angle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Face",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Range",
		Value: *new(types.Float),
	},
)

var SurfaceLight = desc.NewClass("SurfaceLight", Light,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Angle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Face",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Range",
		Value: *new(types.Float),
	},
)

var Lighting = desc.NewClass("Lighting", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Ambient",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Brightness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "ClockTime",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ColorShift_Bottom",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ColorShift_Top",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EnvironmentDiffuseScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EnvironmentSpecularScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExposureCompensation",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FogColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FogEnd",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FogStart",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GeographicLatitude",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GlobalShadows",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LegacyOutlines",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OutdoorAmbient",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Outlines",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "ShadowColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShadowSoftness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Technology",
		Value: *new(enum.Technology),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TimeOfDay",
		Value: *new(types.String),
	},
	desc.Function{
		Name:    "GetMinutesAfterMidnight",
		Returns: *new(types.Double),
	},
	desc.Function{
		Name:    "GetMoonDirection",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetMoonPhase",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name:    "GetSunDirection",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name: "SetMinutesAfterMidnight",
		Parameters: []desc.Parameter{
			{
				Name: "minutes",
				Type: *new(types.Double),
			},
		},
	},
	desc.Function{
		Name:    "getMinutesAfterMidnight",
		Returns: *new(types.Double),
	},
	desc.Function{
		Name: "setMinutesAfterMidnight",
		Parameters: []desc.Parameter{
			{
				Name: "minutes",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "LightingChanged",
		Parameters: []desc.Parameter{
			{
				Name: "skyboxChanged",
				Type: *new(types.Bool),
			},
		},
	},
)

var LocalStorageService = desc.NewClass("LocalStorageService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name:     "Flush",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "WhenLoaded",
		Parameters: []desc.Parameter{
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ItemWasSet",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "StoreWasCleared",
		Security: desc.RobloxScriptSecurity,
	},
)

var AppStorageService = desc.NewClass("AppStorageService", LocalStorageService,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var UserStorageService = desc.NewClass("UserStorageService", LocalStorageService,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var LocalizationService = desc.NewClass("LocalizationService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "ForcePlayModeGameLocaleId",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "ForcePlayModeRobloxLocaleId",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden,
		Name:          "IsTextScraperRunning",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "RobloxForcePlayModeGameLocaleId",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "RobloxForcePlayModeRobloxLocaleId",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "RobloxLocaleId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "SystemLocaleId",
		Value: *new(types.String),
	},
	desc.Function{
		Name:    "GetCorescriptLocalizations",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "GetTableEntries",
		Parameters: []desc.Parameter{
			{
				Name:     "instance",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "GetTranslatorForPlayer",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "SetRobloxLocaleId",
		Parameters: []desc.Parameter{
			{
				Name: "locale",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "StartTextScraper",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "StopTextScraper",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCountryRegionForPlayerAsync",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetTranslatorForLocaleAsync",
		Parameters: []desc.Parameter{
			{
				Name: "locale",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetTranslatorForPlayerAsync",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptDownloadGameTableToCSV",
		Parameters: []desc.Parameter{
			{
				Name: "table",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "PromptExportToCSVs",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "PromptImportFromCSVs",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "PromptUploadCSVToGameTable",
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "AutoTranslateWillRun",
		Security: desc.RobloxScriptSecurity,
	},
)

var LocalizationTable = desc.NewClass("LocalizationTable", Instance,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "DevelopmentLanguage",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "Root",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SourceLocaleId",
		Value: *new(types.String),
	},
	desc.Function{
		Name:    "GetContents",
		Returns: *new(types.String),
	},
	desc.Function{
		Name:    "GetEntries",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "GetString",
		Parameters: []desc.Parameter{
			{
				Name: "targetLocaleId",
				Type: *new(types.String),
			},
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "GetTranslator",
		Parameters: []desc.Parameter{
			{
				Name: "localeId",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "RemoveEntry",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "RemoveEntryValue",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "localeId",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "RemoveKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "RemoveTargetLocale",
		Parameters: []desc.Parameter{
			{
				Name: "localeId",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetContents",
		Parameters: []desc.Parameter{
			{
				Name: "contents",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntries",
		Parameters: []desc.Parameter{
			{
				Name: "entries",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Name: "SetEntry",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "targetLocaleId",
				Type: *new(types.String),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntryContext",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "newContext",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntryExample",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "example",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntryKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "newKey",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntrySource",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "newSource",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetEntryValue",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "source",
				Type: *new(types.String),
			},
			{
				Name: "context",
				Type: *new(types.String),
			},
			{
				Name: "localeId",
				Type: *new(types.String),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetIsExemptFromUGCAnalytics",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var LogService = desc.NewClass("LogService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "ExecuteScript",
		Parameters: []desc.Parameter{
			{
				Name: "source",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetHttpResultHistory",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetLogHistory",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:     "RequestHttpResultApproved",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "RequestServerHttpResult",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "RequestServerOutput",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "HttpResultOut",
		Parameters: []desc.Parameter{
			{
				Name: "httpResult",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "MessageOut",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "messageType",
				Type: *new(enum.MessageType),
			},
		},
	},
	desc.Event{
		Name: "OnHttpResultApproved",
		Parameters: []desc.Parameter{
			{
				Name: "isApproved",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ServerHttpResultOut",
		Parameters: []desc.Parameter{
			{
				Name: "httpResult",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ServerMessageOut",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "messageType",
				Type: *new(enum.MessageType),
			},
			{
				Name: "timestamp",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var LoginService = desc.NewClass("LoginService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:     "Logout",
		Security: desc.RobloxSecurity,
	},
	desc.Function{
		Name:     "PromptLogin",
		Security: desc.RobloxSecurity,
	},
	desc.Event{
		Name: "LoginFailed",
		Parameters: []desc.Parameter{
			{
				Name: "loginError",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxSecurity,
	},
	desc.Event{
		Name: "LoginSucceeded",
		Parameters: []desc.Parameter{
			{
				Name: "username",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxSecurity,
	},
)

var LuaSettings = desc.NewClass("LuaSettings", Instance,
	desc.Settings,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreScriptStartsReported",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DefaultWaitTime",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GcFrequency",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GcLimit",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GcPause",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GcStepMul",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaitingThreadsBudget",
		Value: *new(types.Float),
	},
)

var LuaSourceContainer = desc.NewClass("LuaSourceContainer", Instance,
	desc.NotCreatable,
	desc.Property{
		Name:  "CurrentEditor",
		Value: types.NilInstance,
	},
)

var BaseScript = desc.NewClass("BaseScript", LuaSourceContainer,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Disabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LinkedSource",
		Value: *new(types.Content),
	},
)

var CoreScript = desc.NewClass("CoreScript", BaseScript,
	desc.NotCreatable|desc.NotReplicated,
)

var Script = desc.NewClass("Script", BaseScript,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "Source",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.ProtectedString),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetHash",
		Returns:  *new(types.String),
		Security: desc.LocalUserSecurity,
	},
)

var LocalScript = desc.NewClass("LocalScript", Script)

var ModuleScript = desc.NewClass("ModuleScript", LuaSourceContainer,
	desc.Property{
		Flags:         desc.NotReplicated,
		Name:          "CoreScriptModified",
		ReadSecurity:  desc.RobloxSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LinkedSource",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "Source",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.ProtectedString),
		WriteSecurity: desc.PluginSecurity,
	},
)

var LuaWebService = desc.NewClass("LuaWebService", Instance,
	desc.NotCreatable|desc.Service,
)

var MarketplaceService = desc.NewClass("MarketplaceService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "PlayerCanMakePurchases",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PromptBundlePurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PromptGamePassPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "PromptNativePurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PromptProductPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
			{
				Name:     "equipIfPurchased",
				Optional: true,
				Type:     types.Bool(true),
			},
			{
				Name:     "currencyType",
				Optional: true,
				Type:     enum.CurrencyType(0),
			},
		},
	},
	desc.Function{
		Name: "PromptPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name:     "equipIfPurchased",
				Optional: true,
				Type:     types.Bool(true),
			},
			{
				Name:     "currencyType",
				Optional: true,
				Type:     enum.CurrencyType(0),
			},
		},
	},
	desc.Function{
		Name: "PromptSubscriptionCancellation",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "PromptSubscriptionPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Function{
		Name: "PromptThirdPartyPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "ReportAssetSale",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.String),
			},
			{
				Name: "robuxAmount",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ReportRobuxUpsellStarted",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalAssetTypePurchased",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetType",
				Type: *new(enum.AssetType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalClientPurchaseSuccess",
		Parameters: []desc.Parameter{
			{
				Name: "ticket",
				Type: *new(types.String),
			},
			{
				Name: "playerId",
				Type: *new(types.Int64),
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptBundlePurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
			{
				Name: "success",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptGamePassPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
			{
				Name: "success",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptProductPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
			{
				Name: "success",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "success",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptSubscriptionCancellationFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasCanceled",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalPromptSubscriptionPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SignalServerLuaDialogClosed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "GetDeveloperProductsAsync",
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetProductInfo",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name:     "infoType",
				Optional: true,
				Type:     enum.InfoType(0),
			},
		},
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "GetRobuxBalance",
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsPlayerSubscribed",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PerformPurchase",
		Parameters: []desc.Parameter{
			{
				Name: "infoType",
				Type: *new(enum.InfoType),
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
			{
				Name: "expectedPrice",
				Type: *new(types.Int),
			},
			{
				Name: "requestId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PlayerOwnsAsset",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UserOwnsGamePassAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "ClientLuaDialogRequested",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ClientPurchaseSuccess",
		Parameters: []desc.Parameter{
			{
				Name: "ticket",
				Type: *new(types.String),
			},
			{
				Name: "playerId",
				Type: *new(types.Int64),
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "NativePurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.String),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptBundlePurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptBundlePurchaseRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "bundleId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptGamePassPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PromptGamePassPurchaseRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "gamePassId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptProductPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
			{
				Name: "isPurchased",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PromptProductPurchaseRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.Int64),
			},
			{
				Name: "equipIfPurchased",
				Type: *new(types.Bool),
			},
			{
				Name: "currencyType",
				Type: *new(enum.CurrencyType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "isPurchased",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PromptPurchaseRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "equipIfPurchased",
				Type: *new(types.Bool),
			},
			{
				Name: "currencyType",
				Type: *new(enum.CurrencyType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptSubscriptionCancellationFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasCanceled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PromptSubscriptionCancellationRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PromptSubscriptionPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PromptSubscriptionPurchaseRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "subscriptionId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ServerPurchaseVerification",
		Parameters: []desc.Parameter{
			{
				Name: "serverResponseTable",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ThirdPartyPurchaseFinished",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "productId",
				Type: *new(types.String),
			},
			{
				Name: "receipt",
				Type: *new(types.String),
			},
			{
				Name: "wasPurchased",
				Type: *new(types.Bool),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Callback{
		Name: "ProcessReceipt",
		Parameters: []desc.Parameter{
			{
				Name: "receiptInfo",
				Type: *new(types.Dictionary),
			},
		},
		Returns: *new(enum.ProductPurchaseDecision),
	},
)

var MemStorageConnection = desc.NewClass("MemStorageConnection", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Name:     "Disconnect",
		Security: desc.PluginSecurity,
	},
)

var MemStorageService = desc.NewClass("MemStorageService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "Bind",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "BindAndFire",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Fire",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name:     "value",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name:     "defaultValue",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "HasItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RemoveItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name:     "value",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var Message = desc.NewClass("Message", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text",
		Value: *new(types.String),
	},
)

var Hint = desc.NewClass("Hint", Message)

var MessagingService = desc.NewClass("MessagingService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Flags: desc.Yields,
		Name:  "PublishAsync",
		Parameters: []desc.Parameter{
			{
				Name: "topic",
				Type: *new(types.String),
			},
			{
				Name: "message",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "SubscribeAsync",
		Parameters: []desc.Parameter{
			{
				Name: "topic",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns: types.NilConnection,
	},
)

var Mouse = desc.NewClass("Mouse", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Hit",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Icon",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Origin",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Target",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TargetFilter",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "TargetSurface",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "UnitRay",
		Value: *new(types.Ray),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "ViewSizeX",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "ViewSizeY",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "X",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Y",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "hit",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "target",
		Value: types.NilInstance,
	},
	desc.Event{Name: "Button1Down"},
	desc.Event{Name: "Button1Up"},
	desc.Event{Name: "Button2Down"},
	desc.Event{Name: "Button2Up"},
	desc.Event{Name: "Idle"},
	desc.Event{
		Name: "KeyDown",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "KeyUp",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{Name: "Move"},
	desc.Event{Name: "WheelBackward"},
	desc.Event{Name: "WheelForward"},
	desc.Event{
		Name: "keyDown",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
	},
)

var PlayerMouse = desc.NewClass("PlayerMouse", Mouse,
	desc.NotCreatable,
)

var PluginMouse = desc.NewClass("PluginMouse", Mouse,
	desc.NotCreatable,
	desc.Event{
		Name: "DragEnter",
		Parameters: []desc.Parameter{
			{
				Name: "instances",
				Type: *new(types.Objects),
			},
		},
		Security: desc.PluginSecurity,
	},
)

var MouseService = desc.NewClass("MouseService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var MultipleDocumentInterfaceInstance = desc.NewClass("MultipleDocumentInterfaceInstance", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "FocusedDataModelSession",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DataModelSessionEnded",
		Parameters: []desc.Parameter{
			{
				Name: "dataModelSession",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "DataModelSessionStarted",
		Parameters: []desc.Parameter{
			{
				Name: "dataModelSession",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var NetworkMarker = desc.NewClass("NetworkMarker", Instance,
	desc.NotCreatable,
	desc.Event{Name: "Received"},
)

var NetworkPeer = desc.NewClass("NetworkPeer", Instance,
	desc.NotCreatable,
	desc.Function{
		Name: "SetOutgoingKBPSLimit",
		Parameters: []desc.Parameter{
			{
				Name: "limit",
				Type: *new(types.Int),
			},
		},
		Security: desc.PluginSecurity,
	},
)

var NetworkClient = desc.NewClass("NetworkClient", NetworkPeer,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Ticket",
		Value: *new(types.String),
	},
	desc.Event{
		Name: "ConnectionAccepted",
		Parameters: []desc.Parameter{
			{
				Name: "peer",
				Type: *new(types.String),
			},
			{
				Name: "replicator",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "ConnectionFailed",
		Parameters: []desc.Parameter{
			{
				Name: "peer",
				Type: *new(types.String),
			},
			{
				Name: "code",
				Type: *new(types.Int),
			},
			{
				Name: "reason",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "ConnectionRejected",
		Parameters: []desc.Parameter{
			{
				Name: "peer",
				Type: *new(types.String),
			},
		},
	},
)

var NetworkServer = desc.NewClass("NetworkServer", NetworkPeer,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Port",
		Value: *new(types.Int),
	},
	desc.Function{
		Name:     "GetClientCount",
		Returns:  *new(types.Int),
		Security: desc.LocalUserSecurity,
	},
)

var NetworkReplicator = desc.NewClass("NetworkReplicator", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Name:     "CloseConnection",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:    "GetPlayer",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetRakStatsString",
		Parameters: []desc.Parameter{
			{
				Name:     "verbosityLevel",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
)

var ClientReplicator = desc.NewClass("ClientReplicator", NetworkReplicator,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Name: "RequestRCCProfilerData",
		Parameters: []desc.Parameter{
			{
				Name: "frameRate",
				Type: *new(types.Int),
			},
			{
				Name: "timeFrame",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RequestServerStats",
		Parameters: []desc.Parameter{
			{
				Name: "request",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "RCCProfilerDataComplete",
		Parameters: []desc.Parameter{
			{
				Name: "success",
				Type: *new(types.Bool),
			},
			{
				Name: "message",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "StatsReceived",
		Parameters: []desc.Parameter{
			{
				Name: "stats",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var ServerReplicator = desc.NewClass("ServerReplicator", NetworkReplicator,
	desc.NotCreatable|desc.NotReplicated,
)

var NetworkSettings = desc.NewClass("NetworkSettings", Instance,
	desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ArePhysicsRejectionsReported",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClientPhysicsSendRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DataGCRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DataMtuAdjust",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "DataSendPriority",
		Value: *new(enum.PacketPriority),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DataSendRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated,
		Name:          "ExtraMemoryUsed",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:          "FreeMemoryMBytes",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IncommingReplicationLag",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsQueueErrorComputed",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NetworkOwnerRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PhysicsMtuAdjust",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "PhysicsSendPriority",
		Value: *new(enum.PacketPriority),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PhysicsSendRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PreferredClientPort",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintBits",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintEvents",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintFilters",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintInstances",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintJoinSizeBreakdown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintPhysicsErrors",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintProperties",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintSplitMessage",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintStreamInstanceQuota",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrintTouches",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ProxyEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ProxyURL",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReceiveRate",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RenderStreamedRegions",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShowActiveAnimationAsset",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TouchSendRate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TrackDataTypes",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TrackPhysicsDetails",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UsePhysicsPacketCache",
		Value: *new(types.Bool),
	},
)

var NoCollisionConstraint = desc.NewClass("NoCollisionConstraint", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Part0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Part1",
		Value: types.NilInstance,
	},
)

var NotificationService = desc.NewClass("NotificationService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "IsLuaChatEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "IsLuaGameDetailsEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "IsLuaHomeWithAvatarEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "SelectedTheme",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ActionEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "actionType",
				Type: *new(enum.AppShellActionType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ActionTaken",
		Parameters: []desc.Parameter{
			{
				Name: "actionType",
				Type: *new(enum.AppShellActionType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "CancelAllNotification",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "CancelNotification",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "alertId",
				Type: *new(types.Int),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "ScheduleNotification",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "alertId",
				Type: *new(types.Int),
			},
			{
				Name: "alertMsg",
				Type: *new(types.String),
			},
			{
				Name: "minutesToFire",
				Type: *new(types.Int),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetScheduledNotifications",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns:  *new(types.Array),
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "RobloxConnectionChanged",
		Parameters: []desc.Parameter{
			{
				Name: "connectionName",
				Type: *new(types.String),
			},
			{
				Name: "connectionState",
				Type: *new(enum.ConnectionState),
			},
			{
				Name: "sequenceNumber",
				Type: *new(types.String),
			},
			{
				Name: "namespaceSequenceNumbers",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "RobloxEventReceived",
		Parameters: []desc.Parameter{
			{
				Name: "eventData",
				Type: *new(types.Map),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var PVInstance = desc.NewClass("PVInstance", Instance,
	desc.NotCreatable,
)

var BasePart = desc.NewClass("BasePart", PVInstance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Anchored",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BackSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BottomParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BottomParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BottomSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "BottomSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "BrickColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CanCollide",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CastShadow",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CenterOfMass",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CollisionGroupId",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CustomPhysicalProperties",
		Value: *new(types.PhysicalProperties),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Elasticity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Friction",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrontParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrontParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrontSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrontSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LeftSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated,
		Name:  "LocalTransparencyModifier",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Locked",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Massless",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Material",
		Value: *new(enum.Material),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Orientation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "ReceiveAge",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Reflectance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ResizeIncrement",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ResizeableFaces",
		Value: *new(types.Faces),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RightSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RootPriority",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RotVelocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Rotation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Size",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "SpecificGravity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopParamA",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopParamB",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopSurface",
		Value: *new(enum.SurfaceType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TopSurfaceInput",
		Value: *new(enum.InputType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Velocity",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "brickColor",
		Value: *new(types.BrickColor),
	},
	desc.Function{Name: "BreakJoints"},
	desc.Function{
		Name: "CanCollideWith",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "CanSetNetworkOwnership",
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "GetConnectedParts",
		Parameters: []desc.Parameter{
			{
				Name:     "recursive",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "GetJoints",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Flags:   desc.CustomLuaState,
		Name:    "GetMass",
		Returns: *new(types.Float),
	},
	desc.Function{
		Name:    "GetNetworkOwner",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetNetworkOwnershipAuto",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetRenderCFrame",
		Returns: *new(types.CFrame),
	},
	desc.Function{
		Name:    "GetRootPart",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetTouchingParts",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "IsGrounded",
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "MakeJoints"},
	desc.Function{
		Name: "Resize",
		Parameters: []desc.Parameter{
			{
				Name: "normalId",
				Type: *new(enum.NormalId),
			},
			{
				Name: "deltaAmount",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "SetNetworkOwner",
		Parameters: []desc.Parameter{
			{
				Name:     "playerInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{Name: "SetNetworkOwnershipAuto"},
	desc.Function{Name: "breakJoints"},
	desc.Function{
		Flags:   desc.CustomLuaState,
		Name:    "getMass",
		Returns: *new(types.Float),
	},
	desc.Function{Name: "makeJoints"},
	desc.Function{
		Name: "resize",
		Parameters: []desc.Parameter{
			{
				Name: "normalId",
				Type: *new(enum.NormalId),
			},
			{
				Name: "deltaAmount",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "SubtractAsync",
		Parameters: []desc.Parameter{
			{
				Name: "parts",
				Type: *new(types.Objects),
			},
			{
				Name:     "collisionfidelity",
				Optional: true,
				Type:     enum.CollisionFidelity(0),
			},
			{
				Name:     "renderFidelity",
				Optional: true,
				Type:     enum.RenderFidelity(0),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "UnionAsync",
		Parameters: []desc.Parameter{
			{
				Name: "parts",
				Type: *new(types.Objects),
			},
			{
				Name:     "collisionfidelity",
				Optional: true,
				Type:     enum.CollisionFidelity(0),
			},
			{
				Name:     "renderFidelity",
				Optional: true,
				Type:     enum.RenderFidelity(0),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Event{
		Name: "LocalSimulationTouched",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{Name: "OutfitChanged"},
	desc.Event{
		Name: "StoppedTouching",
		Parameters: []desc.Parameter{
			{
				Name: "otherPart",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "TouchEnded",
		Parameters: []desc.Parameter{
			{
				Name: "otherPart",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "Touched",
		Parameters: []desc.Parameter{
			{
				Name: "otherPart",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "touched",
		Parameters: []desc.Parameter{
			{
				Name: "otherPart",
				Type: types.NilInstance,
			},
		},
	},
)

var CornerWedgePart = desc.NewClass("CornerWedgePart", BasePart)

var FormFactorPart = desc.NewClass("FormFactorPart", BasePart,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "FormFactor",
		Value: *new(enum.FormFactor),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "formFactor",
		Value: *new(enum.FormFactor),
	},
)

var Part = desc.NewClass("Part", FormFactorPart,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Shape",
		Value: *new(enum.PartType),
	},
)

var FlagStand = desc.NewClass("FlagStand", Part,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TeamColor",
		Value: *new(types.BrickColor),
	},
	desc.Event{
		Name: "FlagCaptured",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
)

var Platform = desc.NewClass("Platform", Part,
	desc.NotCreatable,
)

var Seat = desc.NewClass("Seat", Part,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Disabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Occupant",
		Value: types.NilInstance,
	},
	desc.Function{
		Name: "Sit",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
		},
	},
)

var SkateboardPlatform = desc.NewClass("SkateboardPlatform", Part,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Controller",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ControllingHumanoid",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Steer",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StickyWheels",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Throttle",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "ApplySpecificImpulse",
		Parameters: []desc.Parameter{
			{
				Name: "impulseWorld",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Event{
		Name: "Equipped",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
			{
				Name: "skateboardController",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "MoveStateChanged",
		Parameters: []desc.Parameter{
			{
				Name: "newState",
				Type: *new(enum.MoveState),
			},
			{
				Name: "oldState",
				Type: *new(enum.MoveState),
			},
		},
	},
	desc.Event{
		Name: "Unequipped",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "equipped",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
			{
				Name: "skateboardController",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "unequipped",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
		},
	},
)

var SpawnLocation = desc.NewClass("SpawnLocation", Part,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AllowTeamChangeOnTouch",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Duration",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Neutral",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TeamColor",
		Value: *new(types.BrickColor),
	},
)

var WedgePart = desc.NewClass("WedgePart", FormFactorPart)

var Terrain = desc.NewClass("Terrain", BasePart,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Decoration",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsSmooth",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaterialColors",
		Value: *new(types.BinaryString),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MaxExtents",
		Value: *new(types.Region3int16),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaterColor",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaterReflectance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaterTransparency",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaterWaveSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WaterWaveSpeed",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AutowedgeCell",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "AutowedgeCells",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3int16),
			},
		},
	},
	desc.Function{
		Name: "CellCenterToWorld",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name: "CellCornerToWorld",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Vector3),
	},
	desc.Function{Name: "Clear"},
	desc.Function{
		Name:     "ConvertToSmooth",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CopyRegion",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3int16),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "CountCells",
		Returns: *new(types.Int),
	},
	desc.Function{
		Name: "FillBall",
		Parameters: []desc.Parameter{
			{
				Name: "center",
				Type: *new(types.Vector3),
			},
			{
				Name: "radius",
				Type: *new(types.Float),
			},
			{
				Name: "material",
				Type: *new(enum.Material),
			},
		},
	},
	desc.Function{
		Name: "FillBlock",
		Parameters: []desc.Parameter{
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
			{
				Name: "size",
				Type: *new(types.Vector3),
			},
			{
				Name: "material",
				Type: *new(enum.Material),
			},
		},
	},
	desc.Function{
		Name: "FillCylinder",
		Parameters: []desc.Parameter{
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
			{
				Name: "height",
				Type: *new(types.Float),
			},
			{
				Name: "radius",
				Type: *new(types.Float),
			},
			{
				Name: "material",
				Type: *new(enum.Material),
			},
		},
	},
	desc.Function{
		Name: "FillRegion",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "resolution",
				Type: *new(types.Float),
			},
			{
				Name: "material",
				Type: *new(enum.Material),
			},
		},
	},
	desc.Function{
		Name: "GetCell",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "GetMaterialColor",
		Parameters: []desc.Parameter{
			{
				Name: "material",
				Type: *new(enum.Material),
			},
		},
		Returns: *new(types.Color3),
	},
	desc.Function{
		Name: "GetWaterCell",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Flags: desc.CustomLuaState,
		Name:  "ImportHeightMap",
		Parameters: []desc.Parameter{
			{
				Name: "heightMapBinary",
				Type: *new(types.String),
			},
			{
				Name: "colorMapBinary",
				Type: *new(types.String),
			},
			{
				Name: "region",
				Type: *new(types.Region3),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PasteRegion",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: types.NilInstance,
			},
			{
				Name: "corner",
				Type: *new(types.Vector3int16),
			},
			{
				Name: "pasteEmptyCells",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Flags: desc.CustomLuaState,
		Name:  "ReadVoxels",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "resolution",
				Type: *new(types.Float),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "ReplaceMaterial",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "resolution",
				Type: *new(types.Float),
			},
			{
				Name: "sourceMaterial",
				Type: *new(enum.Material),
			},
			{
				Name: "targetMaterial",
				Type: *new(enum.Material),
			},
		},
	},
	desc.Function{
		Name: "SetCell",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
			{
				Name: "material",
				Type: *new(enum.CellMaterial),
			},
			{
				Name: "block",
				Type: *new(enum.CellBlock),
			},
			{
				Name: "orientation",
				Type: *new(enum.CellOrientation),
			},
		},
	},
	desc.Function{
		Name: "SetCells",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3int16),
			},
			{
				Name: "material",
				Type: *new(enum.CellMaterial),
			},
			{
				Name: "block",
				Type: *new(enum.CellBlock),
			},
			{
				Name: "orientation",
				Type: *new(enum.CellOrientation),
			},
		},
	},
	desc.Function{
		Name: "SetMaterialColor",
		Parameters: []desc.Parameter{
			{
				Name: "material",
				Type: *new(enum.Material),
			},
			{
				Name: "value",
				Type: *new(types.Color3),
			},
		},
	},
	desc.Function{
		Name: "SetWaterCell",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "z",
				Type: *new(types.Int),
			},
			{
				Name: "force",
				Type: *new(enum.WaterForce),
			},
			{
				Name: "direction",
				Type: *new(enum.WaterDirection),
			},
		},
	},
	desc.Function{
		Name: "WorldToCell",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name: "WorldToCellPreferEmpty",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name: "WorldToCellPreferSolid",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Flags: desc.CustomLuaState,
		Name:  "WriteVoxels",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "resolution",
				Type: *new(types.Float),
			},
			{
				Name: "materials",
				Type: *new(types.Array),
			},
			{
				Name: "occupancy",
				Type: *new(types.Array),
			},
		},
	},
	desc.Event{
		Name: "TerrainProgressUpdate",
		Parameters: []desc.Parameter{
			{
				Name: "progressRatio",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var TriangleMeshPart = desc.NewClass("TriangleMeshPart", BasePart,
	desc.NotCreatable,
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "CollisionFidelity",
		Value:         *new(enum.CollisionFidelity),
		WriteSecurity: desc.PluginSecurity,
	},
)

var MeshPart = desc.NewClass("MeshPart", TriangleMeshPart,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MeshID",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "MeshId",
		Value:         *new(types.Content),
		WriteSecurity: desc.NotAccessibleSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "RenderFidelity",
		Value:         *new(enum.RenderFidelity),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureID",
		Value: *new(types.Content),
	},
)

var PartOperation = desc.NewClass("PartOperation", TriangleMeshPart,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "RenderFidelity",
		Value:         *new(enum.RenderFidelity),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "TriangleCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UsePartColor",
		Value: *new(types.Bool),
	},
)

var NegateOperation = desc.NewClass("NegateOperation", PartOperation)

var UnionOperation = desc.NewClass("UnionOperation", PartOperation)

var TrussPart = desc.NewClass("TrussPart", BasePart,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Style",
		Value: *new(enum.Style),
	},
)

var VehicleSeat = desc.NewClass("VehicleSeat", BasePart,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AreHingesDetected",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Disabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HeadsUpDisplay",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Occupant",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Steer",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SteerFloat",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Throttle",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ThrottleFloat",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Torque",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TurnSpeed",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "Sit",
		Parameters: []desc.Parameter{
			{
				Name: "humanoid",
				Type: types.NilInstance,
			},
		},
	},
)

var Model = desc.NewClass("Model", PVInstance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PrimaryPart",
		Value: types.NilInstance,
	},
	desc.Function{Name: "BreakJoints"},
	desc.Function{
		Name:    "GetBoundingBox",
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name:    "GetExtentsSize",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetModelCFrame",
		Returns: *new(types.CFrame),
	},
	desc.Function{
		Name:    "GetModelSize",
		Returns: *new(types.Vector3),
	},
	desc.Function{
		Name:    "GetPrimaryPartCFrame",
		Returns: *new(types.CFrame),
	},
	desc.Function{Name: "MakeJoints"},
	desc.Function{
		Name: "MoveTo",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Function{Name: "ResetOrientationToIdentity"},
	desc.Function{Name: "SetIdentityOrientation"},
	desc.Function{
		Name: "SetPrimaryPartCFrame",
		Parameters: []desc.Parameter{
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
		},
	},
	desc.Function{
		Name: "TranslateBy",
		Parameters: []desc.Parameter{
			{
				Name: "delta",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Function{Name: "breakJoints"},
	desc.Function{Name: "makeJoints"},
	desc.Function{
		Name: "move",
		Parameters: []desc.Parameter{
			{
				Name: "location",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Function{
		Name: "moveTo",
		Parameters: []desc.Parameter{
			{
				Name: "location",
				Type: *new(types.Vector3),
			},
		},
	},
)

var Status = desc.NewClass("Status", Model,
	desc.NotCreatable,
)

var WorldRoot = desc.NewClass("WorldRoot", Model,
	desc.NotCreatable,
	desc.Function{
		Name: "FindPartOnRay",
		Parameters: []desc.Parameter{
			{
				Name: "ray",
				Type: *new(types.Ray),
			},
			{
				Name:     "ignoreDescendantsInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "terrainCellsAreCubes",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "ignoreWater",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "FindPartOnRayWithIgnoreList",
		Parameters: []desc.Parameter{
			{
				Name: "ray",
				Type: *new(types.Ray),
			},
			{
				Name: "ignoreDescendantsTable",
				Type: *new(types.Objects),
			},
			{
				Name:     "terrainCellsAreCubes",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "ignoreWater",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "FindPartOnRayWithWhitelist",
		Parameters: []desc.Parameter{
			{
				Name: "ray",
				Type: *new(types.Ray),
			},
			{
				Name: "whitelistDescendantsTable",
				Type: *new(types.Objects),
			},
			{
				Name:     "ignoreWater",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "FindPartsInRegion3",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name:     "ignoreDescendantsInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "maxParts",
				Optional: true,
				Type:     types.Int(int32(20)),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "FindPartsInRegion3WithIgnoreList",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "ignoreDescendantsTable",
				Type: *new(types.Objects),
			},
			{
				Name:     "maxParts",
				Optional: true,
				Type:     types.Int(int32(20)),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "FindPartsInRegion3WithWhiteList",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "whitelistDescendantsTable",
				Type: *new(types.Objects),
			},
			{
				Name:     "maxParts",
				Optional: true,
				Type:     types.Int(int32(20)),
			},
		},
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "IsRegion3Empty",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name:     "ignoreDescendentsInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsRegion3EmptyWithIgnoreList",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name: "ignoreDescendentsTable",
				Type: *new(types.Objects),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "findPartOnRay",
		Parameters: []desc.Parameter{
			{
				Name: "ray",
				Type: *new(types.Ray),
			},
			{
				Name:     "ignoreDescendantsInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "terrainCellsAreCubes",
				Optional: true,
				Type:     types.Bool(false),
			},
			{
				Name:     "ignoreWater",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name: "findPartsInRegion3",
		Parameters: []desc.Parameter{
			{
				Name: "region",
				Type: *new(types.Region3),
			},
			{
				Name:     "ignoreDescendantsInstance",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "maxParts",
				Optional: true,
				Type:     types.Int(int32(20)),
			},
		},
		Returns: *new(types.Objects),
	},
)

var Workspace = desc.NewClass("Workspace", WorldRoot,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "AllowThirdPartySales",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "CurrentCamera",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "DistributedGameTime",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "FallenPartsDestroyHeight",
		Value:         *new(types.Float),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "FilteringEnabled",
		Value:         *new(types.Bool),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Gravity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StreamingEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StreamingMinRadius",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StreamingPauseMode",
		Value: *new(enum.StreamingPauseMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StreamingTargetRadius",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.NotReplicated,
		Name:  "TemporaryLegacyPhysicsSolverOverride",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Terrain",
		Value: types.NilInstance,
	},
	desc.Function{
		Name: "BreakJoints",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CalculateJumpPower",
		Parameters: []desc.Parameter{
			{
				Name: "gravity",
				Type: *new(types.Float),
			},
			{
				Name: "jumpHeight",
				Type: *new(types.Float),
			},
		},
		Returns:  *new(types.Float),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ExperimentalSolverIsEnabled",
		Returns:  *new(types.Bool),
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:    "GetNumAwakeParts",
		Returns: *new(types.Int),
	},
	desc.Function{
		Name:    "GetPhysicsThrottling",
		Returns: *new(types.Int),
	},
	desc.Function{
		Name:    "GetRealPhysicsFPS",
		Returns: *new(types.Double),
	},
	desc.Function{
		Name: "JoinToOutsiders",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
			{
				Name: "jointType",
				Type: *new(enum.JointCreationMode),
			},
		},
	},
	desc.Function{
		Name: "MakeJoints",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:    "PGSIsEnabled",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "SetPhysicsThrottleEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "UnjoinFromOutsiders",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
	},
	desc.Function{
		Name:     "ZoomToExtents",
		Security: desc.PluginSecurity,
	},
)

var WorldModel = desc.NewClass("WorldModel", WorldRoot)

var PackageLink = desc.NewClass("PackageLink", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoUpdate",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "PackageId",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "Status",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "VersionNumber",
		Value:         *new(types.Int64),
		WriteSecurity: desc.NotAccessibleSecurity,
	},
)

var PackageService = desc.NewClass("PackageService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var Pages = desc.NewClass("Pages", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsFinished",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetCurrentPage",
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "AdvanceToNextPageAsync",
	},
)

var DataStorePages = desc.NewClass("DataStorePages", Pages,
	desc.NotCreatable|desc.NotReplicated,
)

var FriendPages = desc.NewClass("FriendPages", Pages,
	desc.NotCreatable|desc.NotReplicated,
)

var InventoryPages = desc.NewClass("InventoryPages", Pages,
	desc.NotCreatable|desc.NotReplicated,
)

var EmotesPages = desc.NewClass("EmotesPages", InventoryPages,
	desc.NotCreatable|desc.NotReplicated,
)

var StandardPages = desc.NewClass("StandardPages", Pages,
	desc.NotCreatable|desc.NotReplicated,
)

var PartOperationAsset = desc.NewClass("PartOperationAsset", Instance)

var ParticleEmitter = desc.NewClass("ParticleEmitter", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Acceleration",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.ColorSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Drag",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EmissionDirection",
		Value: *new(enum.NormalId),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Lifetime",
		Value: *new(types.NumberRange),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightEmission",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightInfluence",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LockedToPart",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Rate",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RotSpeed",
		Value: *new(types.NumberRange),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Rotation",
		Value: *new(types.NumberRange),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.NumberSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Speed",
		Value: *new(types.NumberRange),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SpreadAngle",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Texture",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.NumberSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VelocityInheritance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "VelocitySpread",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ZOffset",
		Value: *new(types.Float),
	},
	desc.Function{Name: "Clear"},
	desc.Function{
		Name: "Emit",
		Parameters: []desc.Parameter{
			{
				Name:     "particleCount",
				Optional: true,
				Type:     types.Int(int32(16)),
			},
		},
	},
)

var Path = desc.NewClass("Path", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Status",
		Value: *new(enum.PathStatus),
	},
	desc.Function{
		Name:    "GetPointCoordinates",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetWaypoints",
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CheckOcclusionAsync",
		Parameters: []desc.Parameter{
			{
				Name: "start",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ComputeAsync",
		Parameters: []desc.Parameter{
			{
				Name: "start",
				Type: *new(types.Vector3),
			},
			{
				Name: "finish",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Event{
		Name: "Blocked",
		Parameters: []desc.Parameter{
			{
				Name: "blockedWaypointIdx",
				Type: *new(types.Int),
			},
		},
	},
)

var PathfindingService = desc.NewClass("PathfindingService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "EmptyCutoff",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "CreatePath",
		Parameters: []desc.Parameter{
			{
				Name:     "agentParameters",
				Optional: true,
				Type:     *new(types.Dictionary),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ComputeRawPathAsync",
		Parameters: []desc.Parameter{
			{
				Name: "start",
				Type: *new(types.Vector3),
			},
			{
				Name: "finish",
				Type: *new(types.Vector3),
			},
			{
				Name: "maxDistance",
				Type: *new(types.Float),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ComputeSmoothPathAsync",
		Parameters: []desc.Parameter{
			{
				Name: "start",
				Type: *new(types.Vector3),
			},
			{
				Name: "finish",
				Type: *new(types.Vector3),
			},
			{
				Name: "maxDistance",
				Type: *new(types.Float),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "FindPathAsync",
		Parameters: []desc.Parameter{
			{
				Name: "start",
				Type: *new(types.Vector3),
			},
			{
				Name: "finish",
				Type: *new(types.Vector3),
			},
		},
		Returns: types.NilInstance,
	},
)

var PhysicsPacketCache = desc.NewClass("PhysicsPacketCache", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var PhysicsService = desc.NewClass("PhysicsService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "CollisionGroupContainsPart",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "part",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "CollisionGroupSetCollidable",
		Parameters: []desc.Parameter{
			{
				Name: "name1",
				Type: *new(types.String),
			},
			{
				Name: "name2",
				Type: *new(types.String),
			},
			{
				Name: "collidable",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "CollisionGroupsAreCollidable",
		Parameters: []desc.Parameter{
			{
				Name: "name1",
				Type: *new(types.String),
			},
			{
				Name: "name2",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "CreateCollisionGroup",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Function{
		Name: "GetCollisionGroupId",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Function{
		Name: "GetCollisionGroupName",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name:    "GetCollisionGroups",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetMaxCollisionGroups",
		Returns: *new(types.Int),
	},
	desc.Function{
		Name: "IkSolve",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
			{
				Name: "target",
				Type: *new(types.CFrame),
			},
			{
				Name: "translateStiffness",
				Type: *new(types.Float),
			},
			{
				Name: "rotateStiffness",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "LocalIkSolve",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
			{
				Name: "target",
				Type: *new(types.CFrame),
			},
			{
				Name: "translateStiffness",
				Type: *new(types.Float),
			},
			{
				Name: "rotateStiffness",
				Type: *new(types.Float),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "RemoveCollisionGroup",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "RenameCollisionGroup",
		Parameters: []desc.Parameter{
			{
				Name: "from",
				Type: *new(types.String),
			},
			{
				Name: "to",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetPartCollisionGroup",
		Parameters: []desc.Parameter{
			{
				Name: "part",
				Type: types.NilInstance,
			},
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
	},
)

var PhysicsSettings = desc.NewClass("PhysicsSettings", Instance,
	desc.Settings,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AllowSleep",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreAnchorsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreAssembliesShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreAwakePartsHighlighted",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreBodyTypesShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreContactIslandsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreContactPointsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreJointCoordinatesShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreMechanismsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreModelCoordsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreOwnersShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ArePartCoordsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreRegionsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreUnalignedPartsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AreWorldCoordsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DisableCSGv2",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsReceiveAgeShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsTreeShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PhysicsEnvironmentalThrottle",
		Value: *new(enum.EnviromentalPhysicsThrottle),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShowDecompositionGeometry",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ThrottleAdjustTime",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UseCSGv2",
		Value: *new(types.Bool),
	},
)

var Player = desc.NewClass("Player", Instance,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AccountAge",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "AppearanceDidLoad",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoJumpEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMaxZoomDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMinZoomDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMode",
		Value: *new(enum.CameraMode),
	},
	desc.Property{
		Name:  "CanLoadCharacterAppearance",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Character",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterAppearance",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterAppearanceId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "ChatMode",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.ChatMode),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "DataComplexity",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "DataComplexityLimit",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "DataReady",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevCameraOcclusionMode",
		Value: *new(enum.DevCameraOcclusionMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevComputerCameraMode",
		Value: *new(enum.DevComputerCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevComputerMovementMode",
		Value: *new(enum.DevComputerMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevEnableMouseLock",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevTouchCameraMode",
		Value: *new(enum.DevTouchCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevTouchMovementMode",
		Value: *new(enum.DevTouchMovementMode),
	},
	desc.Property{
		Name:          "DisplayName",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "FollowUserId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "GameplayPaused",
		Value:         *new(types.Bool),
		WriteSecurity: desc.NotAccessibleSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "Guest",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HealthDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "LocaleId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "MaximumSimulationRadius",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MembershipType",
		Value: *new(enum.MembershipType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NameDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Neutral",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:          "OsPlatform",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReplicationFocus",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RespawnLocation",
		Value: types.NilInstance,
	},
	desc.Property{
		Name:          "SimulationRadius",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Float),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "Team",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TeamColor",
		Value: *new(types.BrickColor),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:          "Teleported",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "TeleportedIn",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:  "UserId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Name:          "VRDevice",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:  "userId",
		Value: *new(types.Int64),
	},
	desc.Function{
		Name: "AddToBlockList",
		Parameters: []desc.Parameter{
			{
				Name: "userIds",
				Type: *new(types.Array),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{Name: "ClearCharacterAppearance"},
	desc.Function{
		Name: "DistanceFromCharacter",
		Parameters: []desc.Parameter{
			{
				Name: "point",
				Type: *new(types.Vector3),
			},
		},
		Returns: *new(types.Float),
	},
	desc.Function{
		Name: "GetFriendStatus",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns:  *new(enum.FriendStatus),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetGameSessionID",
		Returns:  *new(types.String),
		Security: desc.RobloxSecurity,
	},
	desc.Function{
		Name:    "GetJoinData",
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Name:    "GetMouse",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:     "GetUnder13",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "HasAppearanceLoaded",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "IsUserAvailableForExperiment",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "Kick",
		Parameters: []desc.Parameter{
			{
				Name:     "message",
				Optional: true,
				Type:     types.String(""),
			},
		},
	},
	desc.Function{
		Name: "LoadBoolean",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "LoadCharacterAppearance",
		Parameters: []desc.Parameter{
			{
				Name: "assetInstance",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:     "LoadData",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "LoadInstance",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "LoadNumber",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Double),
	},
	desc.Function{
		Name: "LoadString",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "Move",
		Parameters: []desc.Parameter{
			{
				Name: "walkDirection",
				Type: *new(types.Vector3),
			},
			{
				Name:     "relativeToCamera",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
	},
	desc.Function{
		Name:     "RemoveCharacter",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "RequestFriendship",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RevokeFriendship",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SaveBoolean",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name:     "SaveData",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "SaveInstance",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "SaveNumber",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
	desc.Function{
		Name: "SaveString",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetAccountAge",
		Parameters: []desc.Parameter{
			{
				Name: "accountAge",
				Type: *new(types.Int),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetMembershipType",
		Parameters: []desc.Parameter{
			{
				Name: "membershipType",
				Type: *new(enum.MembershipType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetSuperSafeChat",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetUnder13",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxSecurity,
	},
	desc.Function{
		Name: "UpdatePlayerBlocked",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "blocked",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "loadBoolean",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "loadInstance",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "loadNumber",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Double),
	},
	desc.Function{
		Name: "loadString",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "saveBoolean",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Function{
		Name: "saveInstance",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "saveNumber",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
	desc.Function{
		Name: "saveString",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetFriendsOnline",
		Parameters: []desc.Parameter{
			{
				Name:     "maxFriends",
				Optional: true,
				Type:     types.Int(int32(200)),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetRankInGroup",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetRoleInGroup",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsBestFriendsWith",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsFriendsWith",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "IsInGroup",
		Parameters: []desc.Parameter{
			{
				Name: "groupId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "LoadCharacter",
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "LoadCharacterBlocking",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "LoadCharacterWithHumanoidDescription",
		Parameters: []desc.Parameter{
			{
				Name: "humanoidDescription",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "WaitForDataReady",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "isFriendsWith",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "waitForDataReady",
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "CharacterAdded",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "CharacterAppearanceLoaded",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "CharacterRemoving",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "Chatted",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "recipient",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "FriendStatusChanged",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "friendStatus",
				Type: *new(enum.FriendStatus),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "Idled",
		Parameters: []desc.Parameter{
			{
				Name: "time",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "OnTeleport",
		Parameters: []desc.Parameter{
			{
				Name: "teleportState",
				Type: *new(enum.TeleportState),
			},
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name: "spawnName",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "SimulationRadiusChanged",
		Parameters: []desc.Parameter{
			{
				Name: "radius",
				Type: *new(types.Float),
			},
		},
		Security: desc.LocalUserSecurity,
	},
)

var PlayerScripts = desc.NewClass("PlayerScripts", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{Name: "ClearComputerCameraMovementModes"},
	desc.Function{Name: "ClearComputerMovementModes"},
	desc.Function{Name: "ClearTouchCameraMovementModes"},
	desc.Function{Name: "ClearTouchMovementModes"},
	desc.Function{
		Name:     "GetRegisteredComputerCameraMovementModes",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetRegisteredComputerMovementModes",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetRegisteredTouchCameraMovementModes",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetRegisteredTouchMovementModes",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "RegisterComputerCameraMovementMode",
		Parameters: []desc.Parameter{
			{
				Name: "cameraMovementMode",
				Type: *new(enum.ComputerCameraMovementMode),
			},
		},
	},
	desc.Function{
		Name: "RegisterComputerMovementMode",
		Parameters: []desc.Parameter{
			{
				Name: "movementMode",
				Type: *new(enum.ComputerMovementMode),
			},
		},
	},
	desc.Function{
		Name: "RegisterTouchCameraMovementMode",
		Parameters: []desc.Parameter{
			{
				Name: "cameraMovementMode",
				Type: *new(enum.TouchCameraMovementMode),
			},
		},
	},
	desc.Function{
		Name: "RegisterTouchMovementMode",
		Parameters: []desc.Parameter{
			{
				Name: "movementMode",
				Type: *new(enum.TouchMovementMode),
			},
		},
	},
	desc.Event{
		Name:     "ComputerCameraMovementModeRegistered",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "ComputerMovementModeRegistered",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "TouchCameraMovementModeRegistered",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "TouchMovementModeRegistered",
		Security: desc.RobloxScriptSecurity,
	},
)

var Players = desc.NewClass("Players", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "BubbleChat",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "CharacterAutoLoads",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ClassicChat",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "LocalPlayer",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MaxPlayers",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "MaxPlayersInternal",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "NumPlayers",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PreferredPlayers",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "PreferredPlayersInternal",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RespawnTime",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "localPlayer",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "numPlayers",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "Chat",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "CreateLocalPlayer",
		Returns:  types.NilInstance,
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "GetPlayerByUserId",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetPlayerFromCharacter",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetPlayers",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "ReportAbuse",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "reason",
				Type: *new(types.String),
			},
			{
				Name: "optionalMessage",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "SetChatStyle",
		Parameters: []desc.Parameter{
			{
				Name:     "style",
				Optional: true,
				Type:     enum.ChatStyle(0),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetLocalPlayerInfo",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "userName",
				Type: *new(types.String),
			},
			{
				Name: "membershipType",
				Type: *new(enum.MembershipType),
			},
			{
				Name: "isUnder13",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "TeamChat",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "WhisperChat",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "getPlayerFromCharacter",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "getPlayers",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "playerFromCharacter",
		Parameters: []desc.Parameter{
			{
				Name: "character",
				Type: types.NilInstance,
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "players",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreateHumanoidModelFromDescription",
		Parameters: []desc.Parameter{
			{
				Name: "description",
				Type: types.NilInstance,
			},
			{
				Name: "rigType",
				Type: *new(enum.HumanoidRigType),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreateHumanoidModelFromUserId",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCharacterAppearanceAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetCharacterAppearanceInfoAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Dictionary),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetFriendsAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetHumanoidDescriptionFromOutfitId",
		Parameters: []desc.Parameter{
			{
				Name: "outfitId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetHumanoidDescriptionFromUserId",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetNameFromUserIdAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetUserIdFromNameAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userName",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Int64),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetUserThumbnailAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "thumbnailType",
				Type: *new(enum.ThumbnailType),
			},
			{
				Name: "thumbnailSize",
				Type: *new(enum.ThumbnailSize),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Event{
		Name: "FriendRequestEvent",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "friendRequestEvent",
				Type: *new(enum.FriendRequestEvent),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "GameAnnounce",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PlayerAdded",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "PlayerChatted",
		Parameters: []desc.Parameter{
			{
				Name: "chatType",
				Type: *new(enum.PlayerChatType),
			},
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "targetPlayer",
				Type: types.NilInstance,
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "PlayerConnecting",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "PlayerDisconnecting",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "PlayerRejoining",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "PlayerRemoving",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
)

var Plugin = desc.NewClass("Plugin", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CollisionEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "GridSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "HostDataModelType",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.StudioDataModelType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "HostDataModelTypeIsCurrent",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "MultipleDocumentInterfaceInstance",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         types.NilInstance,
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "UsesAssetInsertionDrag",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Activate",
		Parameters: []desc.Parameter{
			{
				Name: "exclusiveMouse",
				Type: *new(types.Bool),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CreatePluginAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionId",
				Type: *new(types.String),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name: "statusTip",
				Type: *new(types.String),
			},
			{
				Name:     "iconName",
				Optional: true,
				Type:     types.String(""),
			},
			{
				Name:     "allowBinding",
				Optional: true,
				Type:     types.Bool(true),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CreatePluginMenu",
		Parameters: []desc.Parameter{
			{
				Name: "id",
				Type: *new(types.String),
			},
			{
				Name:     "title",
				Optional: true,
				Type:     types.String(""),
			},
			{
				Name:     "icon",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CreateToolbar",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Deactivate",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "defaultValue",
				Type: *new(types.Variant),
			},
		},
		Returns:  *new(types.Variant),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetJoinMode",
		Returns:  *new(enum.JointCreationMode),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetMouse",
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetSelectedRibbonTool",
		Returns:  *new(enum.RibbonTool),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetSetting",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Variant),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetStudioUserId",
		Returns:  *new(types.Int64),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "Invoke",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "IsActivated",
		Returns:  *new(types.Bool),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "IsActivatedWithExclusiveMouse",
		Returns:  *new(types.Bool),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "Negate",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "OnInvoke",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OnSetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "callback",
				Type: *new(types.Function),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenScript",
		Parameters: []desc.Parameter{
			{
				Name: "script",
				Type: types.NilInstance,
			},
			{
				Name:     "lineNumber",
				Optional: true,
				Type:     types.Int(int32(1)),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "OpenWikiPage",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "PauseSound",
		Parameters: []desc.Parameter{
			{
				Name: "soundChannel",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PlaySound",
		Parameters: []desc.Parameter{
			{
				Name: "soundChannel",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ResumeSound",
		Parameters: []desc.Parameter{
			{
				Name: "soundChannel",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "SaveSelectedToRoblox",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SelectRibbonTool",
		Parameters: []desc.Parameter{
			{
				Name: "tool",
				Type: *new(enum.RibbonTool),
			},
			{
				Name: "position",
				Type: *new(types.UDim2),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "Separate",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetItem",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetSetting",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "StartDecalDrag",
		Parameters: []desc.Parameter{
			{
				Name: "decal",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "StartDrag",
		Parameters: []desc.Parameter{
			{
				Name: "dragData",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "StopAllSounds",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Union",
		Parameters: []desc.Parameter{
			{
				Name: "objects",
				Type: *new(types.Objects),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreateDockWidgetPluginGui",
		Parameters: []desc.Parameter{
			{
				Name: "pluginGuiId",
				Type: *new(types.String),
			},
			{
				Name: "dockWidgetPluginGuiInfo",
				Type: *new(types.DockWidgetPluginGuiInfo),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CreateQWidgetPluginGui",
		Parameters: []desc.Parameter{
			{
				Name: "pluginGuiId",
				Type: *new(types.String),
			},
			{
				Name: "pluginGuiOptions",
				Type: *new(types.Dictionary),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ImportFbxAnimation",
		Parameters: []desc.Parameter{
			{
				Name: "rigModel",
				Type: types.NilInstance,
			},
			{
				Name:     "isR15",
				Optional: true,
				Type:     types.Bool(true),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ImportFbxRig",
		Parameters: []desc.Parameter{
			{
				Name:     "isR15",
				Optional: true,
				Type:     types.Bool(true),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptForExistingAssetId",
		Parameters: []desc.Parameter{
			{
				Name: "assetType",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int64),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptSaveSelection",
		Parameters: []desc.Parameter{
			{
				Name:     "suggestedFileName",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "Deactivation",
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "Unloading",
		Security: desc.PluginSecurity,
	},
)

var PluginAction = desc.NewClass("PluginAction", Instance,
	desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ActionId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AllowBinding",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "Checked",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "DefaultShortcut",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "Enabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "StatusTip",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Text",
		Value: *new(types.String),
	},
	desc.Event{
		Name:     "Triggered",
		Security: desc.PluginSecurity,
	},
)

var PluginDragEvent = desc.NewClass("PluginDragEvent", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Data",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MimeType",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Position",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Sender",
		Value: *new(types.String),
	},
)

var PluginGuiService = desc.NewClass("PluginGuiService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var PluginManager = desc.NewClass("PluginManager", Instance,
	desc.NotCreatable,
	desc.Function{
		Flags:    desc.CustomLuaState,
		Name:     "CreatePlugin",
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "ExportPlace",
		Parameters: []desc.Parameter{
			{
				Name:     "filePath",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "ExportSelection",
		Parameters: []desc.Parameter{
			{
				Name:     "filePath",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Security: desc.PluginSecurity,
	},
)

var PluginMenu = desc.NewClass("PluginMenu", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Icon",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Title",
		Value: *new(types.String),
	},
	desc.Function{
		Name: "AddAction",
		Parameters: []desc.Parameter{
			{
				Name: "action",
				Type: types.NilInstance,
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "AddMenu",
		Parameters: []desc.Parameter{
			{
				Name: "menu",
				Type: types.NilInstance,
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "AddNewAction",
		Parameters: []desc.Parameter{
			{
				Name: "actionId",
				Type: *new(types.String),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name:     "icon",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "AddSeparator",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Clear",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "ShowAsync",
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
)

var PluginToolbar = desc.NewClass("PluginToolbar", Instance,
	desc.NotCreatable,
	desc.Function{
		Name: "CreateButton",
		Parameters: []desc.Parameter{
			{
				Name: "buttonId",
				Type: *new(types.String),
			},
			{
				Name: "tooltip",
				Type: *new(types.String),
			},
			{
				Name: "iconname",
				Type: *new(types.String),
			},
			{
				Name:     "text",
				Optional: true,
				Type:     types.String(""),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
)

var PluginToolbarButton = desc.NewClass("PluginToolbarButton", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "ClickableWhenViewportHidden",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Icon",
		Value: *new(types.Content),
	},
	desc.Function{
		Name: "SetActive",
		Parameters: []desc.Parameter{
			{
				Name: "active",
				Type: *new(types.Bool),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "Click",
		Security: desc.PluginSecurity,
	},
)

var PointsService = desc.NewClass("PointsService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:    "GetAwardablePoints",
		Returns: *new(types.Int),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "AwardPoints",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "amount",
				Type: *new(types.Int),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetGamePointBalance",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetPointBalance",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Int),
	},
	desc.Event{
		Name: "PointsAwarded",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "pointsAwarded",
				Type: *new(types.Int),
			},
			{
				Name: "userBalanceInGame",
				Type: *new(types.Int),
			},
			{
				Name: "userTotalBalance",
				Type: *new(types.Int),
			},
		},
	},
)

var PolicyService = desc.NewClass("PolicyService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetPolicyInfoForPlayerAsync",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Dictionary),
	},
)

var Pose = desc.NewClass("Pose", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EasingDirection",
		Value: *new(enum.PoseEasingDirection),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EasingStyle",
		Value: *new(enum.PoseEasingStyle),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "MaskWeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Weight",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "AddSubPose",
		Parameters: []desc.Parameter{
			{
				Name: "pose",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:    "GetSubPoses",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name: "RemoveSubPose",
		Parameters: []desc.Parameter{
			{
				Name: "pose",
				Type: types.NilInstance,
			},
		},
	},
)

var PostEffect = desc.NewClass("PostEffect", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
)

var BloomEffect = desc.NewClass("BloomEffect", PostEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Intensity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Threshold",
		Value: *new(types.Float),
	},
)

var BlurEffect = desc.NewClass("BlurEffect", PostEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Size",
		Value: *new(types.Float),
	},
)

var ColorCorrectionEffect = desc.NewClass("ColorCorrectionEffect", PostEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Brightness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Contrast",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Saturation",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TintColor",
		Value: *new(types.Color3),
	},
)

var SunRaysEffect = desc.NewClass("SunRaysEffect", PostEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Intensity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Spread",
		Value: *new(types.Float),
	},
)

var RbxAnalyticsService = desc.NewClass("RbxAnalyticsService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:     "GetClientId",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetSessionId",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReleaseRBXEventStream",
		Parameters: []desc.Parameter{
			{
				Name: "target",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReportCounter",
		Parameters: []desc.Parameter{
			{
				Name: "counterName",
				Type: *new(types.String),
			},
			{
				Name:     "amount",
				Optional: true,
				Type:     types.Int(int32(1)),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReportInfluxSeries",
		Parameters: []desc.Parameter{
			{
				Name: "seriesName",
				Type: *new(types.String),
			},
			{
				Name: "points",
				Type: *new(types.Dictionary),
			},
			{
				Name: "throttlingPercentage",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReportStats",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReportToDiagByCountryCode",
		Parameters: []desc.Parameter{
			{
				Name: "featureName",
				Type: *new(types.String),
			},
			{
				Name: "measureName",
				Type: *new(types.String),
			},
			{
				Name: "seconds",
				Type: *new(types.Double),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendEventDeferred",
		Parameters: []desc.Parameter{
			{
				Name: "target",
				Type: *new(types.String),
			},
			{
				Name: "eventContext",
				Type: *new(types.String),
			},
			{
				Name: "eventName",
				Type: *new(types.String),
			},
			{
				Name: "additionalArgs",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendEventImmediately",
		Parameters: []desc.Parameter{
			{
				Name: "target",
				Type: *new(types.String),
			},
			{
				Name: "eventContext",
				Type: *new(types.String),
			},
			{
				Name: "eventName",
				Type: *new(types.String),
			},
			{
				Name: "additionalArgs",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetRBXEvent",
		Parameters: []desc.Parameter{
			{
				Name: "target",
				Type: *new(types.String),
			},
			{
				Name: "eventContext",
				Type: *new(types.String),
			},
			{
				Name: "eventName",
				Type: *new(types.String),
			},
			{
				Name: "additionalArgs",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetRBXEventStream",
		Parameters: []desc.Parameter{
			{
				Name: "target",
				Type: *new(types.String),
			},
			{
				Name: "eventContext",
				Type: *new(types.String),
			},
			{
				Name: "eventName",
				Type: *new(types.String),
			},
			{
				Name: "additionalArgs",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "TrackEvent",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
			{
				Name: "action",
				Type: *new(types.String),
			},
			{
				Name: "label",
				Type: *new(types.String),
			},
			{
				Name:     "value",
				Optional: true,
				Type:     types.Int64(int64(0)),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "TrackEventWithArgs",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
			{
				Name: "action",
				Type: *new(types.String),
			},
			{
				Name: "label",
				Type: *new(types.String),
			},
			{
				Name: "args",
				Type: *new(types.Dictionary),
			},
			{
				Name:     "value",
				Optional: true,
				Type:     types.Int64(int64(0)),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "UpdateHeartbeatObject",
		Parameters: []desc.Parameter{
			{
				Name: "args",
				Type: *new(types.Dictionary),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var ReflectionMetadata = desc.NewClass("ReflectionMetadata", Instance)

var ReflectionMetadataCallbacks = desc.NewClass("ReflectionMetadataCallbacks", Instance)

var ReflectionMetadataClasses = desc.NewClass("ReflectionMetadataClasses", Instance)

var ReflectionMetadataEnums = desc.NewClass("ReflectionMetadataEnums", Instance)

var ReflectionMetadataEvents = desc.NewClass("ReflectionMetadataEvents", Instance)

var ReflectionMetadataFunctions = desc.NewClass("ReflectionMetadataFunctions", Instance)

var ReflectionMetadataItem = desc.NewClass("ReflectionMetadataItem", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Browsable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClassCategory",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ClientOnly",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Constraint",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Deprecated",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EditingDisabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsBackend",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScriptContext",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ServerOnly",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UIMaximum",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UIMinimum",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UINumTicks",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "summary",
		Value: *new(types.String),
	},
)

var ReflectionMetadataClass = desc.NewClass("ReflectionMetadataClass", ReflectionMetadataItem,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExplorerImageIndex",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExplorerOrder",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Insertable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PreferredParent",
		Value: *new(types.String),
	},
)

var ReflectionMetadataEnum = desc.NewClass("ReflectionMetadataEnum", ReflectionMetadataItem)

var ReflectionMetadataEnumItem = desc.NewClass("ReflectionMetadataEnumItem", ReflectionMetadataItem)

var ReflectionMetadataMember = desc.NewClass("ReflectionMetadataMember", ReflectionMetadataItem)

var ReflectionMetadataProperties = desc.NewClass("ReflectionMetadataProperties", Instance)

var ReflectionMetadataYieldFunctions = desc.NewClass("ReflectionMetadataYieldFunctions", Instance)

var RemoteEvent = desc.NewClass("RemoteEvent", Instance,
	desc.Function{
		Name: "FireAllClients",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "FireClient",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "FireServer",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Event{
		Name: "OnClientEvent",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Event{
		Name: "OnServerEvent",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
	},
)

var RemoteFunction = desc.NewClass("RemoteFunction", Instance,
	desc.Function{
		Flags: desc.Yields,
		Name:  "InvokeClient",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "InvokeServer",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Callback{
		Name: "OnClientInvoke",
		Parameters: []desc.Parameter{
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Callback{
		Name: "OnServerInvoke",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "arguments",
				Type: *new(types.Tuple),
			},
		},
		Returns: *new(types.Tuple),
	},
)

var RenderSettings = desc.NewClass("RenderSettings", Instance,
	desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoFRMLevel",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EagerBulkExecution",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EditQualityLevel",
		Value: *new(enum.QualityLevel),
	},
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "EnableFRM",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExportMergeByMaterial",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FrameRateManager",
		Value: *new(enum.FramerateManagerMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GraphicsMode",
		Value: *new(enum.GraphicsMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MeshCacheSize",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "QualityLevel",
		Value: *new(enum.QualityLevel),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ReloadAssets",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RenderCSGTrianglesDebug",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShowBoundingBoxes",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetMaxQualityLevel",
		Returns: *new(types.Int),
	},
)

var RenderingTest = desc.NewClass("RenderingTest", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ComparisonDiffThreshold",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ComparisonMethod",
		Value: *new(enum.RenderingTestComparisonMethod),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ComparisonPsnrThreshold",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Description",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FieldOfView",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Orientation",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Position",
		Value: *new(types.Vector3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "QualityLevel",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ShouldSkip",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Ticket",
		Value: *new(types.String),
	},
	desc.Function{Name: "RenderdocTriggerCapture"},
)

var ReplicatedFirst = desc.NewClass("ReplicatedFirst", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:     "IsDefaultLoadingGuiRemoved",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "IsFinishedReplicating",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{Name: "RemoveDefaultLoadingScreen"},
	desc.Function{
		Name:     "SetDefaultLoadingGuiRemoved",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "DefaultLoadingGuiRemoved",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "FinishedReplicating",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "RemoveDefaultLoadingGuiSignal",
		Security: desc.RobloxScriptSecurity,
	},
)

var ReplicatedStorage = desc.NewClass("ReplicatedStorage", Instance,
	desc.NotCreatable|desc.Service,
)

var RobloxPluginGuiService = desc.NewClass("RobloxPluginGuiService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var RobloxReplicatedStorage = desc.NewClass("RobloxReplicatedStorage", Instance,
	desc.NotCreatable|desc.Service,
)

var RunService = desc.NewClass("RunService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "BindToRenderStep",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "priority",
				Type: *new(types.Int),
			},
			{
				Name: "function",
				Type: *new(types.Function),
			},
		},
	},
	desc.Function{
		Name:     "GetRobloxVersion",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "IsClient",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:     "IsEdit",
		Returns:  *new(types.Bool),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:    "IsRunMode",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "IsRunning",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "IsServer",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "IsStudio",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:     "Pause",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Reset",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Run",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "Set3dRenderingEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enable",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetRobloxGuiFocused",
		Parameters: []desc.Parameter{
			{
				Name: "focus",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "Stop",
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "UnbindFromRenderStep",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "setThrottleFramerateEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "enable",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "Heartbeat",
		Parameters: []desc.Parameter{
			{
				Name: "step",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "RenderStepped",
		Parameters: []desc.Parameter{
			{
				Name: "step",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "Stepped",
		Parameters: []desc.Parameter{
			{
				Name: "time",
				Type: *new(types.Double),
			},
			{
				Name: "step",
				Type: *new(types.Double),
			},
		},
	},
)

var RuntimeScriptService = desc.NewClass("RuntimeScriptService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var ScriptContext = desc.NewClass("ScriptContext", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "ScriptsDisabled",
		ReadSecurity:  desc.LocalUserSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "AddCoreScriptLocal",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "parent",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetCoverageStats",
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetTimeout",
		Parameters: []desc.Parameter{
			{
				Name: "seconds",
				Type: *new(types.Double),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "Error",
		Parameters: []desc.Parameter{
			{
				Name: "message",
				Type: *new(types.String),
			},
			{
				Name: "stackTrace",
				Type: *new(types.String),
			},
			{
				Name: "script",
				Type: types.NilInstance,
			},
		},
	},
)

var ScriptDebugger = desc.NewClass("ScriptDebugger", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CurrentLine",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsDebugging",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsPaused",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Script",
		Value: types.NilInstance,
	},
	desc.Function{
		Name: "AddWatch",
		Parameters: []desc.Parameter{
			{
				Name: "expression",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetBreakpoints",
		Returns: *new(types.Objects),
	},
	desc.Function{
		Name:    "GetGlobals",
		Returns: *new(types.Map),
	},
	desc.Function{
		Name: "GetLocals",
		Parameters: []desc.Parameter{
			{
				Name:     "stackFrame",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
		Returns: *new(types.Map),
	},
	desc.Function{
		Name:    "GetStack",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "GetUpvalues",
		Parameters: []desc.Parameter{
			{
				Name:     "stackFrame",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
		Returns: *new(types.Map),
	},
	desc.Function{
		Name: "GetWatchValue",
		Parameters: []desc.Parameter{
			{
				Name: "watch",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Name:    "GetWatches",
		Returns: *new(types.Objects),
	},
	desc.Function{Name: "Resume"},
	desc.Function{
		Name: "SetBreakpoint",
		Parameters: []desc.Parameter{
			{
				Name: "line",
				Type: *new(types.Int),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "SetGlobal",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Name: "SetLocal",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
			{
				Name:     "stackFrame",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "SetUpvalue",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
			{
				Name:     "stackFrame",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{Name: "StepIn"},
	desc.Function{Name: "StepOut"},
	desc.Function{Name: "StepOver"},
	desc.Event{
		Name: "BreakpointAdded",
		Parameters: []desc.Parameter{
			{
				Name: "breakpoint",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "BreakpointRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "breakpoint",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "EncounteredBreak",
		Parameters: []desc.Parameter{
			{
				Name: "line",
				Type: *new(types.Int),
			},
			{
				Name: "breakReason",
				Type: *new(enum.BreakReason),
			},
		},
	},
	desc.Event{Name: "Resuming"},
	desc.Event{
		Name: "WatchAdded",
		Parameters: []desc.Parameter{
			{
				Name: "watch",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "WatchRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "watch",
				Type: types.NilInstance,
			},
		},
	},
)

var ScriptService = desc.NewClass("ScriptService", Instance,
	desc.NotCreatable|desc.Service,
)

var Selection = desc.NewClass("Selection", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:     "Get",
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "Set",
		Parameters: []desc.Parameter{
			{
				Name: "selection",
				Type: *new(types.Objects),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Event{Name: "SelectionChanged"},
)

var ServerScriptService = desc.NewClass("ServerScriptService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "LoadStringEnabled",
		Value: *new(types.Bool),
	},
)

var ServerStorage = desc.NewClass("ServerStorage", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var ServiceProvider = desc.NewClass("ServiceProvider", Instance,
	desc.NotCreatable,
	desc.Function{
		Name: "FindService",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetService",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "getService",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "service",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Event{Name: "Close"},
	desc.Event{
		Name:     "CloseLate",
		Security: desc.LocalUserSecurity,
	},
	desc.Event{
		Name: "ServiceAdded",
		Parameters: []desc.Parameter{
			{
				Name: "service",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "ServiceRemoving",
		Parameters: []desc.Parameter{
			{
				Name: "service",
				Type: types.NilInstance,
			},
		},
	},
)

var DataModel = desc.NewClass("DataModel", ServiceProvider,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CreatorId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "CreatorType",
		Value: *new(enum.CreatorType),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "GameId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "GearGenreSetting",
		Value: *new(enum.GearGenreSetting),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Genre",
		Value: *new(enum.Genre),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "IsSFFlagsLoaded",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "JobId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PlaceId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PlaceVersion",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "PrivateServerId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "PrivateServerOwnerId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "VIPServerId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "VIPServerOwnerId",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Workspace",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "lighting",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "workspace",
		Value: types.NilInstance,
	},
	desc.Function{
		Name: "BindToClose",
		Parameters: []desc.Parameter{
			{
				Name: "function",
				Type: *new(types.Function),
			},
		},
	},
	desc.Function{
		Name: "DefineFastFlag",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "defaultValue",
				Type: *new(types.Bool),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "DefineFastInt",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "defaultValue",
				Type: *new(types.Int),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "DefineFastString",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
			{
				Name: "defaultValue",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetFastFlag",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetFastInt",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetFastString",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetJobIntervalPeakFraction",
		Parameters: []desc.Parameter{
			{
				Name: "jobname",
				Type: *new(types.String),
			},
			{
				Name: "greaterThan",
				Type: *new(types.Double),
			},
		},
		Returns:  *new(types.Double),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetJobTimePeakFraction",
		Parameters: []desc.Parameter{
			{
				Name: "jobname",
				Type: *new(types.String),
			},
			{
				Name: "greaterThan",
				Type: *new(types.Double),
			},
		},
		Returns:  *new(types.Double),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetJobsExtendedStats",
		Returns:  *new(types.Array),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetJobsInfo",
		Returns:  *new(types.Array),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:    "GetMessage",
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "GetObjects",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.Content),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetObjectsList",
		Parameters: []desc.Parameter{
			{
				Name: "urls",
				Type: *new(types.Array),
			},
		},
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetRemoteBuildMode",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsGearTypeAllowed",
		Parameters: []desc.Parameter{
			{
				Name: "gearType",
				Type: *new(enum.GearType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "IsLoaded",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "Load",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.Content),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:     "OpenScreenshotsFolder",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "OpenVideosFolder",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "ReportInGoogleAnalytics",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
			{
				Name:     "action",
				Optional: true,
				Type:     types.String("custom"),
			},
			{
				Name:     "label",
				Optional: true,
				Type:     types.String("none"),
			},
			{
				Name:     "value",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetPlaceId",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "SetUniverseId",
		Parameters: []desc.Parameter{
			{
				Name: "universeId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "Shutdown",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetObjectsAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.Content),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "HttpGetAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "HttpPostAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
			{
				Name: "data",
				Type: *new(types.String),
			},
			{
				Name:     "contentType",
				Optional: true,
				Type:     types.String("*/*"),
			},
			{
				Name:     "httpRequestType",
				Optional: true,
				Type:     enum.HttpRequestType(0),
			},
			{
				Name:     "doNotAllowDiabolicalMode",
				Optional: true,
				Type:     types.Bool(false),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "InsertObjectsAndJoinIfLegacyAsync",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.Content),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "SavePlace",
		Parameters: []desc.Parameter{
			{
				Name:     "saveFilter",
				Optional: true,
				Type:     enum.SaveFilter(2),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{Name: "AllowedGearTypeChanged"},
	desc.Event{
		Name: "GraphicsQualityChangeRequest",
		Parameters: []desc.Parameter{
			{
				Name: "betterQuality",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "ItemChanged",
		Parameters: []desc.Parameter{
			{
				Name: "object",
				Type: types.NilInstance,
			},
			{
				Name: "descriptor",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{Name: "Loaded"},
	desc.Event{
		Name: "ScreenshotReady",
		Parameters: []desc.Parameter{
			{
				Name: "path",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Callback{
		Name:    "OnClose",
		Returns: *new(types.Tuple),
	},
)

var GenericSettings = desc.NewClass("GenericSettings", ServiceProvider,
	desc.NotCreatable,
)

var AnalysticsSettings = desc.NewClass("AnalysticsSettings", GenericSettings,
	desc.NotCreatable,
)

var GlobalSettings = desc.NewClass("GlobalSettings", GenericSettings,
	desc.NotCreatable,
	desc.Function{
		Name: "GetFFlag",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "GetFVariable",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
)

var UserSettings = desc.NewClass("UserSettings", GenericSettings,
	desc.NotCreatable,
	desc.Function{
		Name: "IsUserFeatureEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "Reset"},
)

var Sky = desc.NewClass("Sky", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CelestialBodiesShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MoonAngularSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MoonTextureId",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxBk",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxDn",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxFt",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxLf",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxRt",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SkyboxUp",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StarCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SunAngularSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SunTextureId",
		Value: *new(types.Content),
	},
)

var Smoke = desc.NewClass("Smoke", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Opacity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "RiseVelocity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Size",
		Value: *new(types.Float),
	},
)

var SocialService = desc.NewClass("SocialService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "InvokeGameInvitePromptClosed",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "recipientIds",
				Type: *new(types.Array),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PromptGameInvite",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "CanSendGameInviteAsync",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Event{
		Name: "GameInvitePromptClosed",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "recipientIds",
				Type: *new(types.Array),
			},
		},
	},
	desc.Event{
		Name: "PromptInviteRequested",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var Sound = desc.NewClass("Sound", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EmitterSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsLoaded",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsPaused",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsPlaying",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Looped",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:  "MaxDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "MinDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad,
		Name:  "Pitch",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PlayOnRemove",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PlaybackLoudness",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:  "PlaybackSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Playing",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RollOffMode",
		Value: *new(enum.RollOffMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SoundGroup",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SoundId",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TimeLength",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TimePosition",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Volume",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "isPlaying",
		Value: *new(types.Bool),
	},
	desc.Function{Name: "Pause"},
	desc.Function{Name: "Play"},
	desc.Function{Name: "Resume"},
	desc.Function{Name: "Stop"},
	desc.Function{Name: "pause"},
	desc.Function{Name: "play"},
	desc.Function{Name: "stop"},
	desc.Event{
		Name: "DidLoop",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
			{
				Name: "numOfTimesLooped",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "Ended",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Loaded",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Paused",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Played",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Resumed",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "Stopped",
		Parameters: []desc.Parameter{
			{
				Name: "soundId",
				Type: *new(types.String),
			},
		},
	},
)

var SoundEffect = desc.NewClass("SoundEffect", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Priority",
		Value: *new(types.Int),
	},
)

var ChorusSoundEffect = desc.NewClass("ChorusSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Depth",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Mix",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Rate",
		Value: *new(types.Float),
	},
)

var CompressorSoundEffect = desc.NewClass("CompressorSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attack",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GainMakeup",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Ratio",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Release",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SideChain",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Threshold",
		Value: *new(types.Float),
	},
)

var DistortionSoundEffect = desc.NewClass("DistortionSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Level",
		Value: *new(types.Float),
	},
)

var EchoSoundEffect = desc.NewClass("EchoSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Delay",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DryLevel",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Feedback",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WetLevel",
		Value: *new(types.Float),
	},
)

var EqualizerSoundEffect = desc.NewClass("EqualizerSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HighGain",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LowGain",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MidGain",
		Value: *new(types.Float),
	},
)

var FlangeSoundEffect = desc.NewClass("FlangeSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Depth",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Mix",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Rate",
		Value: *new(types.Float),
	},
)

var PitchShiftSoundEffect = desc.NewClass("PitchShiftSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Octave",
		Value: *new(types.Float),
	},
)

var ReverbSoundEffect = desc.NewClass("ReverbSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DecayTime",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Density",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Diffusion",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DryLevel",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WetLevel",
		Value: *new(types.Float),
	},
)

var TremoloSoundEffect = desc.NewClass("TremoloSoundEffect", SoundEffect,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Depth",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Duty",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Frequency",
		Value: *new(types.Float),
	},
)

var SoundGroup = desc.NewClass("SoundGroup", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Volume",
		Value: *new(types.Float),
	},
)

var SoundService = desc.NewClass("SoundService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AmbientReverb",
		Value: *new(enum.ReverbType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DistanceFactor",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DopplerScale",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RespectFilteringEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RolloffScale",
		Value: *new(types.Float),
	},
	desc.Function{
		Name:     "BeginRecording",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetListener",
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name:     "GetSoundMemoryData",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PlayLocalSound",
		Parameters: []desc.Parameter{
			{
				Name: "sound",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "PlayStockSound",
		Parameters: []desc.Parameter{
			{
				Name: "sound",
				Type: *new(enum.SoundType),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetListener",
		Parameters: []desc.Parameter{
			{
				Name: "listenerType",
				Type: *new(enum.ListenerType),
			},
			{
				Name: "listener",
				Type: *new(types.Tuple),
			},
		},
	},
	desc.Function{
		Name: "SetRecordingDevice",
		Parameters: []desc.Parameter{
			{
				Name: "deviceIndex",
				Type: *new(types.Int),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "EndRecording",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "GetRecordingDevices",
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
)

var Sparkles = desc.NewClass("Sparkles", Instance,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SparkleColor",
		Value: *new(types.Color3),
	},
)

var SpawnerService = desc.NewClass("SpawnerService", Instance,
	desc.NotCreatable|desc.Service,
)

var StandalonePluginScripts = desc.NewClass("StandalonePluginScripts", Instance)

var StarterGear = desc.NewClass("StarterGear", Instance)

var StarterPack = desc.NewClass("StarterPack", Instance,
	desc.NotCreatable|desc.Service,
)

var StarterPlayer = desc.NewClass("StarterPlayer", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:          "AllowCustomAnimations",
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoJumpEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMaxZoomDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMinZoomDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CameraMode",
		Value: *new(enum.CameraMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterJumpHeight",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterJumpPower",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterMaxSlopeAngle",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterUseJumpPower",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CharacterWalkSpeed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevCameraOcclusionMode",
		Value: *new(enum.DevCameraOcclusionMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevComputerCameraMovementMode",
		Value: *new(enum.DevComputerCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevComputerMovementMode",
		Value: *new(enum.DevComputerMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevTouchCameraMovementMode",
		Value: *new(enum.DevTouchCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DevTouchMovementMode",
		Value: *new(enum.DevTouchMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EnableMouseLockOption",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDFace",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDHead",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDLeftArm",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDLeftLeg",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDPants",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDRightArm",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDRightLeg",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDShirt",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDTeeShirt",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAssetIDTorso",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsAvatar",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.GameAvatarType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsR15Collision",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.R15CollisionType),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsScaleRangeBodyType",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.NumberRange),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsScaleRangeHead",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.NumberRange),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsScaleRangeHeight",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.NumberRange),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsScaleRangeProportion",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.NumberRange),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "GameSettingsScaleRangeWidth",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.NumberRange),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HealthDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LoadCharacterAppearance",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NameDisplayDistance",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "UserEmotesEnabled",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name:     "ClearDefaults",
		Security: desc.RobloxScriptSecurity,
	},
)

var StarterPlayerScripts = desc.NewClass("StarterPlayerScripts", Instance,
	desc.NotCreatable,
)

var StarterCharacterScripts = desc.NewClass("StarterCharacterScripts", StarterPlayerScripts,
	desc.NotCreatable,
)

var Stats = desc.NewClass("Stats", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ContactsCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "DataReceiveKbps",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "DataSendKbps",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "HeartbeatTimeMs",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "InstanceCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "MovingPrimitivesCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PhysicsReceiveKbps",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PhysicsSendKbps",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PhysicsStepTimeMs",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "PrimitivesCount",
		Value: *new(types.Int),
	},
	desc.Function{
		Name:     "GetBrowserTrackerId",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetMemoryUsageMbForTag",
		Parameters: []desc.Parameter{
			{
				Name: "tag",
				Type: *new(enum.DeveloperMemoryTag),
			},
		},
		Returns: *new(types.Float),
	},
	desc.Function{
		Name:    "GetTotalMemoryUsageMb",
		Returns: *new(types.Float),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetPaginatedMemoryByTexture",
		Parameters: []desc.Parameter{
			{
				Name: "queryType",
				Type: *new(enum.TextureQueryType),
			},
			{
				Name: "pageIndex",
				Type: *new(types.Int),
			},
			{
				Name: "pageSize",
				Type: *new(types.Int),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
)

var StatsItem = desc.NewClass("StatsItem", Instance,
	desc.NotCreatable,
	desc.Function{
		Name:     "GetValue",
		Returns:  *new(types.Double),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name:     "GetValueString",
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
)

var RunningAverageItemDouble = desc.NewClass("RunningAverageItemDouble", StatsItem,
	desc.NotCreatable,
)

var RunningAverageItemInt = desc.NewClass("RunningAverageItemInt", StatsItem,
	desc.NotCreatable,
)

var RunningAverageTimeIntervalItem = desc.NewClass("RunningAverageTimeIntervalItem", StatsItem,
	desc.NotCreatable,
)

var TotalCountTimeIntervalItem = desc.NewClass("TotalCountTimeIntervalItem", StatsItem,
	desc.NotCreatable,
)

var StopWatchReporter = desc.NewClass("StopWatchReporter", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "FinishTask",
		Parameters: []desc.Parameter{
			{
				Name: "taskId",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendReport",
		Parameters: []desc.Parameter{
			{
				Name: "reportName",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "StartTask",
		Parameters: []desc.Parameter{
			{
				Name: "reportName",
				Type: *new(types.String),
			},
			{
				Name: "taskName",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
)

var Studio = desc.NewClass("Studio", Instance,
	desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Always Save Script Changes",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Animate Hover Over",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto Closing Brackets",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto Closing Quotes",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto Indent",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto-Recovery Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto-Recovery Interval (Minutes)",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Auto-Recovery Path",
		Value: *new(types.QDir),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Background Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Basic Objects Display Mode",
		Value: *new(enum.ListDisplayMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Built-in Function Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Camera Mouse Wheel Speed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Camera Shift Speed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Camera Speed",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Camera Zoom to Mouse Position",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Clear Output On Start",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Comment Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DefaultScriptFileDir",
		Value: *new(types.QDir),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DeprecatedObjectsShown",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Device Pairing Code",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Disable Accurate Play Solo",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Drag Multiple Parts As Single Part",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enable Autocomplete",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enable CoreScript Debugger",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Enable Intellisense",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Error Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Find Selection Background Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Font",
		Value: *new(types.QFont),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Hover Animate Speed",
		Value: *new(enum.HoverAnimateSpeed),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Hover Over Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Keyword Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Language",
		Value: *new(enum.LanguagePreference),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Line Thickness",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LuaDebuggerEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.Hidden | desc.ReadOnly | desc.NotReplicated,
		Name:  "LuaDebuggerEnabledAtStartup",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Matching Word Background Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Maximum Output Lines",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Number Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Only Play Audio from Window in Focus",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Operator Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Output Font",
		Value: *new(types.QFont),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Output Layout Mode",
		Value: *new(enum.OutputLayoutMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OverrideCoreScripts",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "OverrideCoreScriptsDir",
		Value: *new(types.QDir),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PermissionLevelShown",
		Value: *new(enum.PermissionLevelShown),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PluginsDir",
		Value: *new(types.QDir),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Preprocessor Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RecentSavesDir",
		Value: *new(types.QDir),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Render Throttle Percentage",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Respect Studio shortcuts when game has focus",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RuntimeUndoBehavior",
		Value: *new(enum.RuntimeUndoBehavior),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScriptTimeoutLength",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Select Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Select/Hover Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Selection Background Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Selection Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Server Audio Behavior",
		Value: *new(enum.ServerAudioBehavior),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Core GUI in Explorer while Playing",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Diagnostics Bar",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Hidden Objects in Explorer",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Hover Over",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Navigation Mesh",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Plugin GUI Service in Explorer",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show QT warnings in output",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show Roblox Plugin GUI Service in Explorer",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Show plus button on hover in Explorer",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Skip Closing Brackets and Quotes",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "String Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Tab Width",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text Color",
		Value: *new(types.Color3),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Text Wrapping",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:  "Theme",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "UI Theme",
		Value: *new(enum.UITheme),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Warning Color",
		Value: *new(types.Color3),
	},
	desc.Function{
		Name:     "GetAvailableThemes",
		Returns:  *new(types.Array),
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name:     "ThemeChanged",
		Security: desc.PluginSecurity,
	},
)

var StudioData = desc.NewClass("StudioData", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags:         desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:          "EnableScriptCollabOnLoad",
		ReadSecurity:  desc.PluginSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.PluginSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "SrcPlaceId",
		ReadSecurity:  desc.RobloxSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "SrcUniverseId",
		ReadSecurity:  desc.RobloxSecurity,
		Value:         *new(types.Int64),
		WriteSecurity: desc.RobloxSecurity,
	},
)

var StudioService = desc.NewClass("StudioService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "ActiveScript",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "GridSize",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "InstalledPluginData",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "RotateIncrement",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "StudioLocaleId",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "UseLocalSpace",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "ConvertToPackageUpload",
		Parameters: []desc.Parameter{
			{
				Name: "uploadUrl",
				Type: *new(types.String),
			},
		},
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "CopyToClipboard",
		Parameters: []desc.Parameter{
			{
				Name: "stringToCopy",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "EmitPlacePublishedSignal",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetClassIcon",
		Parameters: []desc.Parameter{
			{
				Name: "className",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetResourceByCategory",
		Parameters: []desc.Parameter{
			{
				Name: "category",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Dictionary),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetStartupPluginId",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetUserId",
		Returns:  *new(types.Int64),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "IsPluginInstalled",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "IsPluginUpToDate",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "currentAssetVersion",
				Type: *new(types.Int64),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenInBrowser_DONOTUSE",
		Parameters: []desc.Parameter{
			{
				Name: "url",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "OpenPluginInsertPage",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "PublishAs",
		Parameters: []desc.Parameter{
			{
				Name: "universeId",
				Type: *new(types.Int64),
			},
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SerializeInstances",
		Parameters: []desc.Parameter{
			{
				Name: "instances",
				Type: *new(types.Objects),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetPluginEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "state",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetUniverseDisplayName",
		Parameters: []desc.Parameter{
			{
				Name: "newName",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ShowPublishToRoblox",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "UninstallPlugin",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "UpdatePluginManagement",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptImportFile",
		Parameters: []desc.Parameter{
			{
				Name:     "fileTypeFilter",
				Optional: true,
				Type:     *new(types.Array),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptImportFiles",
		Parameters: []desc.Parameter{
			{
				Name:     "fileTypeFilter",
				Optional: true,
				Type:     *new(types.Array),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptImportLocalAsset",
		Parameters: []desc.Parameter{
			{
				Name: "prompt",
				Type: *new(types.String),
			},
			{
				Name:     "fileTypeFilter",
				Optional: true,
				Type:     *new(types.Array),
			},
		},
		Returns:  types.NilInstance,
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "PromptImportLocalAssets",
		Parameters: []desc.Parameter{
			{
				Name: "prompt",
				Type: *new(types.String),
			},
			{
				Name:     "fileTypeFilter",
				Optional: true,
				Type:     *new(types.Array),
			},
		},
		Returns:  *new(types.Objects),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "TryInstallPlugin",
		Parameters: []desc.Parameter{
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
			{
				Name: "assetVersionId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "GamePublishFinished",
		Parameters: []desc.Parameter{
			{
				Name: "success",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnConvertToPackageResult",
		Parameters: []desc.Parameter{
			{
				Name: "isSuccessful",
				Type: *new(types.Bool),
			},
			{
				Name: "errorMessage",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnOpenConvertToPackagePlugin",
		Parameters: []desc.Parameter{
			{
				Name: "instances",
				Type: *new(types.Objects),
			},
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnOpenManagePackagePlugin",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
			{
				Name: "assetId",
				Type: *new(types.Int64),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "OnPluginInstalledFromToolbox",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnPluginInstalledFromWeb",
		Parameters: []desc.Parameter{
			{
				Name: "pluginId",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnPublishAsPlugin",
		Parameters: []desc.Parameter{
			{
				Name: "instances",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "OnPublishPlaceToRoblox",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "OnSaveToRoblox",
		Parameters: []desc.Parameter{
			{
				Name: "instances",
				Type: *new(types.Objects),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var StudioTheme = desc.NewClass("StudioTheme", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Name: "GetColor",
		Parameters: []desc.Parameter{
			{
				Name: "styleguideitem",
				Type: *new(enum.StudioStyleGuideColor),
			},
			{
				Name:     "modifier",
				Optional: true,
				Type:     enum.StudioStyleGuideModifier(0),
			},
		},
		Returns:  *new(types.Color3),
		Security: desc.PluginSecurity,
	},
	desc.Function{
		Name: "GetPath",
		Parameters: []desc.Parameter{
			{
				Name: "assetid",
				Type: *new(types.String),
			},
			{
				Name:     "modifier",
				Optional: true,
				Type:     enum.StudioStyleGuideModifier(0),
			},
		},
		Returns:  *new(types.String),
		Security: desc.PluginSecurity,
	},
)

var TaskScheduler = desc.NewClass("TaskScheduler", Instance,
	desc.Service,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "SchedulerDutyCycle",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "SchedulerRate",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ThreadPoolConfig",
		Value: *new(enum.ThreadPoolConfig),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "ThreadPoolSize",
		Value: *new(types.Int),
	},
)

var Team = desc.NewClass("Team", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoAssignable",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "AutoColorCharacters",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Score",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TeamColor",
		Value: *new(types.BrickColor),
	},
	desc.Function{
		Name:    "GetPlayers",
		Returns: *new(types.Objects),
	},
	desc.Event{
		Name: "PlayerAdded",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "PlayerRemoved",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
		},
	},
)

var Teams = desc.NewClass("Teams", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name:    "GetTeams",
		Returns: *new(types.Objects),
	},
	desc.Function{Name: "RebalanceTeams"},
)

var TeleportService = desc.NewClass("TeleportService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "CustomizedTeleportUI",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetArrivingTeleportGui",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetLocalPlayerTeleportData",
		Returns: *new(types.Variant),
	},
	desc.Function{
		Name: "GetTeleportSetting",
		Parameters: []desc.Parameter{
			{
				Name: "setting",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Variant),
	},
	desc.Function{
		Name: "SetTeleportGui",
		Parameters: []desc.Parameter{
			{
				Name: "gui",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "SetTeleportSetting",
		Parameters: []desc.Parameter{
			{
				Name: "setting",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Function{
		Name: "Teleport",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name:     "player",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name: "teleportData",
				Type: *new(types.Variant),
			},
			{
				Name:     "customLoadingScreen",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{
		Name:     "TeleportCancel",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "TeleportToPlaceInstance",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name: "instanceId",
				Type: *new(types.String),
			},
			{
				Name:     "player",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "spawnName",
				Optional: true,
				Type:     types.String(""),
			},
			{
				Name: "teleportData",
				Type: *new(types.Variant),
			},
			{
				Name:     "customLoadingScreen",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "TeleportToPrivateServer",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name: "reservedServerAccessCode",
				Type: *new(types.String),
			},
			{
				Name: "players",
				Type: *new(types.Objects),
			},
			{
				Name:     "spawnName",
				Optional: true,
				Type:     types.String(""),
			},
			{
				Name: "teleportData",
				Type: *new(types.Variant),
			},
			{
				Name:     "customLoadingScreen",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "TeleportToSpawnByName",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name: "spawnName",
				Type: *new(types.String),
			},
			{
				Name:     "player",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name: "teleportData",
				Type: *new(types.Variant),
			},
			{
				Name:     "customLoadingScreen",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetPlayerPlaceInstanceAsync",
		Parameters: []desc.Parameter{
			{
				Name: "userId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "ReserveServer",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "TeleportPartyAsync",
		Parameters: []desc.Parameter{
			{
				Name: "placeId",
				Type: *new(types.Int64),
			},
			{
				Name: "players",
				Type: *new(types.Objects),
			},
			{
				Name: "teleportData",
				Type: *new(types.Variant),
			},
			{
				Name:     "customLoadingScreen",
				Optional: true,
				Type:     types.NilInstance,
			},
		},
		Returns: *new(types.String),
	},
	desc.Event{
		Name: "LocalPlayerArrivedFromTeleport",
		Parameters: []desc.Parameter{
			{
				Name: "loadingGui",
				Type: types.NilInstance,
			},
			{
				Name: "dataTable",
				Type: *new(types.Variant),
			},
		},
	},
	desc.Event{
		Name: "TeleportInitFailed",
		Parameters: []desc.Parameter{
			{
				Name: "player",
				Type: types.NilInstance,
			},
			{
				Name: "teleportResult",
				Type: *new(enum.TeleportResult),
			},
			{
				Name: "errorMessage",
				Type: *new(types.String),
			},
		},
	},
)

var TerrainRegion = desc.NewClass("TerrainRegion", Instance,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "IsSmooth",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "SizeInCells",
		Value: *new(types.Vector3),
	},
	desc.Function{
		Name:     "ConvertToSmooth",
		Security: desc.PluginSecurity,
	},
)

var TestService = desc.NewClass("TestService", Instance,
	desc.Service,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AutoRuns",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Description",
		Value: *new(types.String),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "ErrorCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ExecuteWithStudioRun",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Is30FpsThrottleEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsPhysicsEnvironmentalThrottled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "IsSleepAllowed",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "NumberOfPlayers",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SimulateSecondsLag",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "TestCount",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Timeout",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "WarnCount",
		Value: *new(types.Int),
	},
	desc.Function{
		Name: "Check",
		Parameters: []desc.Parameter{
			{
				Name: "condition",
				Type: *new(types.Bool),
			},
			{
				Name: "description",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "Checkpoint",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{Name: "Done"},
	desc.Function{
		Name: "Error",
		Parameters: []desc.Parameter{
			{
				Name: "description",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "Fail",
		Parameters: []desc.Parameter{
			{
				Name: "description",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "Message",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "Require",
		Parameters: []desc.Parameter{
			{
				Name: "condition",
				Type: *new(types.Bool),
			},
			{
				Name: "description",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "Warn",
		Parameters: []desc.Parameter{
			{
				Name: "condition",
				Type: *new(types.Bool),
			},
			{
				Name: "description",
				Type: *new(types.String),
			},
			{
				Name:     "source",
				Optional: true,
				Type:     types.NilInstance,
			},
			{
				Name:     "line",
				Optional: true,
				Type:     types.Int(int32(0)),
			},
		},
	},
	desc.Function{
		Name: "isFeatureEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "name",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Flags:    desc.Yields,
		Name:     "Run",
		Security: desc.PluginSecurity,
	},
	desc.Event{
		Name: "ServerCollectConditionalResult",
		Parameters: []desc.Parameter{
			{
				Name: "condition",
				Type: *new(types.Bool),
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name: "script",
				Type: types.NilInstance,
			},
			{
				Name: "line",
				Type: *new(types.Int),
			},
		},
	},
	desc.Event{
		Name: "ServerCollectResult",
		Parameters: []desc.Parameter{
			{
				Name: "text",
				Type: *new(types.String),
			},
			{
				Name: "script",
				Type: types.NilInstance,
			},
			{
				Name: "line",
				Type: *new(types.Int),
			},
		},
	},
)

var TextFilterResult = desc.NewClass("TextFilterResult", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetChatForUserAsync",
		Parameters: []desc.Parameter{
			{
				Name: "toUserId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Flags:   desc.Yields,
		Name:    "GetNonChatStringForBroadcastAsync",
		Returns: *new(types.String),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetNonChatStringForUserAsync",
		Parameters: []desc.Parameter{
			{
				Name: "toUserId",
				Type: *new(types.Int64),
			},
		},
		Returns: *new(types.String),
	},
)

var TextService = desc.NewClass("TextService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "GetTextSize",
		Parameters: []desc.Parameter{
			{
				Name: "string",
				Type: *new(types.String),
			},
			{
				Name: "fontSize",
				Type: *new(types.Int),
			},
			{
				Name: "font",
				Type: *new(enum.Font),
			},
			{
				Name: "frameSize",
				Type: *new(types.Vector2),
			},
		},
		Returns: *new(types.Vector2),
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "FilterStringAsync",
		Parameters: []desc.Parameter{
			{
				Name: "stringToFilter",
				Type: *new(types.String),
			},
			{
				Name: "fromUserId",
				Type: *new(types.Int64),
			},
			{
				Name:     "textContext",
				Optional: true,
				Type:     enum.TextFilterContext(2),
			},
		},
		Returns: types.NilInstance,
	},
)

var ThirdPartyUserService = desc.NewClass("ThirdPartyUserService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name:     "GetUserDisplayName",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "GetUserPlatformId",
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "HaveActiveUser",
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ReturnToEngagement",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "ShowAccountPicker",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "RegisterActiveUser",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadId",
				Type: *new(enum.UserInputType),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "ActiveGamepadAdded",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name:     "ActiveGamepadRemoved",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "ActiveUserSignedOut",
		Parameters: []desc.Parameter{
			{
				Name: "signOutStatus",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var TimerService = desc.NewClass("TimerService", Instance,
	desc.NotCreatable|desc.Service,
)

var TouchInputService = desc.NewClass("TouchInputService", Instance,
	desc.NotCreatable|desc.Service,
)

var TouchTransmitter = desc.NewClass("TouchTransmitter", Instance,
	desc.NotCreatable,
)

var Trail = desc.NewClass("Trail", Instance,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Attachment1",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Color",
		Value: *new(types.ColorSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FaceCamera",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Lifetime",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightEmission",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "LightInfluence",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Texture",
		Value: *new(types.Content),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureLength",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TextureMode",
		Value: *new(enum.TextureMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Transparency",
		Value: *new(types.NumberSequence),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "WidthScale",
		Value: *new(types.NumberSequence),
	},
	desc.Function{Name: "Clear"},
)

var Translator = desc.NewClass("Translator", Instance,
	desc.NotCreatable|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "LocaleId",
		Value: *new(types.String),
	},
	desc.Function{
		Name: "FormatByKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
			{
				Name: "args",
				Type: *new(types.Variant),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "RobloxOnlyTranslate",
		Parameters: []desc.Parameter{
			{
				Name: "context",
				Type: types.NilInstance,
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.String),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "Translate",
		Parameters: []desc.Parameter{
			{
				Name: "context",
				Type: types.NilInstance,
			},
			{
				Name: "text",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.String),
	},
)

var TweenBase = desc.NewClass("TweenBase", Instance,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "PlaybackState",
		Value: *new(enum.PlaybackState),
	},
	desc.Function{Name: "Cancel"},
	desc.Function{Name: "Pause"},
	desc.Function{Name: "Play"},
	desc.Event{
		Name: "Completed",
		Parameters: []desc.Parameter{
			{
				Name: "playbackState",
				Type: *new(enum.PlaybackState),
			},
		},
	},
)

var Tween = desc.NewClass("Tween", TweenBase,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "Instance",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "TweenInfo",
		Value: *new(types.TweenInfo),
	},
)

var TweenService = desc.NewClass("TweenService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Function{
		Name: "Create",
		Parameters: []desc.Parameter{
			{
				Name: "instance",
				Type: types.NilInstance,
			},
			{
				Name: "tweenInfo",
				Type: *new(types.TweenInfo),
			},
			{
				Name: "propertyTable",
				Type: *new(types.Dictionary),
			},
		},
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetValue",
		Parameters: []desc.Parameter{
			{
				Name: "alpha",
				Type: *new(types.Float),
			},
			{
				Name: "easingStyle",
				Type: *new(enum.EasingStyle),
			},
			{
				Name: "easingDirection",
				Type: *new(enum.EasingDirection),
			},
		},
		Returns: *new(types.Float),
	},
)

var UGCValidationService = desc.NewClass("UGCValidationService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "GetMeshTriCountSync",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetMeshVertsSync",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetTextureSizeSync",
		Parameters: []desc.Parameter{
			{
				Name: "textureId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Vector2),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetMeshTriCount",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Int),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetMeshVerts",
		Parameters: []desc.Parameter{
			{
				Name: "meshId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Array),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Flags: desc.Yields,
		Name:  "GetTextureSize",
		Parameters: []desc.Parameter{
			{
				Name: "textureId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Vector2),
		Security: desc.RobloxScriptSecurity,
	},
)

var UIBase = desc.NewClass("UIBase", Instance,
	desc.NotCreatable,
)

var UIComponent = desc.NewClass("UIComponent", UIBase,
	desc.NotCreatable,
)

var UIConstraint = desc.NewClass("UIConstraint", UIComponent,
	desc.NotCreatable,
)

var UIAspectRatioConstraint = desc.NewClass("UIAspectRatioConstraint", UIConstraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AspectRatio",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "AspectType",
		Value: *new(enum.AspectType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "DominantAxis",
		Value: *new(enum.DominantAxis),
	},
)

var UISizeConstraint = desc.NewClass("UISizeConstraint", UIConstraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinSize",
		Value: *new(types.Vector2),
	},
)

var UITextSizeConstraint = desc.NewClass("UITextSizeConstraint", UIConstraint,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxTextSize",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinTextSize",
		Value: *new(types.Int),
	},
)

var UILayout = desc.NewClass("UILayout", UIComponent,
	desc.NotCreatable,
)

var UIGridStyleLayout = desc.NewClass("UIGridStyleLayout", UILayout,
	desc.NotCreatable,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsoluteContentSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FillDirection",
		Value: *new(enum.FillDirection),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "HorizontalAlignment",
		Value: *new(enum.HorizontalAlignment),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SortOrder",
		Value: *new(enum.SortOrder),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "VerticalAlignment",
		Value: *new(enum.VerticalAlignment),
	},
	desc.Function{Name: "ApplyLayout"},
	desc.Function{
		Name: "SetCustomSortFunction",
		Parameters: []desc.Parameter{
			{
				Name:     "function",
				Optional: true,
				Type:     *new(types.Function),
			},
		},
	},
)

var UIGridLayout = desc.NewClass("UIGridLayout", UIGridStyleLayout,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsoluteCellCount",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "AbsoluteCellSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CellPadding",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "CellSize",
		Value: *new(types.UDim2),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FillDirectionMaxCells",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "StartCorner",
		Value: *new(enum.StartCorner),
	},
)

var UIInlineLayout = desc.NewClass("UIInlineLayout", UIGridStyleLayout,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InlineAlignment",
		Value: *new(enum.InlineAlignment),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "InlinePadding",
		Value: *new(types.UDim2),
	},
)

var UIListLayout = desc.NewClass("UIListLayout", UIGridStyleLayout,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Padding",
		Value: *new(types.UDim),
	},
)

var UIPageLayout = desc.NewClass("UIPageLayout", UIGridStyleLayout,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Animated",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Circular",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "CurrentPage",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EasingDirection",
		Value: *new(enum.EasingDirection),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "EasingStyle",
		Value: *new(enum.EasingStyle),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GamepadInputEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Padding",
		Value: *new(types.UDim),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ScrollWheelInputEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TouchInputEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TweenTime",
		Value: *new(types.Float),
	},
	desc.Function{
		Name: "JumpTo",
		Parameters: []desc.Parameter{
			{
				Name: "page",
				Type: types.NilInstance,
			},
		},
	},
	desc.Function{
		Name: "JumpToIndex",
		Parameters: []desc.Parameter{
			{
				Name: "index",
				Type: *new(types.Int),
			},
		},
	},
	desc.Function{Name: "Next"},
	desc.Function{Name: "Previous"},
	desc.Event{
		Name: "PageEnter",
		Parameters: []desc.Parameter{
			{
				Name: "page",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "PageLeave",
		Parameters: []desc.Parameter{
			{
				Name: "page",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "Stopped",
		Parameters: []desc.Parameter{
			{
				Name: "currentPage",
				Type: types.NilInstance,
			},
		},
	},
)

var UITableLayout = desc.NewClass("UITableLayout", UIGridStyleLayout,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FillEmptySpaceColumns",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "FillEmptySpaceRows",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MajorAxis",
		Value: *new(enum.TableMajorAxis),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Padding",
		Value: *new(types.UDim2),
	},
)

var UIPadding = desc.NewClass("UIPadding", UIComponent,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PaddingBottom",
		Value: *new(types.UDim),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PaddingLeft",
		Value: *new(types.UDim),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PaddingRight",
		Value: *new(types.UDim),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "PaddingTop",
		Value: *new(types.UDim),
	},
)

var UIScale = desc.NewClass("UIScale", UIComponent,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Scale",
		Value: *new(types.Float),
	},
)

var UserGameSettings = desc.NewClass("UserGameSettings", Instance,
	desc.Service,
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "AllTutorialsDisabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "CameraMode",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.CustomCameraMode),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "CameraYInverted",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "ChatVisible",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ComputerCameraMovementMode",
		Value: *new(enum.ComputerCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ComputerMovementMode",
		Value: *new(enum.ComputerMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "ControlMode",
		Value: *new(enum.ControlMode),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "Fullscreen",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "GamepadCameraSensitivity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "HasEverUsedVR",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:          "IsUsingCameraYInverted",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:          "IsUsingGamepadCameraSensitivity",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MasterVolume",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:          "MicroProfilerWebServerEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:          "MicroProfilerWebServerIP",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:          "MicroProfilerWebServerPort",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MouseSensitivity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "MouseSensitivityFirstPerson",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "MouseSensitivityThirdPerson",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:          "OnScreenProfilerEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:          "OnboardingsCompleted",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.Hidden | desc.CanLoad | desc.CanSave,
		Name:          "PerformanceStatsVisible",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RCCProfilerRecordFrameRate",
		Value: *new(types.Int),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "RCCProfilerRecordTimeFrame",
		Value: *new(types.Int),
	},
	desc.Property{
		Name:  "RotationType",
		Value: *new(enum.RotationType),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "SavedQualityLevel",
		Value: *new(enum.SavedQualitySetting),
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "StartMaximized",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "StartScreenPosition",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad | desc.CanSave,
		Name:          "StartScreenSize",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TouchCameraMovementMode",
		Value: *new(enum.TouchCameraMovementMode),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "TouchMovementMode",
		Value: *new(enum.TouchMovementMode),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "UsedCoreGuiIsVisibleToggle",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "UsedCustomGuiIsVisibleToggle",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "UsedHideHudShortcut",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "VREnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "VRRotationIntensity",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Int),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetCameraYInvertValue",
		Returns: *new(types.Int),
	},
	desc.Function{
		Name: "GetOnboardingCompleted",
		Parameters: []desc.Parameter{
			{
				Name: "onboardingId",
				Type: *new(types.String),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "GetTutorialState",
		Parameters: []desc.Parameter{
			{
				Name: "tutorialId",
				Type: *new(types.String),
			},
		},
		Returns:  *new(types.Bool),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "InFullScreen",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "InStudioMode",
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "ResetOnboardingCompleted",
		Parameters: []desc.Parameter{
			{
				Name: "onboardingId",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{Name: "SetCameraYInvertVisible"},
	desc.Function{Name: "SetGamepadCameraSensitivityVisible"},
	desc.Function{
		Name: "SetOnboardingCompleted",
		Parameters: []desc.Parameter{
			{
				Name: "onboardingId",
				Type: *new(types.String),
			},
		},
	},
	desc.Function{
		Name: "SetTutorialState",
		Parameters: []desc.Parameter{
			{
				Name: "tutorialId",
				Type: *new(types.String),
			},
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "FullscreenChanged",
		Parameters: []desc.Parameter{
			{
				Name: "isFullscreen",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "PerformanceStatsVisibleChanged",
		Parameters: []desc.Parameter{
			{
				Name: "isPerformanceStatsVisible",
				Type: *new(types.Bool),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "StudioModeChanged",
		Parameters: []desc.Parameter{
			{
				Name: "isStudioMode",
				Type: *new(types.Bool),
			},
		},
	},
)

var UserInputService = desc.NewClass("UserInputService", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "AccelerometerEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "BottomBarSize",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "GamepadEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.Hidden | desc.NotReplicated,
		Name:          "GazeSelectionEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "GyroscopeEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "KeyboardEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.CanLoad | desc.CanSave,
		Name:          "LegacyInputEventsEnabled",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Bool),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Name:  "ModalEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MouseBehavior",
		Value: *new(enum.MouseBehavior),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "MouseDeltaSensitivity",
		Value: *new(types.Float),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "MouseEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MouseIconEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "NavBarSize",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "OnScreenKeyboardAnimationDuration",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Double),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "OnScreenKeyboardPosition",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "OnScreenKeyboardSize",
		Value: *new(types.Vector2),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "OnScreenKeyboardVisible",
		Value: *new(types.Bool),
	},
	desc.Property{
		Name:          "OverrideMouseIconBehavior",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(enum.OverrideMouseIconBehavior),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "RightBarSize",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "StatusBarSize",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.Vector2),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "TouchEnabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated,
		Name:  "UserHeadCFrame",
		Value: *new(types.CFrame),
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "VREnabled",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "GamepadSupports",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "gamepadKeyCode",
				Type: *new(enum.KeyCode),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name:    "GetConnectedGamepads",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetDeviceAcceleration",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetDeviceGravity",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name:    "GetDeviceRotation",
		Returns: *new(types.Tuple),
	},
	desc.Function{
		Name:     "GetDeviceType",
		Returns:  *new(enum.DeviceType),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:    "GetFocusedTextBox",
		Returns: types.NilInstance,
	},
	desc.Function{
		Name: "GetGamepadConnected",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "GetGamepadState",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetKeysPressed",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetLastInputType",
		Returns: *new(enum.UserInputType),
	},
	desc.Function{
		Name:    "GetMouseButtonsPressed",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:    "GetMouseDelta",
		Returns: *new(types.Vector2),
	},
	desc.Function{
		Name:    "GetMouseLocation",
		Returns: *new(types.Vector2),
	},
	desc.Function{
		Name:    "GetNavigationGamepads",
		Returns: *new(types.Array),
	},
	desc.Function{
		Name:     "GetPlatform",
		Returns:  *new(enum.Platform),
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "GetStringForKeyCode",
		Parameters: []desc.Parameter{
			{
				Name: "keyCode",
				Type: *new(enum.KeyCode),
			},
		},
		Returns: *new(types.String),
	},
	desc.Function{
		Name: "GetSupportedGamepadKeyCodes",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Array),
	},
	desc.Function{
		Name: "GetUserCFrame",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
		},
		Returns: *new(types.CFrame),
	},
	desc.Function{
		Name: "IsGamepadButtonDown",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "gamepadKeyCode",
				Type: *new(enum.KeyCode),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsKeyDown",
		Parameters: []desc.Parameter{
			{
				Name: "keyCode",
				Type: *new(enum.KeyCode),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsMouseButtonPressed",
		Parameters: []desc.Parameter{
			{
				Name: "mouseButton",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{
		Name: "IsNavigationGamepad",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadEnum",
				Type: *new(enum.UserInputType),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "RecenterUserHeadCFrame"},
	desc.Function{
		Name: "SendAppUISizes",
		Parameters: []desc.Parameter{
			{
				Name: "statusBarSize",
				Type: *new(types.Vector2),
			},
			{
				Name: "navBarSize",
				Type: *new(types.Vector2),
			},
			{
				Name: "bottomBarSize",
				Type: *new(types.Vector2),
			},
			{
				Name: "rightBarSize",
				Type: *new(types.Vector2),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SetNavigationGamepad",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadEnum",
				Type: *new(enum.UserInputType),
			},
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "DeviceAccelerationChanged",
		Parameters: []desc.Parameter{
			{
				Name: "acceleration",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "DeviceGravityChanged",
		Parameters: []desc.Parameter{
			{
				Name: "gravity",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "DeviceRotationChanged",
		Parameters: []desc.Parameter{
			{
				Name: "rotation",
				Type: types.NilInstance,
			},
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
		},
	},
	desc.Event{
		Name: "GamepadConnected",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
		},
	},
	desc.Event{
		Name: "GamepadDisconnected",
		Parameters: []desc.Parameter{
			{
				Name: "gamepadNum",
				Type: *new(enum.UserInputType),
			},
		},
	},
	desc.Event{
		Name: "InputBegan",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "InputChanged",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "InputEnded",
		Parameters: []desc.Parameter{
			{
				Name: "input",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{Name: "JumpRequest"},
	desc.Event{
		Name: "LastInputTypeChanged",
		Parameters: []desc.Parameter{
			{
				Name: "lastInputType",
				Type: *new(enum.UserInputType),
			},
		},
	},
	desc.Event{
		Name: "PointerAction",
		Parameters: []desc.Parameter{
			{
				Name: "wheel",
				Type: *new(types.Float),
			},
			{
				Name: "pan",
				Type: *new(types.Vector2),
			},
			{
				Name: "pinch",
				Type: *new(types.Float),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "StatusBarTapped",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "TextBoxFocusReleased",
		Parameters: []desc.Parameter{
			{
				Name: "textboxReleased",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "TextBoxFocused",
		Parameters: []desc.Parameter{
			{
				Name: "textboxFocused",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "TouchEnded",
		Parameters: []desc.Parameter{
			{
				Name: "touch",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchLongPress",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchMoved",
		Parameters: []desc.Parameter{
			{
				Name: "touch",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchPan",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "totalTranslation",
				Type: *new(types.Vector2),
			},
			{
				Name: "velocity",
				Type: *new(types.Vector2),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchPinch",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "scale",
				Type: *new(types.Float),
			},
			{
				Name: "velocity",
				Type: *new(types.Float),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchRotate",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "rotation",
				Type: *new(types.Float),
			},
			{
				Name: "velocity",
				Type: *new(types.Float),
			},
			{
				Name: "state",
				Type: *new(enum.UserInputState),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchStarted",
		Parameters: []desc.Parameter{
			{
				Name: "touch",
				Type: types.NilInstance,
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchSwipe",
		Parameters: []desc.Parameter{
			{
				Name: "swipeDirection",
				Type: *new(enum.SwipeDirection),
			},
			{
				Name: "numberOfTouches",
				Type: *new(types.Int),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchTap",
		Parameters: []desc.Parameter{
			{
				Name: "touchPositions",
				Type: *new(types.Array),
			},
			{
				Name: "gameProcessedEvent",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "TouchTapInWorld",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name: "processedByUI",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "UserCFrameChanged",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
			{
				Name: "value",
				Type: *new(types.CFrame),
			},
		},
	},
	desc.Event{Name: "WindowFocusReleased"},
	desc.Event{Name: "WindowFocused"},
)

var VRService = desc.NewClass("VRService", Instance,
	desc.NotCreatable|desc.Service,
	desc.Property{
		Name:  "GuiInputUserCFrame",
		Value: *new(enum.UserCFrame),
	},
	desc.Property{
		Flags:         desc.ReadOnly | desc.NotReplicated,
		Name:          "VRDeviceName",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "VREnabled",
		Value: *new(types.Bool),
	},
	desc.Function{
		Name: "GetTouchpadMode",
		Parameters: []desc.Parameter{
			{
				Name: "pad",
				Type: *new(enum.VRTouchpad),
			},
		},
		Returns: *new(enum.VRTouchpadMode),
	},
	desc.Function{
		Name: "GetUserCFrame",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
		},
		Returns: *new(types.CFrame),
	},
	desc.Function{
		Name: "GetUserCFrameEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
		},
		Returns: *new(types.Bool),
	},
	desc.Function{Name: "RecenterUserHeadCFrame"},
	desc.Function{
		Name: "RequestNavigation",
		Parameters: []desc.Parameter{
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
			{
				Name: "inputUserCFrame",
				Type: *new(enum.UserCFrame),
			},
		},
	},
	desc.Function{
		Name: "SetTouchpadMode",
		Parameters: []desc.Parameter{
			{
				Name: "pad",
				Type: *new(enum.VRTouchpad),
			},
			{
				Name: "mode",
				Type: *new(enum.VRTouchpadMode),
			},
		},
	},
	desc.Event{
		Name: "NavigationRequested",
		Parameters: []desc.Parameter{
			{
				Name: "cframe",
				Type: *new(types.CFrame),
			},
			{
				Name: "inputUserCFrame",
				Type: *new(enum.UserCFrame),
			},
		},
	},
	desc.Event{
		Name: "TouchpadModeChanged",
		Parameters: []desc.Parameter{
			{
				Name: "pad",
				Type: *new(enum.VRTouchpad),
			},
			{
				Name: "mode",
				Type: *new(enum.VRTouchpadMode),
			},
		},
	},
	desc.Event{
		Name: "UserCFrameChanged",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
			{
				Name: "value",
				Type: *new(types.CFrame),
			},
		},
	},
	desc.Event{
		Name: "UserCFrameEnabled",
		Parameters: []desc.Parameter{
			{
				Name: "type",
				Type: *new(enum.UserCFrame),
			},
			{
				Name: "enabled",
				Type: *new(types.Bool),
			},
		},
	},
)

var ValueBase = desc.NewClass("ValueBase", Instance,
	desc.NotCreatable,
)

var BinaryStringValue = desc.NewClass("BinaryStringValue", ValueBase,
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.BinaryString),
			},
		},
	},
)

var BoolValue = desc.NewClass("BoolValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Bool),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Bool),
			},
		},
	},
)

var BrickColorValue = desc.NewClass("BrickColorValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.BrickColor),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.BrickColor),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.BrickColor),
			},
		},
	},
)

var CFrameValue = desc.NewClass("CFrameValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.CFrame),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.CFrame),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.CFrame),
			},
		},
	},
)

var Color3Value = desc.NewClass("Color3Value", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Color3),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Color3),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Color3),
			},
		},
	},
)

var DoubleConstrainedValue = desc.NewClass("DoubleConstrainedValue", ValueBase,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "ConstrainedValue",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxValue",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinValue",
		Value: *new(types.Double),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Value",
		Value: *new(types.Double),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
)

var IntConstrainedValue = desc.NewClass("IntConstrainedValue", ValueBase,
	desc.Property{
		Flags: desc.Hidden | desc.NotReplicated | desc.CanLoad,
		Name:  "ConstrainedValue",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MaxValue",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "MinValue",
		Value: *new(types.Int64),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Value",
		Value: *new(types.Int64),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Int64),
			},
		},
	},
)

var IntValue = desc.NewClass("IntValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Int64),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Int64),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Int64),
			},
		},
	},
)

var NumberValue = desc.NewClass("NumberValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Double),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Double),
			},
		},
	},
)

var ObjectValue = desc.NewClass("ObjectValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: types.NilInstance,
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: types.NilInstance,
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: types.NilInstance,
			},
		},
	},
)

var RayValue = desc.NewClass("RayValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Ray),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Ray),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Ray),
			},
		},
	},
)

var StringValue = desc.NewClass("StringValue", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.String),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.String),
			},
		},
	},
)

var Vector3Value = desc.NewClass("Vector3Value", ValueBase,
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Value",
		Value: *new(types.Vector3),
	},
	desc.Event{
		Name: "Changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Vector3),
			},
		},
	},
	desc.Event{
		Name: "changed",
		Parameters: []desc.Parameter{
			{
				Name: "value",
				Type: *new(types.Vector3),
			},
		},
	},
)

var VersionControlService = desc.NewClass("VersionControlService", Instance,
	desc.NotCreatable|desc.Service,
)

var VirtualInputManager = desc.NewClass("VirtualInputManager", Instance,
	desc.Service,
	desc.Property{
		Flags:         desc.NotReplicated | desc.CanLoad,
		Name:          "AdditionalLuaState",
		ReadSecurity:  desc.RobloxScriptSecurity,
		Value:         *new(types.String),
		WriteSecurity: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "Dump",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "HandleGamepadAxisInput",
		Parameters: []desc.Parameter{
			{
				Name: "objectId",
				Type: *new(types.Int),
			},
			{
				Name: "keyCode",
				Type: *new(enum.KeyCode),
			},
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name: "z",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "HandleGamepadButtonInput",
		Parameters: []desc.Parameter{
			{
				Name: "deviceId",
				Type: *new(types.Int),
			},
			{
				Name: "keyCode",
				Type: *new(enum.KeyCode),
			},
			{
				Name: "buttonState",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "HandleGamepadConnect",
		Parameters: []desc.Parameter{
			{
				Name: "deviceId",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "HandleGamepadDisconnect",
		Parameters: []desc.Parameter{
			{
				Name: "deviceId",
				Type: *new(types.Int),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendAccelerometerEvent",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name: "z",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendGravityEvent",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name: "z",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendGyroscopeEvent",
		Parameters: []desc.Parameter{
			{
				Name: "quatX",
				Type: *new(types.Float),
			},
			{
				Name: "quatY",
				Type: *new(types.Float),
			},
			{
				Name: "quatZ",
				Type: *new(types.Float),
			},
			{
				Name: "quatW",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendKeyEvent",
		Parameters: []desc.Parameter{
			{
				Name: "isPressed",
				Type: *new(types.Bool),
			},
			{
				Name: "keyCode",
				Type: *new(enum.KeyCode),
			},
			{
				Name: "isRepeatedKey",
				Type: *new(types.Bool),
			},
			{
				Name: "pluginGui",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendMouseButtonEvent",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Int),
			},
			{
				Name: "y",
				Type: *new(types.Int),
			},
			{
				Name: "mouseButton",
				Type: *new(types.Int),
			},
			{
				Name: "isDown",
				Type: *new(types.Bool),
			},
			{
				Name: "pluginGui",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendMouseMoveEvent",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name: "pluginGui",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendMouseWheelEvent",
		Parameters: []desc.Parameter{
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
			{
				Name: "isForwardScroll",
				Type: *new(types.Bool),
			},
			{
				Name: "pluginGui",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendTextInputCharacterEvent",
		Parameters: []desc.Parameter{
			{
				Name: "str",
				Type: *new(types.String),
			},
			{
				Name: "pluginGui",
				Type: types.NilInstance,
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "SendTouchEvent",
		Parameters: []desc.Parameter{
			{
				Name: "touchId",
				Type: *new(types.Int64),
			},
			{
				Name: "state",
				Type: *new(types.Int),
			},
			{
				Name: "x",
				Type: *new(types.Float),
			},
			{
				Name: "y",
				Type: *new(types.Float),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "StartPlaying",
		Parameters: []desc.Parameter{
			{
				Name: "fileName",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "StartRecording",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name:     "StopRecording",
		Security: desc.RobloxScriptSecurity,
	},
	desc.Function{
		Name: "sendRobloxEvent",
		Parameters: []desc.Parameter{
			{
				Name: "namespace",
				Type: *new(types.String),
			},
			{
				Name: "detail",
				Type: *new(types.String),
			},
			{
				Name: "detailType",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "PlaybackCompleted",
		Parameters: []desc.Parameter{
			{
				Name: "additionalLuaState",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
	desc.Event{
		Name: "RecordingCompleted",
		Parameters: []desc.Parameter{
			{
				Name: "result",
				Type: *new(types.String),
			},
		},
		Security: desc.RobloxScriptSecurity,
	},
)

var VirtualUser = desc.NewClass("VirtualUser", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
	desc.Function{
		Name: "Button1Down",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "Button1Up",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "Button2Down",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "Button2Up",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:     "CaptureController",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "ClickButton1",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "ClickButton2",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "MoveMouse",
		Parameters: []desc.Parameter{
			{
				Name: "position",
				Type: *new(types.Vector2),
			},
			{
				Name:     "camera",
				Optional: true,
				Type:     types.NewCFrame(),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "SetKeyDown",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "SetKeyUp",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:     "StartRecording",
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name:     "StopRecording",
		Returns:  *new(types.String),
		Security: desc.LocalUserSecurity,
	},
	desc.Function{
		Name: "TypeKey",
		Parameters: []desc.Parameter{
			{
				Name: "key",
				Type: *new(types.String),
			},
		},
		Security: desc.LocalUserSecurity,
	},
)

var Visit = desc.NewClass("Visit", Instance,
	desc.NotCreatable|desc.Service|desc.NotReplicated,
)

var WeldConstraint = desc.NewClass("WeldConstraint", Instance,
	desc.Property{
		Flags: desc.ReadOnly | desc.NotReplicated | desc.CanSave,
		Name:  "Active",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.CanLoad | desc.CanSave,
		Name:  "Enabled",
		Value: *new(types.Bool),
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Part0",
		Value: types.NilInstance,
	},
	desc.Property{
		Flags: desc.NotReplicated | desc.CanLoad,
		Name:  "Part1",
		Value: types.NilInstance,
	},
)
